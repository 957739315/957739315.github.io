<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Node学习笔记01</title>
      <link href="/2019/10/09/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Node/Node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
      <url>/2019/10/09/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Node/Node%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之后的学习笔记是基于学习<a href="https://www.itying.com/goods-665.html" target="_blank" rel="noopener">2018年Node.js入门实战视频教程（39讲-IT营大地）</a>而记录的，如果存在问题欢迎大家指正！！</p><h1 id="一、简介-安装-开发工具配置"><a href="#一、简介-安装-开发工具配置" class="headerlink" title="一、简介 安装 开发工具配置"></a>一、简介 安装 开发工具配置</h1><h2 id="NodeJs-介绍"><a href="#NodeJs-介绍" class="headerlink" title="NodeJs 介绍"></a>NodeJs 介绍</h2><ul><li>JavaScript 运行环境</li><li>与后端语言 PHP JSP Python Ruby 等平起平坐</li><li>基于 V8 引擎（ Google 发布的开源 JavaScript 引擎）</li></ul><p><strong>nodejs 之父 – Ryan Dahl</strong></p><p><img src="/.io//Ryan-Dahl.jpg" alt="Ryan Dahl"></p><h2 id="NodeJs-优势"><a href="#NodeJs-优势" class="headerlink" title="NodeJs 优势"></a>NodeJs 优势</h2><ul><li><p>使用的是 js 语法，方便前端程序员开发后台</p></li><li><p>超强的高并发能力</p><blockquote><p>在 Java、PHP 或者 .net 等服务器端语言中，会为每一个客户端连接创建一个新的线程。而每个线程需要耗费大约 2MB 内存。也就是说，理论上，一个 8GB 内存的服务器可以同时连接的最大用户数为 4000 个左右。</p></blockquote><blockquote><p>NodeJs 仅使用一个线程。当有用户连接了，就触发一个 内部事件，通过非阻塞 I/O、事件驱动机制，让 Node.js 程序宏观上也是并行的。使用 Node.js，一个 8GB 内存的服务器，可以同时处理超过 4 万用户的连接。</p></blockquote></li><li><p>实现高性能服务器</p><blockquote><p>V8 JavaScript 引擎是使用 C++ 语言开发的，使其执行效率接近 C 语言。</p></blockquote></li><li><p>开发周期端、开发成本低、学习成本低</p></li></ul><h2 id="NodeJs-适用场景"><a href="#NodeJs-适用场景" class="headerlink" title="NodeJs 适用场景"></a>NodeJs 适用场景</h2><p><img src="/.io//node-scene.png" alt="NodeJs 适用场景"></p><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p><a href="http://nodejs.cn/api/" target="_blank" rel="noopener">nodejs 官方文档</a></p><p><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">node 安装</a></p><p><a href="https://github.com/sqreen/awesome-nodejs-projects" target="_blank" rel="noopener">推荐 nodejs 项目</a></p><h1 id="二、Http模块-Url模块-自启动工具"><a href="#二、Http模块-Url模块-自启动工具" class="headerlink" title="二、Http模块 Url模块 自启动工具"></a>二、Http模块 Url模块 自启动工具</h1><h2 id="Http-模块"><a href="#Http-模块" class="headerlink" title="Http 模块"></a>Http 模块</h2><p>如果我们使用PHP来编写后端的代码时，需要 Apache 或者 Nginx 的 HTTP 服务器，并配上 mod_php5 模块和 php-cgi，来处理客户端的请求相应。<br>不过对 Node.js 来说，概念完全不一样了。使用 Node.js 时，我们不仅仅 在实现一个应用，同时还实现了整个 HTTP 服务器。</p><h2 id="Url模块"><a href="#Url模块" class="headerlink" title="Url模块"></a>Url模块</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url.parse(urlObject)  <span class="comment">// 解析 URL </span></span><br><span class="line">url.parse(urlObject, <span class="literal">true</span>)  <span class="comment">//  对 url 的 query 参数提取出为 json</span></span><br><span class="line">url.format(urlObject)  <span class="comment">// 是上面 url.parse() 操作的逆向操作</span></span><br><span class="line">url.resolve(<span class="keyword">from</span>, to)  <span class="comment">// 添加或者替换地址</span></span><br></pre></td></tr></table></figure><p><img src="/.io//url.png" alt="url模块"></p><h2 id="自启动工具"><a href="#自启动工具" class="headerlink" title="自启动工具"></a>自启动工具</h2><p>修改代码后，能自动重新运行代码</p><h3 id="supervisor-工具"><a href="#supervisor-工具" class="headerlink" title="supervisor 工具"></a>supervisor 工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add supervisor -g</span><br><span class="line">supervisor server.js</span><br></pre></td></tr></table></figure><h3 id="nodemon-工具"><a href="#nodemon-工具" class="headerlink" title="nodemon 工具"></a>nodemon 工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add nodemon -g</span><br><span class="line">nodemon server.js</span><br></pre></td></tr></table></figure><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.引入http模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> url=<span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.用http模块创建服务</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     req获取url信息   （request）</span></span><br><span class="line"><span class="comment">     res 浏览器返回响应信息 （response）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送 HTTP 头部</span></span><br><span class="line"><span class="comment">// HTTP 状态值: 200 : OK</span></span><br><span class="line"><span class="comment">//设置 HTTP 头部，状态码是 200，文件类型是 html，字符集是 utf-8</span></span><br><span class="line"></span><br><span class="line">    res.writeHead(<span class="number">200</span>,&#123;<span class="string">"Content-Type"</span>:<span class="string">"text/html;charset='utf-8'"</span>&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(req.url!=<span class="string">'/favicon.ico'</span>)&#123;</span><br><span class="line">        <span class="comment">//http://localhost:8001/news?aid=123</span></span><br><span class="line">        <span class="comment">//console.log(req.url);  //返回  /news?aid=123</span></span><br><span class="line">        <span class="keyword">var</span> result=url.parse(req.url,<span class="literal">true</span>);  <span class="comment">//第一个参数是地址    第二个参数是true的话表示把get传值转换成对象</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'aid='</span>+result.query.aid);  <span class="comment">/*获取url的get传值*/</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'cid='</span>+result.query.cid);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res.write(<span class="string">'你好 nodejs'</span>);</span><br><span class="line">    res.write(<span class="string">'我是第一个nodejs程序'</span>);</span><br><span class="line">    res.end(); <span class="comment">/*结束响应*/</span></span><br><span class="line"></span><br><span class="line">&#125;).listen(<span class="number">8001</span>);</span><br></pre></td></tr></table></figure><h1 id="三、CommonJs-和-Nodejs-模块、自定义模块"><a href="#三、CommonJs-和-Nodejs-模块、自定义模块" class="headerlink" title="三、CommonJs 和 Nodejs 模块、自定义模块"></a>三、CommonJs 和 Nodejs 模块、自定义模块</h1><h2 id="CommonJS-介绍"><a href="#CommonJS-介绍" class="headerlink" title="CommonJS 介绍"></a>CommonJS 介绍</h2><p>CommonJS 规范的提出，主要是为了弥补当前 JavaScript 没有标准的缺陷。它的终极目标就是：提供一个类似 Python，Ruby 和 Java 语言的标准库，而不只是停留在小脚本程序的阶段。</p><h2 id="Nodejs-模块"><a href="#Nodejs-模块" class="headerlink" title="Nodejs 模块"></a>Nodejs 模块</h2><p><strong>1. 内置模块</strong><br>HTTP 模块 、URL 模块、Fs模块都是 nodejs 内置的核心模块，可以直接引入使用</p><p><strong>2. 自定义模块</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tools.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tools=&#123;</span><br><span class="line">add:<span class="function"><span class="keyword">function</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x+y;</span><br><span class="line">    &#125;,</span><br><span class="line">    sayHello:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'你好 nodejs'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//exports.tools=tools; // 调用的时候需要写成 tools.tools.add() ，麻烦</span></span><br><span class="line"><span class="built_in">module</span>.exports=tools;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// commonjs.js</span></span><br><span class="line"><span class="keyword">var</span> tools=<span class="built_in">require</span>(<span class="string">'./tools'</span>);   <span class="comment">/*省略.js也是可以的*/</span></span><br><span class="line"><span class="built_in">console</span>.log(tools.add(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line"><span class="built_in">console</span>.log(tools.sayHello());</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 1.我们可以把公共的功能 抽离成为一个单独的 js  文件 作为一个模块，默认情况下面这</span></span><br><span class="line"><span class="comment"> 个模块里面的方法或者属性，外面是没法访问的。如果要让外部可以访问模块里面的方法或</span></span><br><span class="line"><span class="comment"> 者属性，就必须在模块里面通过 exports 或者 module.exports 暴露属性或者方法。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> 2. 在需要使用这些模块的文件中，通过 require 的方式引入这个模块。这个时候就可以</span></span><br><span class="line"><span class="comment"> 使用模块里面暴露的属性和方法。</span></span><br><span class="line"><span class="comment">* */</span></span><br></pre></td></tr></table></figure><h2 id="自定义模块"><a href="#自定义模块" class="headerlink" title="自定义模块"></a>自定义模块</h2><p><strong>1. 直接引入路径</strong></p><p>在 node_modules 文件夹下新建 bar/bar.js 文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">'this is bar下面的bar.js 在 node_modules'</span>;</span><br><span class="line">exports.str=str;  <span class="comment">/*暴露模块*/</span></span><br><span class="line"><span class="comment">//module.exports=str;</span></span><br></pre></td></tr></table></figure><p>引入模块</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//var bar=require('bar/bar.js');</span></span><br><span class="line"><span class="keyword">var</span> bar=<span class="built_in">require</span>(<span class="string">'bar/bar'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*bar默认在目录下面没有，没有的话nodejs会在node_modules里面找这个模块 */</span></span><br><span class="line"><span class="built_in">console</span>.log(bar.str);</span><br></pre></td></tr></table></figure><p><strong>2. 直接引入模块名</strong></p><ul><li>在 node_modules 文件夹下新建 bar/bar.js 文件</li><li>在 bar 文件夹目录下运行 <code>npm init --yes</code> , 生成 package.json 文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//var bar=require('bar/bar.js');</span></span><br><span class="line"><span class="keyword">var</span> bar=<span class="built_in">require</span>(<span class="string">'bar'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//bar 在根目录不存在，去node_modules ，找到了bar文件夹。 bar文件夹下面有package.json ，</span></span><br><span class="line"><span class="comment">//找 package.json 入口文件 "main": "bar.js",</span></span><br><span class="line"><span class="built_in">console</span>.log(bar.str);</span><br><span class="line"><span class="comment">//package.json      npm init  --yse       进入这个目录运行这个命令</span></span><br></pre></td></tr></table></figure><h1 id="四、Nodejs-包与-NPM-第三方模块安装和-package-json-以及-CNPM"><a href="#四、Nodejs-包与-NPM-第三方模块安装和-package-json-以及-CNPM" class="headerlink" title="四、Nodejs 包与 NPM 第三方模块安装和 package.json 以及 CNPM"></a>四、Nodejs 包与 NPM 第三方模块安装和 package.json 以及 CNPM</h1><h2 id="包与-NPM"><a href="#包与-NPM" class="headerlink" title="包与 NPM"></a>包与 NPM</h2><p>Nodejs 中第三方模块由包组成，可以通过包来对一组具有相互依 赖关系的模块进行统一管理。 </p><p><img src="/.io//pack-define.png" alt="包与模块的关系"></p><p>完全符合 CommonJs 规范的包目录一般包含如下这些文件。</p><ul><li>package.json：包描述文件。</li><li>bin :用于存放可执行二进制文件的目录。</li><li>lib :用于存放 JavaScript 代码的目录。</li><li>doc :用于存放文档的目录。</li></ul><h2 id="NPM-介绍"><a href="#NPM-介绍" class="headerlink" title="NPM 介绍"></a>NPM 介绍</h2><p>NPM 是世界上最大的开放源代码的生态系统。所有包都可以在<a href="https://www.npmjs.com/" target="_blank" rel="noopener">https://www.npmjs.com/</a>找到。</p><p>使用场景：</p><ul><li>允许用户从 NPM 服务器下载别人编写的第三方包到本地使用。</li><li>允许用户从 NPM 服务器下载并安装别人编写的命令行程序(工具)到本地使用。</li><li>允许用户将自己编写的包或命令行程序上传到 NPM 服务器供别人使用。</li></ul><h2 id="NPM-命令详情"><a href="#NPM-命令详情" class="headerlink" title="NPM 命令详情"></a>NPM 命令详情</h2><p>查看 npm 版本：  <code>npm -v</code></p><p>安装模块：  <code>npm install 模块名</code></p><p>卸载模块：  <code>npm uninstall 模块名</code></p><p>查看已安装的 node 包：  <code>npm list</code></p><p>查看某个包的版本：  <code>npm info 模块名</code></p><p>指定版本安装：  <code>npm install jquery@1.8.0</code></p><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><p><strong>1. 创建 package.json</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br><span class="line">npm init -yes</span><br></pre></td></tr></table></figure><p><strong>2. 安装模块并把模块写入 package.json</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install 模块 --save-dev // 自动更新 dependencies 字段值</span><br><span class="line">npm install 模块 --save // 自动更新 devDependencies 字段值</span><br></pre></td></tr></table></figure><p>dependencie   配置当前程序所依赖的其他包。</p><p>devDependencie  配置当前程序所依赖的其他包，只会下载模块，而不下载这些模块的 测试和文档框架。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"dependencies": &#123;</span><br><span class="line">    "ejs": "^2.3.4",</span><br><span class="line">    "express": "^4.13.3",</span><br><span class="line">    "formidable": "^1.0.17"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>^表示第一位版本号不变，后面两位取最新的。</strong></p><p><strong>~表示前两位不变，最后一个取最新。</strong></p><p>*表示全部取最新。</p></blockquote><h2 id="安装淘宝镜像"><a href="#安装淘宝镜像" class="headerlink" title="安装淘宝镜像"></a>安装淘宝镜像</h2><p><a href="https://npm.taobao.org/" target="_blank" rel="noopener">淘宝 npm 镜像官网</a></p><p>淘宝 NPM 镜像是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频 率目前为 10 分钟 一次以保证尽量与官方服务同步。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 安装命令</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h1 id="五、nodejs-fs-模块"><a href="#五、nodejs-fs-模块" class="headerlink" title="五、nodejs fs 模块"></a>五、nodejs fs 模块</h1><h2 id="fs-stat-检测是文件还是目录"><a href="#fs-stat-检测是文件还是目录" class="headerlink" title="fs.stat  检测是文件还是目录"></a>fs.stat  检测是文件还是目录</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line">fs.stat(<span class="string">'html'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,stats</span>)</span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(err)&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(err);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">'文件：'</span>+stats.isFile());</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">'目录：'</span>+stats.isDirectory());</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="fs-mkdir-创建目录"><a href="#fs-mkdir-创建目录" class="headerlink" title="fs.mkdir  创建目录"></a>fs.mkdir  创建目录</h2><p><strong>参数说明：</strong><br>path： <code>&lt;string&gt;</code> | <code>&lt;Buffer&gt;</code> | <code>&lt;URL&gt;</code> 路径</p><p>options： 配置<br>    recursive <boolean> 默认值: false。  是否应创建父文件夹<br>    mode <integer> Windows 上不支持。默认值: 0o777。 目录权限（读写权限）</integer></boolean></p><p>callback： <function> 回调<br>    err <error> 异常参数</error></function></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fs.mkdir(<span class="string">'css'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(err)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(err);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">'创建目录成功'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="fs-writeFile-创建写入文件"><a href="#fs-writeFile-创建写入文件" class="headerlink" title="fs.writeFile  创建写入文件"></a>fs.writeFile  创建写入文件</h2><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">filename</td><td align="center">String</td><td align="center">文件名称</td></tr><tr><td align="center">data</td><td align="center">String / Buffer</td><td align="center">将要写入的内容，可以使字符串 或 buffer数据。</td></tr><tr><td align="center">options</td><td align="center">Object</td><td align="center">option数组对象，包含：</td></tr><tr><td align="center">encoding</td><td align="center">string</td><td align="center">可选值，默认 ‘utf8′，当data使buffer时，该值应该为 ignored。</td></tr><tr><td align="center">mode</td><td align="center">Number</td><td align="center">文件读写权限，默认值 438</td></tr><tr><td align="center">flag</td><td align="center">String</td><td align="center">默认值 ‘w’</td></tr><tr><td align="center">callback</td><td align="center">Function</td><td align="center">回调，传递一个异常参数err。</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fs.writeFile(<span class="string">'t.txt'</span>,<span class="string">'你好nodejs 覆盖'</span>,<span class="string">'utf8'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(err)&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(err);</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">'写入成功'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="fs-appendFile-追加文件"><a href="#fs-appendFile-追加文件" class="headerlink" title="fs.appendFile 追加文件"></a>fs.appendFile 追加文件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fs.appendFile(<span class="string">'t1.txt'</span>,<span class="string">'这是写入的内容'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(err)&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(err);</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">'写入成功'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="fs-readFile-读取文件"><a href="#fs-readFile-读取文件" class="headerlink" title="fs.readFile 读取文件"></a>fs.readFile 读取文件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(<span class="string">'t1.txt'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(err)&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(err);</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//console.log(data);</span></span><br><span class="line">  <span class="built_in">console</span>.log(data.toString());</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="fs-readdir读取目录"><a href="#fs-readdir读取目录" class="headerlink" title="fs.readdir读取目录"></a>fs.readdir读取目录</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 把目录下面的文件和文件夹都获取到</span></span><br><span class="line">fs.readdir(<span class="string">'html'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(err)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="fs-rename-重命名"><a href="#fs-rename-重命名" class="headerlink" title="fs.rename 重命名"></a>fs.rename 重命名</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.改名  2.剪切文件</span></span><br><span class="line">fs.rename(<span class="string">'html/css/basic.css'</span>,<span class="string">'html/style.css'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(err);</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">'剪切成功'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="fs-rmdir-删除目录"><a href="#fs-rmdir-删除目录" class="headerlink" title="fs.rmdir  删除目录"></a>fs.rmdir  删除目录</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只能删除目录</span></span><br><span class="line">fs.rmdir(<span class="string">'t'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">     <span class="keyword">if</span>(err)&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">'删除目录成功'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="fs-unlink删除文件"><a href="#fs-unlink删除文件" class="headerlink" title="fs.unlink删除文件"></a>fs.unlink删除文件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fs.unlink(<span class="string">'index.txt'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'删除文件成功'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="判断服务器是否存在某个目录，不存在则创建"><a href="#判断服务器是否存在某个目录，不存在则创建" class="headerlink" title="判断服务器是否存在某个目录，不存在则创建"></a>判断服务器是否存在某个目录，不存在则创建</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.判断服务器上面有没有upload目录。没有创建这个目录。   （图片上传）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//要用fs目录必须得引入fs</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line">fs.stat(<span class="string">'upload'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,stats</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;  <span class="comment">/*没有这个目录*/</span></span><br><span class="line">           fs.mkdir(<span class="string">'upload'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">               <span class="keyword">if</span>(error)&#123;</span><br><span class="line"></span><br><span class="line">                   <span class="built_in">console</span>.log(error);</span><br><span class="line">                   <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="built_in">console</span>.log(<span class="string">'创建成功'</span>);</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">'目录已经存在'</span>);</span><br><span class="line">           <span class="built_in">console</span>.log(stats.isDirectory());</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="打印某个目录下的所有目录"><a href="#打印某个目录下的所有目录" class="headerlink" title="打印某个目录下的所有目录"></a>打印某个目录下的所有目录</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2. 找出html目录下面的所有的目录，然后打印出来</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//错误写法</span></span><br><span class="line"><span class="comment">// fs.readdir('html',function(err,files)&#123;</span></span><br><span class="line"><span class="comment">//     if(err)&#123;</span></span><br><span class="line"><span class="comment">//             console.log(error);</span></span><br><span class="line"><span class="comment">//     &#125;else&#123;  /*判断是目录还是文件夹*/</span></span><br><span class="line"><span class="comment">//         console.log(files);  /*数组*/</span></span><br><span class="line"><span class="comment">//         for(var i=0;i&lt;files.length;i++)&#123;</span></span><br><span class="line"><span class="comment">//             console.log(files[i]);</span></span><br><span class="line"><span class="comment">//             fs.stat(files[i],function(error,stats)&#123;  /*循环判断是目录还是文件  ---异步 错误写法*/</span></span><br><span class="line"><span class="comment">//                     console.log(files[i]);</span></span><br><span class="line"><span class="comment">//             &#125;)</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//打印出什么   3 3  3</span></span><br><span class="line"><span class="comment">//for(var i=0;i&lt;3;i++)&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    setTimeout(function()&#123;</span></span><br><span class="line"><span class="comment">//        console.log(i);</span></span><br><span class="line"><span class="comment">//    &#125;,100)</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//正确的写法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> filesArr=[];</span><br><span class="line">fs.readdir(<span class="string">'html'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,files</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;  <span class="comment">/*判断是目录还是文件夹*/</span></span><br><span class="line">        <span class="comment">//console.log(files);  /*数组*/</span></span><br><span class="line">        (<span class="function"><span class="keyword">function</span> <span class="title">getFile</span>(<span class="params">i</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==files.length)&#123;  <span class="comment">/*循环结束*/</span></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'目录：'</span>);</span><br><span class="line">                <span class="built_in">console</span>.log(filesArr);   <span class="comment">/*打印出所有的目录*/</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//files[i]  =   css  js   news.html</span></span><br><span class="line">            <span class="comment">//注意：目录</span></span><br><span class="line">            fs.stat(<span class="string">'html/'</span>+files[i],<span class="function"><span class="keyword">function</span>(<span class="params">error,stats</span>)</span>&#123;  <span class="comment">/*循环判断是目录还是文件  ---异步 错误写法*/</span></span><br><span class="line">                <span class="keyword">if</span>(stats.isDirectory())&#123; <span class="comment">/*目录*/</span></span><br><span class="line">                    filesArr.push (files[i]);  <span class="comment">/*保存数据*/</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//递归掉用</span></span><br><span class="line">                getFile(i+<span class="number">1</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)(<span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="fs-createReadStream-从文件流中读取数据"><a href="#fs-createReadStream-从文件流中读取数据" class="headerlink" title="fs.createReadStream 从文件流中读取数据"></a>fs.createReadStream 从文件流中读取数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//流的方式读取文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> readStream=fs.createReadStream(<span class="string">'input.txt'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> str=<span class="string">''</span>;<span class="comment">/*保存数据*/</span></span><br><span class="line"><span class="keyword">var</span> count=<span class="number">0</span>;  <span class="comment">/*次数*/</span></span><br><span class="line">readStream.on(<span class="string">'data'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>)</span>&#123;</span><br><span class="line">    str+=chunk;</span><br><span class="line">    count++;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取完成</span></span><br><span class="line">readStream.on(<span class="string">'end'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(count);</span><br><span class="line">    <span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取失败</span></span><br><span class="line">readStream.on(<span class="string">'error'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="fs-createWriteStream-写入文件"><a href="#fs-createWriteStream-写入文件" class="headerlink" title="fs.createWriteStream  写入文件"></a>fs.createWriteStream  写入文件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"><span class="keyword">var</span> data = <span class="string">'我是从数据库获取的数据，我要保存起来11\n'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个可以写入的流，写入到文件 output.txt 中</span></span><br><span class="line"><span class="keyword">var</span> writerStream = fs.createWriteStream(<span class="string">'output.txt'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">writerStream.write(data,<span class="string">'utf8'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//标记写入完成</span></span><br><span class="line">writerStream.end();</span><br><span class="line">writerStream.on(<span class="string">'finish'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'写入完成'</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//失败</span></span><br><span class="line">writerStream.on(<span class="string">'error'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'写入失败'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="读写入管道流"><a href="#读写入管道流" class="headerlink" title="读写入管道流"></a>读写入管道流</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个可读流</span></span><br><span class="line"><span class="keyword">var</span> readerStream = fs.createReadStream(<span class="string">'input.txt'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个可写流</span></span><br><span class="line"><span class="keyword">var</span> writerStream = fs.createWriteStream(<span class="string">'output.txt'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 管道读写操作</span></span><br><span class="line"><span class="comment">// 读取 input.txt 文件内容，并将内容写入到 output.txt 文件中</span></span><br><span class="line">readerStream.pipe(writerStream);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"程序执行完毕"</span>);</span><br></pre></td></tr></table></figure><h1 id="六、利用HTTP模块-URl模块-Path模块-Fs模块创建一个静态WEB服务器"><a href="#六、利用HTTP模块-URl模块-Path模块-Fs模块创建一个静态WEB服务器" class="headerlink" title="六、利用HTTP模块 URl模块 Path模块 Fs模块创建一个静态WEB服务器"></a>六、利用HTTP模块 URl模块 Path模块 Fs模块创建一个静态WEB服务器</h1><p><strong>server.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//引入http模块</span></span><br><span class="line"><span class="keyword">var</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//fs模块</span></span><br><span class="line"><span class="keyword">var</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//path模块</span></span><br><span class="line"><span class="keyword">var</span> path=<span class="built_in">require</span>(<span class="string">'path'</span>);  <span class="comment">/*nodejs自带的模块*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//url模块</span></span><br><span class="line"><span class="keyword">var</span> url=<span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//引入扩展名的方法是在文件里面获取到的。</span></span><br><span class="line"><span class="keyword">var</span> mimeModel=<span class="built_in">require</span>(<span class="string">'./model/getmimefromfile.js'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//console.log(mimeModel.getMime('.css'));   //获取文件类型</span></span><br><span class="line"></span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//http://localhost:8001/news.html    /news.html</span></span><br><span class="line">    <span class="comment">//http://localhost:8001/index.html    /index.html</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//css/dmb.bottom.css</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//xxx.json?214214124</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> pathname=url.parse(req.url).pathname; <span class="comment">// 获取路由地址，去掉参数</span></span><br><span class="line"><span class="built_in">console</span>.log(pathname);</span><br><span class="line"><span class="keyword">if</span>(pathname==<span class="string">'/'</span>)&#123;</span><br><span class="line">        pathname=<span class="string">'/index.html'</span>; <span class="comment">/*默认加载的首页*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取文件的后缀名</span></span><br><span class="line">    <span class="keyword">var</span> extname=path.extname(pathname);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(pathname!=<span class="string">'/favicon.ico'</span>)&#123;  <span class="comment">/*过滤请求favicon.ico*/</span></span><br><span class="line">        <span class="comment">//console.log(pathname);</span></span><br><span class="line">        <span class="comment">//文件操作获取 static下面的index.html</span></span><br><span class="line">fs.readFile(<span class="string">'static/'</span>+pathname,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;  <span class="comment">/*是否存在这个文件*/</span></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'404'</span>);</span><br><span class="line">fs.readFile(<span class="string">'static/404.html'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">error,data404</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(error)&#123;</span><br><span class="line">                        <span class="built_in">console</span>.log(error);</span><br><span class="line">                    &#125;</span><br><span class="line">                    res.writeHead(<span class="number">404</span>,&#123;<span class="string">"Content-Type"</span>:<span class="string">"text/html;charset='utf-8'"</span>&#125;);</span><br><span class="line">                    res.write(data404);</span><br><span class="line">                    res.end(); <span class="comment">/*结束响应*/</span></span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123; <span class="comment">/*返回这个文件*/</span></span><br><span class="line">                <span class="keyword">var</span> mime=mimeModel.getMime(fs,extname);  <span class="comment">/*获取文件类型*/</span></span><br><span class="line">                res.writeHead(<span class="number">200</span>,&#123;<span class="string">"Content-Type"</span>:<span class="string">""</span>+mime+<span class="string">";charset='utf-8'"</span>&#125;);</span><br><span class="line">                res.write(data);</span><br><span class="line">                res.end(); <span class="comment">/*结束响应*/</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).listen(<span class="number">8002</span>);</span><br></pre></td></tr></table></figure><p><strong>model/getmimefromfile.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Administrator on 2017/7/2 0002.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">exports.getMime=<span class="function"><span class="keyword">function</span>(<span class="params">fs,extname</span>)</span>&#123;  <span class="comment">/*获取后缀名的方法*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 异步写法，mimeModel.getMime(fs,extname) 在同步情况下 undefined</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">// fs.readFile('./mime.json',function(err,data)&#123;</span></span><br><span class="line">    <span class="comment">//     if(err)&#123;</span></span><br><span class="line">    <span class="comment">//         console.log('mime.json文件不存在');</span></span><br><span class="line">    <span class="comment">//         return false;</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">//     //console.log(data.toString());</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//     var Mimes=JSON.parse(data.toString());</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//     //console.log(Mimes[extname]);</span></span><br><span class="line">    <span class="comment">//     console.log('2');</span></span><br><span class="line">    <span class="comment">//     return Mimes[extname] || 'text/html';</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//把读取数据改成同步</span></span><br><span class="line">    <span class="keyword">var</span> data=fs.readFileSync(<span class="string">'./mime.json'</span>);</span><br><span class="line">    <span class="comment">//data.toString() 转换成json字符串</span></span><br><span class="line">    <span class="keyword">var</span> Mimes=<span class="built_in">JSON</span>.parse(data.toString());  <span class="comment">/*把json字符串转换成json对象*/</span></span><br><span class="line">    <span class="keyword">return</span> Mimes[extname] || <span class="string">'text/html'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="七、Nodejs的非阻塞IO、异步以及-事件驱动EventEmitter解决异步"><a href="#七、Nodejs的非阻塞IO、异步以及-事件驱动EventEmitter解决异步" class="headerlink" title="七、Nodejs的非阻塞IO、异步以及 事件驱动EventEmitter解决异步"></a>七、Nodejs的非阻塞IO、异步以及 事件驱动EventEmitter解决异步</h1><h2 id="Nodejs-的单线程-非阻塞-I-O-事件驱动"><a href="#Nodejs-的单线程-非阻塞-I-O-事件驱动" class="headerlink" title="Nodejs 的单线程 非阻塞 I/O 事件驱动"></a>Nodejs 的单线程 非阻塞 I/O 事件驱动</h2><p>Node.js 不为每个客户连接创建一个新的线程，而仅仅使用一个线程。当有用户连接了， 就触发一个内部事件，通过非阻塞 I/O、事件驱动机制，让 Node.js 程序宏观上也是并行的。 使用 Node.js，一个 8GB 内存的服务器，可以同时处理超过4 万用户的连接。</p><p>非阻塞 =》 异步</p><h2 id="常用两种处理处理异步的方式"><a href="#常用两种处理处理异步的方式" class="headerlink" title="常用两种处理处理异步的方式"></a>常用两种处理处理异步的方式</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 错误写法</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 模拟请求数据</span></span><br><span class="line">    <span class="keyword">var</span> result=<span class="string">''</span>;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        result = <span class="string">'请求的数据'</span></span><br><span class="line">    &#125;, <span class="number">200</span>);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(getData()); <span class="comment">// 异步导致请求不到数据，返回空值 ''</span></span><br></pre></td></tr></table></figure><h3 id="回调函数处理"><a href="#回调函数处理" class="headerlink" title="回调函数处理"></a>回调函数处理</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params">callback</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result=<span class="string">''</span>;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        result=<span class="string">'请求的数据'</span>；</span><br><span class="line">        callback(result);</span><br><span class="line">    &#125;,<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getData(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Nodejs-events-模块处理"><a href="#Nodejs-events-模块处理" class="headerlink" title="Nodejs events 模块处理"></a>Nodejs events 模块处理</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 广播和接收 / 订阅和通知</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> events = <span class="built_in">require</span>(<span class="string">'events'</span>);</span><br><span class="line"><span class="keyword">var</span> EventEmitter = <span class="keyword">new</span> events.EventEmitter(); <span class="comment">// 实例化事件对象</span></span><br><span class="line">EventEmitter.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'开始广播...'</span>);</span><br><span class="line">    EventEmitter.emit(<span class="string">'data'</span>, <span class="string">'这是数据内容'</span>);</span><br><span class="line">&#125;,<span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h1 id="八、Nodejs-WEB服务器-静态文件托管、-GET-POST路由-EJS模板引擎"><a href="#八、Nodejs-WEB服务器-静态文件托管、-GET-POST路由-EJS模板引擎" class="headerlink" title="八、Nodejs WEB服务器 静态文件托管、 GET POST路由 EJS模板引擎"></a>八、Nodejs WEB服务器 静态文件托管、 GET POST路由 EJS模板引擎</h1><h2 id="Nodejs-静态文件托管"><a href="#Nodejs-静态文件托管" class="headerlink" title="Nodejs 静态文件托管"></a>Nodejs 静态文件托管</h2><p>根据请求的链接，返回服务器上的相关静态文件。具体详看前面</p><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p>路由（Routing）是由一个 URI（或者叫路径）和一个特定的 HTTP 方法（GET、POST 等）组成 的，涉及到应用如何响应客户端对某个网站节点的访问。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置静态文件路由</span></span><br><span class="line"><span class="comment">//fs模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"><span class="comment">//path模块</span></span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>) <span class="comment">/*nodejs自带的模块*/</span></span><br><span class="line"><span class="comment">//url模块</span></span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取文件类型的方法  私有</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMime</span>(<span class="params">extname, callback</span>) </span>&#123;</span><br><span class="line">  <span class="comment">/*获取后缀名的方法*/</span></span><br><span class="line"></span><br><span class="line">  fs.readFile(<span class="string">'./mime.json'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'mime.json文件不存在'</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//console.log(data.toString());</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> Mimes = <span class="built_in">JSON</span>.parse(data.toString())</span><br><span class="line"><span class="keyword">var</span> result = Mimes[extname] || <span class="string">'text/html'</span></span><br><span class="line">callback(result)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">exports.statics = <span class="function"><span class="keyword">function</span>(<span class="params">req, res, staticpath</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> pathname = url.parse(req.url).pathname <span class="comment">/*获取url的值*/</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (pathname == <span class="string">'/'</span>) &#123;</span><br><span class="line">    pathname = <span class="string">'/index.html'</span> <span class="comment">/*默认加载的首页*/</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//获取文件的后缀名</span></span><br><span class="line">  <span class="keyword">var</span> extname = path.extname(pathname)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (pathname != <span class="string">'/favicon.ico'</span>) &#123;</span><br><span class="line">    <span class="comment">/*过滤请求favicon.ico*/</span></span><br><span class="line">    <span class="comment">//console.log(pathname);</span></span><br><span class="line">    <span class="comment">//文件操作获取 static下面的index.html</span></span><br><span class="line"></span><br><span class="line">    fs.readFile(staticpath + <span class="string">'/'</span> + pathname, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="comment">/*是否有这个文件*/</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'404'</span>)</span><br><span class="line"></span><br><span class="line">        fs.readFile(staticpath + <span class="string">'/404.html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">error, data404</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(error)</span><br><span class="line">          &#125;</span><br><span class="line">          res.writeHead(<span class="number">404</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">"text/html;charset='utf-8'"</span> &#125;)</span><br><span class="line">          res.write(data404)</span><br><span class="line">          res.end() <span class="comment">/*结束响应*/</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">/*返回这个文件*/</span></span><br><span class="line"></span><br><span class="line">        getMime(extname, <span class="function"><span class="keyword">function</span>(<span class="params">mime</span>) </span>&#123;</span><br><span class="line">          res.writeHead(<span class="number">200</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">''</span> + mime + <span class="string">";charset='utf-8'"</span> &#125;)</span><br><span class="line">          res.write(data)</span><br><span class="line">          res.end() <span class="comment">/*结束响应*/</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="EJS模块引擎"><a href="#EJS模块引擎" class="headerlink" title="EJS模块引擎"></a>EJS模块引擎</h2><p>EJS 是后台模板，可以把我们数据库和文件读取的数据显示到 Html 页面上面。它 是一个第三方模块，需要通过 npm 安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install ejs --save</span><br><span class="line">cnpm install ejs --save</span><br></pre></td></tr></table></figure><p><strong>用法</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ejs.render(str, data, options);</span><br><span class="line"><span class="comment">// =&gt; Rendered HTML string</span></span><br><span class="line"> </span><br><span class="line">ejs.renderFile(filename, data, options, <span class="function"><span class="keyword">function</span>(<span class="params">err, str</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// str =&gt; Rendered HTML string</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>EJS 常用标签</strong></p><ul><li>&lt;% %&gt;流程控制标签 </li><li>&lt;%= %&gt;输出标签（原文输出 HTML 标签） </li><li>&lt;%- %&gt;输出标签（HTML 会被浏览器解析） </li></ul><p><strong>举例</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//引入http模块</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>)</span><br><span class="line"><span class="keyword">var</span> ejs = <span class="built_in">require</span>(<span class="string">'ejs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//路由:指的就是针对不同请求的 URL，处理不同的业务逻辑。</span></span><br><span class="line">http</span><br><span class="line">  .createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.writeHead(<span class="number">200</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">"text/html;charset='utf-8'"</span> &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> pathname = url.parse(req.url).pathname</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pathname == <span class="string">'/login'</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> data = <span class="string">'你好我是后台数据'</span></span><br><span class="line"><span class="keyword">var</span> list = [<span class="string">'1111'</span>, <span class="string">'2222'</span>, <span class="string">'3333'</span>]</span><br><span class="line"></span><br><span class="line">      <span class="comment">//把数据库的数据渲染到模板上面</span></span><br><span class="line">      ejs.renderFile(</span><br><span class="line">        <span class="string">'views/login.ejs'</span>,</span><br><span class="line">        &#123;</span><br><span class="line">          msg: data,</span><br><span class="line">          list: list</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">          res.end(data)</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> msg = <span class="string">'这是注册页面，也是注册的路由'</span></span><br><span class="line">      <span class="keyword">var</span> h = <span class="string">'&lt;h2&gt;这是一个h2&lt;/h2&gt;'</span></span><br><span class="line">      ejs.renderFile(</span><br><span class="line">        <span class="string">'views/register.ejs'</span>,</span><br><span class="line">        &#123;</span><br><span class="line">          msg: msg,</span><br><span class="line">          h: h</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">          res.end(data)</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .listen(<span class="number">8001</span>)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/login.ejs --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"</span></span><br><span class="line"><span class="meta">        "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是一个ejs的后台模板引擎-登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">%=msg%</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        &lt;% for(var i=0;i&lt;list.length;i++)&#123;%&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">%=list[i]%</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/register.ejs --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"</span></span><br><span class="line"><span class="meta">        "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">%=msg%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-h%</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Get-Post"><a href="#Get-Post" class="headerlink" title="Get Post"></a>Get Post</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入http模块</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>)</span><br><span class="line"><span class="keyword">var</span> ejs = <span class="built_in">require</span>(<span class="string">'ejs'</span>)</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//路由:指的就是针对不同请求的 URL，处理不同的业务逻辑。</span></span><br><span class="line">http</span><br><span class="line">  .createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.writeHead(<span class="number">200</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">"text/html;charset='utf-8'"</span> &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取get 还是post请求</span></span><br><span class="line"><span class="keyword">var</span> method = req.method.toLowerCase()</span><br><span class="line">    <span class="comment">//console.log(method);</span></span><br><span class="line"><span class="keyword">var</span> pathname = url.parse(req.url, <span class="literal">true</span>).pathname</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pathname == <span class="string">'/login'</span>) &#123;</span><br><span class="line">      <span class="comment">/*显示登录页面*/</span></span><br><span class="line">  ejs.renderFile(<span class="string">'views/form.ejs'</span>, &#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">        res.end(data)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pathname == <span class="string">'/dologin'</span> &amp;&amp; method == <span class="string">'get'</span>) &#123;</span><br><span class="line">      <span class="comment">/*执行登录的操作*/</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// get 获取数据</span></span><br><span class="line">      <span class="built_in">console</span>.log(url.parse(req.url, <span class="literal">true</span>).query)</span><br><span class="line">  res.end(<span class="string">'dologin'</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pathname == <span class="string">'/dologin'</span> &amp;&amp; method == <span class="string">'post'</span>) &#123;</span><br><span class="line">      <span class="comment">/*执行登录的操作*/</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// post 获取数据</span></span><br><span class="line">      <span class="keyword">var</span> postStr = <span class="string">''</span></span><br><span class="line">      req.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">        postStr += chunk</span><br><span class="line">      &#125;)</span><br><span class="line">      req.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, chunk</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//res.end(postStr);</span></span><br><span class="line">        <span class="built_in">console</span>.log(postStr.toString())</span><br><span class="line">fs.appendFile(<span class="string">'login.txt'</span>, postStr + <span class="string">'\n'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(err)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'写入数据成功'</span>)</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        res.end(<span class="string">"&lt;script&gt;alert('登录成功');history.back();&lt;/script&gt;"</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      ejs.renderFile(<span class="string">'views/index.ejs'</span>, &#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">        res.end(data)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .listen(<span class="number">8001</span>)</span><br></pre></td></tr></table></figure><h1 id="九、路由封装"><a href="#九、路由封装" class="headerlink" title="九、路由封装"></a>九、路由封装</h1><h2 id="模块化的方式封装"><a href="#模块化的方式封装" class="headerlink" title="模块化的方式封装"></a>模块化的方式封装</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// http-route-demo.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> route = <span class="built_in">require</span>(<span class="string">'./model/http-route'</span>)</span><br><span class="line"><span class="keyword">var</span> app = route()</span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"><span class="keyword">var</span> server = http.createServer(app)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.send(<span class="string">'首页'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.get(<span class="string">'/login'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.send(<span class="string">'login'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.get(<span class="string">'/register'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.send(<span class="string">'register'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.post(<span class="string">'/test'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'POST'</span>, req.query)</span><br><span class="line">  res.send(req.query)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 每次监听到访问请求，就执行一次 app()</span></span><br><span class="line">server.listen(<span class="number">8080</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'listening'</span> + server.address().port)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// model/http-route.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对resquest进行封装</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param &#123;*&#125; res</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> packingRes = <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> end = res.end;</span><br><span class="line">    res.end = <span class="function"><span class="keyword">function</span> (<span class="params">data, encoding, callback</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (data &amp;&amp; !(data <span class="keyword">instanceof</span> Buffer) &amp;&amp; (<span class="keyword">typeof</span> data !== <span class="string">'function'</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> data === <span class="string">'object'</span>) &#123;</span><br><span class="line">                data = <span class="built_in">JSON</span>.stringify(data);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> data === <span class="string">'number'</span>) &#123;</span><br><span class="line">                data = data.toString();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        end.call(res, data, encoding, callback);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    res.send = <span class="function"><span class="keyword">function</span> (<span class="params">data, type</span>) </span>&#123;</span><br><span class="line">        res.writeHead(<span class="number">200</span>,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">'Access-Control-Allow-Origin'</span>: <span class="string">'*'</span>,</span><br><span class="line">                <span class="string">'Content-Type'</span>: <span class="string">'text/'</span> + (type || <span class="string">'plain'</span>) + <span class="string">'; charset=UTF-8'</span></span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">        res.end(data);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    res.sendImg = <span class="function"><span class="keyword">function</span> (<span class="params">data, type, timeout</span>) </span>&#123;</span><br><span class="line">        res.writeHead(<span class="number">200</span>,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">'Access-Control-Allow-Origin'</span>: <span class="string">'*'</span>,</span><br><span class="line">                <span class="string">'Content-Type'</span>: <span class="string">'image/'</span> + (type || <span class="string">'png'</span>),</span><br><span class="line">                <span class="string">'Content-Length'</span>: Buffer.byteLength(data),</span><br><span class="line">                <span class="string">'Cache-Control'</span>: <span class="string">'max-age='</span> + (timeout || <span class="number">5184000</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">        res.end(data);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由规则</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> route = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>._get = &#123;&#125;;</span><br><span class="line">    <span class="keyword">this</span>._post = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param &#123;*&#125; req</span></span><br><span class="line"><span class="comment">     * @param &#123;*&#125; res</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">var</span> handle = <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        packingRes(res);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> Url = url.parse(req.url, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">var</span> pathname = Url.pathname;</span><br><span class="line">        <span class="keyword">if</span> (!pathname.endsWith(<span class="string">'/'</span>)) &#123;</span><br><span class="line">            pathname = pathname + <span class="string">'/'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> query = Url.query;</span><br><span class="line">        <span class="keyword">var</span> method = req.method.toLowerCase();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (self[<span class="string">'_'</span> + method][pathname]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (method == <span class="string">'post'</span>) &#123;</span><br><span class="line">                <span class="comment">// 设置接收数据编码格式为 UTF-8</span></span><br><span class="line">                <span class="comment">// req.setEncoding('utf-8');</span></span><br><span class="line">                <span class="keyword">var</span> postData = <span class="string">''</span>;</span><br><span class="line">                <span class="comment">// 数据块接收中</span></span><br><span class="line">                req.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">postDataChunk</span>) </span>&#123;</span><br><span class="line">                    postData += postDataChunk;</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">// 数据接收完毕，执行回调函数</span></span><br><span class="line">                req.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        postData = <span class="built_in">JSON</span>.parse(postData);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">                    req.query = postData;</span><br><span class="line">                    self[<span class="string">'_'</span> + method][pathname](req, res);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                req.query = query;</span><br><span class="line">                self[<span class="string">'_'</span> + method][pathname](req, res);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.send(method + <span class="string">'请求路由地址不存在:'</span> + pathname);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册get请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    handle.get = <span class="function"><span class="keyword">function</span> (<span class="params">string, callback</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!string.startsWith(<span class="string">'/'</span>)) &#123;</span><br><span class="line">            string = <span class="string">'/'</span> + string;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!string.endsWith(<span class="string">'/'</span>)) &#123;</span><br><span class="line">            string = string + <span class="string">'/'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        self._get[string] = callback;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册post请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    handle.post = <span class="function"><span class="keyword">function</span> (<span class="params">string, callback</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!string.startsWith(<span class="string">'/'</span>)) &#123;</span><br><span class="line">            string = <span class="string">'/'</span> + string;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!string.endsWith(<span class="string">'/'</span>)) &#123;</span><br><span class="line">            string = string + <span class="string">'/'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        self._post[string] = callback;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> handle;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> route();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="封装仿照-express-的路由"><a href="#封装仿照-express-的路由" class="headerlink" title="封装仿照 express 的路由"></a>封装仿照 express 的路由</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// express-route-demo.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"><span class="keyword">var</span> ejs = <span class="built_in">require</span>(<span class="string">'ejs'</span>)</span><br><span class="line"><span class="keyword">var</span> app = <span class="built_in">require</span>(<span class="string">'./model/http-route.js'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(app)</span><br><span class="line"></span><br><span class="line">http.createServer(app).listen(<span class="number">8080</span>)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/index'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> msg = <span class="string">'这是数据库的数据'</span></span><br><span class="line">  ejs.renderFile(<span class="string">'views/index.ejs'</span>, &#123; <span class="attr">msg</span>: msg &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err)</span><br><span class="line">    res.send(data)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//登录页面</span></span><br><span class="line">app.get(<span class="string">'/login'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'login'</span>)</span><br><span class="line">  ejs.renderFile(<span class="string">'views/form.ejs'</span>, &#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">    res.send(data)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行登录</span></span><br><span class="line">app.post(<span class="string">'/dologin'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req.body) <span class="comment">/*获取post传过来的数据*/</span></span><br><span class="line">  res.send(<span class="string">"&lt;script&gt;alert('登录成功');history.back();&lt;/script&gt;"</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/register'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'register'</span>)</span><br><span class="line">  res.send(<span class="string">'register'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/news'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'register'</span>)</span><br><span class="line">  res.send(<span class="string">'新闻数据'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// express-route.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> url=<span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//封装方法改变res  绑定res.send()</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeRes</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">    res.send=<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">        res.writeHead(<span class="number">200</span>,&#123;<span class="string">"Content-Type"</span>:<span class="string">"text/html;charset=\"utf-8\""</span>&#125;);</span><br><span class="line">        res.end(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//暴露的模块</span></span><br><span class="line"><span class="keyword">var</span> Server=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> G=<span class="keyword">this</span>;   <span class="comment">/*全局变量*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//处理get和post请求</span></span><br><span class="line">    <span class="keyword">this</span>._get=&#123;&#125;;</span><br><span class="line">    <span class="keyword">this</span>._post=&#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> app=<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">        changeRes(res);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取路由</span></span><br><span class="line">        <span class="keyword">var</span> pathname=url.parse(req.url).pathname;</span><br><span class="line">        <span class="keyword">if</span>(!pathname.endsWith(<span class="string">'/'</span>))&#123;</span><br><span class="line">            pathname=pathname+<span class="string">'/'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取请求的方式 get  post</span></span><br><span class="line">        <span class="keyword">var</span> method=req.method.toLowerCase();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(G[<span class="string">'_'</span>+method][pathname])&#123;</span><br><span class="line">            <span class="keyword">if</span>(method==<span class="string">'post'</span>)&#123; <span class="comment">/*执行post请求*/</span></span><br><span class="line">                <span class="keyword">var</span> postStr=<span class="string">''</span>;</span><br><span class="line">                req.on(<span class="string">'data'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>)</span>&#123;</span><br><span class="line">                    postStr+=chunk;</span><br><span class="line">                &#125;)</span><br><span class="line">                req.on(<span class="string">'end'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,chunk</span>) </span>&#123;</span><br><span class="line">                    req.body=postStr;  <span class="comment">/*表示拿到post的值*/</span></span><br><span class="line">                    <span class="comment">//G._post['dologin'](req,res)</span></span><br><span class="line">                    G[<span class="string">'_'</span>+method][pathname](req,res); <span class="comment">/*执行方法*/</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123; <span class="comment">/*执行get请求*/</span></span><br><span class="line">                G[<span class="string">'_'</span>+method][pathname](req,res); <span class="comment">/*执行方法*/</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.end(<span class="string">'no router'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    app.get=<span class="function"><span class="keyword">function</span>(<span class="params">string,callback</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!string.endsWith(<span class="string">'/'</span>))&#123;</span><br><span class="line">            string=string+<span class="string">'/'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!string.startsWith(<span class="string">'/'</span>))&#123;</span><br><span class="line">            string=<span class="string">'/'</span>+string;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//    /login/</span></span><br><span class="line">        G._get[string]=callback;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    app.post=<span class="function"><span class="keyword">function</span>(<span class="params">string,callback</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!string.endsWith(<span class="string">'/'</span>))&#123;</span><br><span class="line">            string=string+<span class="string">'/'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!string.startsWith(<span class="string">'/'</span>))&#123;</span><br><span class="line">            string=<span class="string">'/'</span>+string;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//    /login/</span></span><br><span class="line">        G._post[string]=callback;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> app;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports=Server();</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/form.ejs --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/dologin"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/index.ejs --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    index index</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="十、MongoDb-数据库介绍、安装、使用"><a href="#十、MongoDb-数据库介绍、安装、使用" class="headerlink" title="十、MongoDb 数据库介绍、安装、使用"></a>十、MongoDb 数据库介绍、安装、使用</h1><h2 id="NoSql"><a href="#NoSql" class="headerlink" title="NoSql"></a>NoSql</h2><p>NoSQL(NoSQL = Not Only SQL )，意即 “不仅仅是 SQL”，它指的是非关系型的数据库，<br>是以 key-value 形式存储，和传统的关系型数据库不一样，不一定遵循传统数据库的一些基本要求。</p><p><strong>适用场景</strong></p><ol><li>对数据库高并发读写的需求 </li><li>对海量数据的高效率存储和访问的需求 </li><li>对数据库的高可扩展性和高可用性的需求 </li></ol><p><strong>特点</strong></p><p>没有行、列的概念。用 JSON 来存储数据。 </p><p><strong>四大分类</strong><br>键值存储数据库、列存储数据库、文档型数据库、图形数据库</p><h2 id="MongoDb安装"><a href="#MongoDb安装" class="headerlink" title="MongoDb安装"></a>MongoDb安装</h2><p>下载地址：<a href="https://www.mongodb.com/download-center/community" target="_blank" rel="noopener">https://www.mongodb.com/download-center/community</a></p><ol><li>下载后，一直下一步下一步安装</li><li>配置环境变量：<code>C:\Program Files\MongoDB\Server\4.2\bin</code>  加入到系统的 path 环境变量（此电脑 - 右击，属性 - 高级系统设置 - 环境变量 - 系统变量 Path - 编辑 - 确定 ）中</li></ol><h2 id="MongoDb使用"><a href="#MongoDb使用" class="headerlink" title="MongoDb使用"></a>MongoDb使用</h2><ol><li><p>在自己想要存放的路径下，新建存放数据库的文件夹，建议不要放在C盘（重装系统的话，数据会容易一不小心就丢了），文件名不要用中文和空格（容易出现乱码）</p></li><li><p>启动 MongoDb 服务</p></li></ol><ul><li>在文件夹 C:\Windows\System32 下搜索 cmd.exe，右击以管理员身份运行</li><li>输入 <code>mongod --dbpath C:\mongodb</code>，’C:\mongodb’ 是数据库文档所在文件夹</li><li>运行成功后，不要关闭 cmd 窗口，也不要 ctrl+c ，这样会关闭数据库 </li></ul><ol start="3"><li>客户端输入 mongo 命令连接服务器</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongo <span class="comment">// 连接本地数据库</span></span><br><span class="line"></span><br><span class="line">mongo ip地址：端口号 <span class="comment">// 连接远程数据库</span></span><br></pre></td></tr></table></figure><h1 id="十一、MongoDB-数据库增删查改"><a href="#十一、MongoDB-数据库增删查改" class="headerlink" title="十一、MongoDB 数据库增删查改"></a>十一、MongoDB 数据库增删查改</h1><p><strong>数据库 &gt; 表（集合） &gt; 数据项</strong></p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cls <span class="comment">// 清屏</span></span><br><span class="line"></span><br><span class="line">show dbs <span class="comment">// 查看数据库所有列表</span></span><br><span class="line"></span><br><span class="line">use student <span class="comment">// 创建或使用名为 student 的数据库</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入数据就能创建集合</span></span><br><span class="line"><span class="comment">// 创建 student 集合并插入数据</span></span><br><span class="line">db.student.insert(&#123;<span class="string">"name"</span>: <span class="string">"xiaoming"</span>&#125;)</span><br><span class="line"></span><br><span class="line">show collections <span class="comment">// 显示当前的数据集合</span></span><br><span class="line"></span><br><span class="line">db.dropDatabase() <span class="comment">// 删除当前所在的数据库</span></span><br><span class="line"></span><br><span class="line">db.user.drop() <span class="comment">// 删除当前所在数据库名为 user 的集合</span></span><br></pre></td></tr></table></figure><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.表名.insert(&#123;<span class="string">"name"</span>:<span class="string">"zhangsan"</span>&#125;);</span><br></pre></td></tr></table></figure><h2 id="查找数据"><a href="#查找数据" class="headerlink" title="查找数据"></a>查找数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">db.userInfo.find() <span class="comment">// 查询 userInfo 集合的所有数据</span></span><br><span class="line"></span><br><span class="line">db.userInfo.distinct(<span class="string">"name"</span>) <span class="comment">// 查询过滤掉 name 中的重复数据后得到的数据</span></span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;<span class="string">"age"</span>:<span class="number">22</span>&#125;) <span class="comment">// 查询 age=22 的记录</span></span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;<span class="attr">age</span>: &#123;<span class="attr">$gt</span>: <span class="number">22</span>&#125;&#125;) <span class="comment">// 查询 age &gt; 22 的记录 </span></span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;<span class="attr">age</span>: &#123;<span class="attr">$lt</span>: <span class="number">22</span>&#125;&#125;) <span class="comment">// 查询 age &lt; 22 的记录 </span></span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;<span class="attr">age</span>: &#123;<span class="attr">$gte</span>: <span class="number">25</span>&#125;&#125;) <span class="comment">// 查询 age &gt;= 25 的记录 </span></span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;<span class="attr">age</span>: &#123;<span class="attr">$lte</span>: <span class="number">25</span>&#125;&#125;) <span class="comment">// 查询 age &lt;= 25 的记录 </span></span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;<span class="attr">age</span>: &#123;<span class="attr">$gte</span>: <span class="number">23</span>, <span class="attr">$lte</span>: <span class="number">26</span>&#125;&#125;) <span class="comment">// 查询 age &gt;= 23 并且 age &lt;= 26 </span></span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;<span class="attr">name</span>: <span class="regexp">/mongo/</span>&#125;) <span class="comment">// 查询 name 中包含 mongo 的数据，模糊搜索</span></span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;<span class="attr">name</span>: <span class="regexp">/^mongo/</span>&#125;) <span class="comment">// 查询 name 中以 mongo 开头的 </span></span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;&#125;, &#123;<span class="attr">name</span>: <span class="number">1</span>, <span class="attr">age</span>: <span class="number">1</span>&#125;) <span class="comment">// 查询指定列 name、age 数据，1 表示显示该列数据</span></span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;<span class="attr">age</span>: &#123;<span class="attr">$gt</span>: <span class="number">25</span>&#125;&#125;, &#123;<span class="attr">name</span>: <span class="number">1</span>, <span class="attr">age</span>: <span class="number">1</span>&#125;) <span class="comment">// 查询指定列 name、age 数据, age &gt; 25 </span></span><br><span class="line"></span><br><span class="line">db.userInfo.find().sort(&#123;<span class="attr">age</span>: <span class="number">1</span>&#125;) <span class="comment">// 按照年龄排序  1 升序  -1 降序 </span></span><br><span class="line">db.userInfo.find().sort(&#123;<span class="attr">age</span>: <span class="number">-1</span>&#125;)</span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;<span class="attr">name</span>: <span class="string">'zhangsan'</span>, <span class="attr">age</span>: <span class="number">22</span>&#125;) <span class="comment">// 查询 name = zhangsan, age = 22 的数据 </span></span><br><span class="line"></span><br><span class="line">db.userInfo.find().limit(<span class="number">5</span>) <span class="comment">// 查询前 5 条数据 </span></span><br><span class="line"></span><br><span class="line">db.userInfo.find().skip(<span class="number">10</span>) <span class="comment">// 查询 10 条以后的数据 </span></span><br><span class="line"></span><br><span class="line">db.userInfo.find().limit(<span class="number">10</span>).skip(<span class="number">5</span>) <span class="comment">// 查询在 5-10 之间的数据，用于分页，limit 是 pageSize，skip 是第几页*pageSize </span></span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;<span class="attr">$or</span>: [&#123;<span class="attr">age</span>: <span class="number">22</span>&#125;, &#123;<span class="attr">age</span>: <span class="number">25</span>&#125;]&#125;) <span class="comment">// or 与 查询 </span></span><br><span class="line"></span><br><span class="line">db.userInfo.findOne() <span class="comment">// findOne 查询第一条数据 </span></span><br><span class="line"></span><br><span class="line">db.userInfo.find(&#123;<span class="attr">age</span>: &#123;<span class="attr">$gte</span>: <span class="number">25</span>&#125;&#125;).count() <span class="comment">// 查询某个结果集的记录条数 统计数量 </span></span><br><span class="line">db.users.find().skip(<span class="number">10</span>).limit(<span class="number">5</span>).count(<span class="literal">true</span>) <span class="comment">// 要返回限制之后的记录数量，要使用 count(true) 或者 count(非 0)  db</span></span><br></pre></td></tr></table></figure><h2 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查找数学成绩是 70，把年龄更改为 33 岁</span></span><br><span class="line">db.student.update(&#123;<span class="string">"score.shuxue"</span>:<span class="number">70</span>&#125;,&#123;<span class="attr">$set</span>:&#123;<span class="string">"age"</span>:<span class="number">33</span>&#125;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更改所有匹配项目</span></span><br><span class="line">db.student.update(&#123;<span class="string">"sex"</span>:<span class="string">"男"</span>&#125;,&#123;<span class="attr">$set</span>:&#123;<span class="string">"age"</span>:<span class="number">33</span>&#125;&#125;,&#123;<span class="attr">multi</span>: <span class="literal">true</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 完整替换，不出现$set 关键字</span></span><br><span class="line">db.student.update(&#123;<span class="string">"name"</span>:<span class="string">"小明"</span>&#125;,&#123;<span class="string">"name"</span>:<span class="string">"大明"</span>,<span class="string">"age"</span>:<span class="number">16</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 相当于 update users set age = age + 50, name = ‘hoho’ where name = ‘Lisi’</span></span><br><span class="line">db.users.update(&#123;<span class="attr">name</span>: <span class="string">'Lisi'</span>&#125;, &#123;<span class="attr">$inc</span>: &#123;<span class="attr">age</span>: <span class="number">50</span>&#125;, <span class="attr">$set</span>: &#123;<span class="attr">name</span>: <span class="string">'hoho'</span>&#125;&#125;, <span class="literal">false</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除 age=132 的数据</span></span><br><span class="line">db.users.remove(&#123;<span class="attr">age</span>: <span class="number">132</span>&#125;); </span><br><span class="line"></span><br><span class="line"><span class="comment">// 只删除匹配到 age=132 的一条数据</span></span><br><span class="line">db.restaurants.remove(&#123;<span class="attr">age</span>: <span class="number">132</span>&#125;,&#123;<span class="attr">justOne</span>: <span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure><h1 id="十二、MongoDB-索引和-explain-使用"><a href="#十二、MongoDB-索引和-explain-使用" class="headerlink" title="十二、MongoDB 索引和 explain 使用"></a>十二、MongoDB 索引和 explain 使用</h1><h2 id="索引基础"><a href="#索引基础" class="headerlink" title="索引基础"></a>索引基础</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">db.user.ensureIndex(&#123;<span class="string">"username"</span>:<span class="number">1</span>&#125;) <span class="comment">// 创建索引</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1 表示 username 键的索引按升序存储，-1 表示 age 键的索引按照降序方式存储</span></span><br><span class="line"><span class="comment">// 该索引被创建后，基于 username 和 age 的查询将会用到该索引，或者是基于 username </span></span><br><span class="line"><span class="comment">// 的查询也会用到该索引，但是只是基于 age 的查询将不会用到该复合索引。因此可以说，</span></span><br><span class="line"><span class="comment">// 如果想用到复合索引，必须在查询条件中包含复合索引中的前 N 个索引列。</span></span><br><span class="line">db.user.ensureIndex(&#123;<span class="string">"username"</span>:<span class="number">1</span>, <span class="string">"age"</span>:<span class="number">-1</span>&#125;)</span><br><span class="line"></span><br><span class="line">db.user.getIndexes() <span class="comment">// 获取当前集合的索引</span></span><br><span class="line"></span><br><span class="line">db.user.dropIndex(&#123;<span class="string">"username"</span>:<span class="number">1</span>&#125;) <span class="comment">// 删除索引</span></span><br></pre></td></tr></table></figure><h2 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建唯一索引，则无法插入 userid 重复的文档数据，否则会报错</span></span><br><span class="line">db.user.ensureIndex(&#123;<span class="string">"userid"</span>:<span class="number">1</span>&#125;,&#123;<span class="string">"unique"</span>:<span class="literal">true</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除刚刚创建的唯一索引</span></span><br><span class="line">db.user.dropIndex(&#123;<span class="string">"userid"</span>:<span class="number">1</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建复合唯一索引</span></span><br><span class="line">db.user.ensureIndex(&#123;<span class="string">"userid"</span>:<span class="number">1</span>,<span class="string">"age"</span>:<span class="number">1</span>&#125;,&#123;<span class="string">"unique"</span>:<span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure><h2 id="索引其他参数"><a href="#索引其他参数" class="headerlink" title="索引其他参数"></a>索引其他参数</h2><table><thead><tr><th align="center">参数</th><th align="center">类型</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">background</td><td align="center">Boolean</td><td align="center">建索引过程会阻塞其他数据库操作，background 可指定以后台方式创建索引（不阻塞其他操作），即增加”background”可选参数。默认值为 false。</td></tr><tr><td align="center">unique</td><td align="center">Boolean</td><td align="center">建立的索引是否唯一。指定为 true 创建唯一索引，默认值为 false。</td></tr><tr><td align="center">name</td><td align="center">string</td><td align="center">索引的名称。如果未指定，MongoDB 通过连接索引的字段名和排序顺序生成一个索引名称。</td></tr><tr><td align="center">dropDups</td><td align="center">Boolean</td><td align="center">在建立唯一索引时是否删除重复记录，指定 true 创建唯一索引。默认值为 false。</td></tr></tbody></table><h2 id="使用-explain"><a href="#使用-explain" class="headerlink" title="使用 explain"></a>使用 explain</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// explain 返回查询使用的索引情况，耗时和扫描文档数的统计信息</span></span><br><span class="line">db.user.find(&#123;<span class="string">"username"</span>:<span class="string">"zhangsan5000"</span>&#125;).explain()</span><br><span class="line"></span><br><span class="line"><span class="comment">// executionStats 查询具体的执行时间</span></span><br><span class="line">db.tablename.find().explain(<span class="string">"executionStats"</span>)</span><br></pre></td></tr></table></figure><h1 id="十三、Nodejs-操作-MongoDB"><a href="#十三、Nodejs-操作-MongoDB" class="headerlink" title="十三、Nodejs 操作 MongoDB"></a>十三、Nodejs 操作 MongoDB</h1><h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install mongodb --save-dev</span><br><span class="line">cnpm install mongodb --save-dev</span><br></pre></td></tr></table></figure><p><strong>官方网址：</strong><br><a href="https://docs.mongodb.com/manual/tutorial/getting-started/" target="_blank" rel="noopener">mongodb文档</a></p><h2 id="连接-mongodb-数据库"><a href="#连接-mongodb-数据库" class="headerlink" title="连接 mongodb 数据库"></a>连接 mongodb 数据库</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span> (<span class="string">"express"</span>); <span class="comment">// 数据库引用 var MongoClient = require ('mongodb').MongoClient; </span></span><br><span class="line"><span class="keyword">var</span> app = express (); </span><br><span class="line"> </span><br><span class="line"><span class="comment">// 数据库连接的地址，最后的斜杠表示数据库名字 </span></span><br><span class="line"><span class="keyword">var</span> shujukuURL = <span class="string">'mongodb://localhost:27017/news'</span>; </span><br><span class="line">app.get(<span class="string">"/"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line"><span class="comment">// 连接数据库，这是一个异步的操作</span></span><br><span class="line">MongoClient .connect( shujukuURL , <span class="function"><span class="keyword">function</span>(<span class="params">err, db</span>) </span>&#123;</span><br><span class="line">res.writeHead(<span class="number">200</span>,&#123;<span class="string">"Content-Type"</span>:<span class="string">"text/html;charset=UTF8"</span>&#125;);</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line">res.send(<span class="string">"数据库连接失败"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">res.write(<span class="string">"恭喜，数据库已经成功连接 \n"</span>);</span><br><span class="line">db.collection(<span class="string">"user"</span>).insertOne(&#123;<span class="string">"name"</span>:<span class="string">"哈哈"</span>&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err,result</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line">res.send(<span class="string">"数据库写入失败"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">res.write(<span class="string">"恭喜，数据已经成功插入"</span>);</span><br><span class="line">res.end();</span><br><span class="line"><span class="comment">// 关闭数据库</span></span><br><span class="line">db.close();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;); </span><br><span class="line">app .listen(<span class="number">8020</span>);</span><br></pre></td></tr></table></figure><h2 id="查找-mongodb-数据库集合"><a href="#查找-mongodb-数据库集合" class="headerlink" title="查找 mongodb 数据库集合"></a>查找 mongodb 数据库集合</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">MongoClient .connect( dbUrl ,<span class="function"><span class="keyword">function</span>(<span class="params">err,db</span>)</span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(err)&#123; <span class="comment">/* 数据库连接失败 */</span> </span><br><span class="line">       <span class="built_in">console</span> .log(<span class="string">'数据库连接失败'</span>);</span><br><span class="line">   <span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">var</span> result=[]; </span><br><span class="line">    <span class="keyword">var</span> userRel=db.collection(<span class="string">'user'</span>).find(); </span><br><span class="line">    <span class="comment">//res.send(userRel); </span></span><br><span class="line"> </span><br><span class="line">    userRel.each(<span class="function"><span class="keyword">function</span>(<span class="params">err, doc</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line">res.write(<span class="string">"游标遍历错误"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (doc != <span class="literal">null</span>) &#123;</span><br><span class="line">result.push(doc);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br><span class="line"><span class="comment">// 遍历完毕</span></span><br><span class="line">db.close();</span><br><span class="line">res.render(<span class="string">"index"</span>,&#123;</span><br><span class="line"><span class="string">"result"</span> : result</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;); </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="给-mongodb-增加数据"><a href="#给-mongodb-增加数据" class="headerlink" title="给 mongodb 增加数据"></a>给 mongodb 增加数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">MongoClient.connect( dbUrl ,<span class="function"><span class="keyword">function</span>(<span class="params">err,db</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">db.collection(<span class="string">'user'</span>).insertOne(&#123;</span><br><span class="line"><span class="string">"name"</span> : name,</span><br><span class="line"><span class="string">"age"</span> : age,</span><br><span class="line"><span class="string">"score"</span> : &#123;</span><br><span class="line"><span class="string">"shuxue"</span> : shuxuechengji,</span><br><span class="line"><span class="string">"yuwen"</span> : yuwenchengji</span><br><span class="line">&#125;</span><br><span class="line">&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err,result</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="built_in">console</span> .log(<span class="string">'写入数据失败'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 关闭数据库</span></span><br><span class="line">db.close();</span><br><span class="line"><span class="comment">//res.redirect('/add');</span></span><br><span class="line">res.redirect(<span class="string">'/'</span>);   <span class="comment">/* 路由跳转 */</span></span><br><span class="line">res.end();</span><br><span class="line"><span class="comment">//res.location('/add')     &#125;) </span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="修改-mongodb-数据"><a href="#修改-mongodb-数据" class="headerlink" title="修改 mongodb 数据"></a>修改 mongodb 数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">MongoClient.connect( dbUrl ,<span class="function"><span class="keyword">function</span>(<span class="params">err,db</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="built_in">console</span> .log(<span class="string">'数据库连接错误'</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">db.collection(<span class="string">'user'</span>).updateOne(&#123;<span class="string">"_id"</span>: ObjectID (id)&#125;, &#123; </span><br><span class="line"><span class="string">"name"</span>: name,</span><br><span class="line"><span class="string">"age"</span>: age,</span><br><span class="line"><span class="string">"score"</span>: &#123; </span><br><span class="line"><span class="string">"shuxue"</span>: shuxue,</span><br><span class="line"><span class="string">"yuwen"</span>: yuwen</span><br><span class="line">&#125;</span><br><span class="line">&#125;,<span class="function"><span class="keyword">function</span> (<span class="params">err, results</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span> .log(results);</span><br><span class="line">db.close(); </span><br><span class="line">res.redirect(<span class="string">'/'</span>);   <span class="comment">/* 路由跳转 */</span></span><br><span class="line">res.end(<span class="string">'end'</span>);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="删除-mongodb-数据"><a href="#删除-mongodb-数据" class="headerlink" title="删除 mongodb 数据"></a>删除 mongodb 数据</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MongoClient.connect( dbUrl ,<span class="function"><span class="keyword">function</span>(<span class="params">err,db</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(err)&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"数据库连接失败"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">db.collection(<span class="string">'user'</span>).deleteOne(&#123;<span class="string">"_id"</span>: ObjectID (id)&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">error,result</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(error)&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'删除数据失败'</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">db.close();</span><br><span class="line">res.redirect(<span class="string">'/'</span>);   <span class="comment">/* 路由跳转 */</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="十四、express-框架安装和使用"><a href="#十四、express-框架安装和使用" class="headerlink" title="十四、express 框架安装和使用"></a>十四、express 框架安装和使用</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>Express 特点：</strong></p><ol><li><p>Express 是一个基于 Node.js 平台的极简、灵活的 web 应用开发框架，是是后台的 Node 框架，它提供一 系列强大的特性，帮助你创建各种 Web 和移动设备应用。 </p></li><li><p>丰富的 HTTP 快捷方法和任意排列组合的 Connect 中间件，让你创建健壮、友好的 API 变得既快速又简单 </p></li><li><p>Express 不对 Node.js 已有的特性进行二次抽象，我们只是在它之上扩展了 Web 应用所需的基本功能。 </p></li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// --save 参数，表示自动修改 package.json 文件，自动添加依赖项</span></span><br><span class="line">npm install express --save</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express=<span class="built_in">require</span>(<span class="string">'express'</span>);  <span class="comment">/*引入 express*/</span> </span><br><span class="line"><span class="keyword">var</span> app=<span class="keyword">new</span> express(); <span class="comment">/*实例化 express 赋值给 app*/</span> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//配置路由   匹配 URl 地址实现不同的功能 </span></span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123; </span><br><span class="line">    res.send(<span class="string">'首页'</span>);</span><br><span class="line">&#125;) </span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">'/search'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123; </span><br><span class="line">    res.send(<span class="string">'搜索'</span>);     <span class="comment">//?keyword=华为手机&amp;enc=utf-8&amp;suggest=1.his.0.0&amp;wq </span></span><br><span class="line">&#125;) </span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123; </span><br><span class="line">    res.send(<span class="string">'登录'</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/register'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123; </span><br><span class="line">    res.send(<span class="string">'注册'</span>);</span><br><span class="line">&#125;) </span><br><span class="line"> </span><br><span class="line">app.listen(<span class="number">3000</span>,<span class="string">"127.0.0.1"</span>);</span><br></pre></td></tr></table></figure><h2 id="路由配置"><a href="#路由配置" class="headerlink" title="路由配置"></a>路由配置</h2><p>用 get 请求访问一个网址</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">"网址"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;   &#125;);</span><br></pre></td></tr></table></figure><p>post 访问一个网址</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">"网址"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;   &#125;);</span><br></pre></td></tr></table></figure><p>user 节点接受 PUT 请求 </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.put(<span class="string">'/user'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">res.send(<span class="string">'Got a PUT request at /user'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>user 节点接受 DELETE 请求</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.delete(<span class="string">'/user'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">res.send(<span class="string">'Got a DELETE request at /user'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>动态路由配置： </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">"/user/:id"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> id = req.params[<span class="string">"id"</span>];</span><br><span class="line">res.send(id);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架和类库 </tag>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动端触屏事件</title>
      <link href="/2019/09/27/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/5-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%BA%8B%E4%BB%B6/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%A7%A6%E5%B1%8F%E4%BA%8B%E4%BB%B6/"/>
      <url>/2019/09/27/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/5-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%BA%8B%E4%BB%B6/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%A7%A6%E5%B1%8F%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/changzhen11/article/details/84098785" target="_blank" rel="noopener">移动端H5的touch事件与iOS的 gesture事件</a></p><p><a href="https://blog.csdn.net/flyingpig2016/article/details/53737348" target="_blank" rel="noopener">js中的touch事件及gesture(手势)事件详解 — 第13.4.9节</a></p><p><a href="https://juejin.im/post/5bcc528a6fb9a05d2f36e6c0" target="_blank" rel="noopener">js实现移动端图片预览：手势缩放， 手势拖动，双击放大…</a></p><p><a href="https://www.cnblogs.com/dqsBK/p/6287907.html" target="_blank" rel="noopener">浅谈javascript中stopImmediatePropagation函数和stopPropagation函数的区别</a></p><p>什么是 Hack ?</p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运行环境 </tag>
            
            <tag> 移动端事件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora软件</title>
      <link href="/2019/09/26/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/8-%E9%A1%B9%E7%9B%AE%E5%92%8C%E4%B8%9A%E5%8A%A1/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/Typora%E8%BD%AF%E4%BB%B6/"/>
      <url>/2019/09/26/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/8-%E9%A1%B9%E7%9B%AE%E5%92%8C%E4%B8%9A%E5%8A%A1/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/Typora%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>能将 markdown 文件转为 html 文件</p><p><a href="https://www.typora.io/" target="_blank" rel="noopener">下载地址</a></p><h2 id="下载安装主题"><a href="#下载安装主题" class="headerlink" title="下载安装主题"></a>下载安装主题</h2><p><a href="https://jingyan.baidu.com/article/2d5afd693f077f85a2e28e3e.html" target="_blank" rel="noopener">如何下载并安装新的typora主题</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目和业务 </tag>
            
            <tag> 实用工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wakaTime插件</title>
      <link href="/2019/09/26/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/8-%E9%A1%B9%E7%9B%AE%E5%92%8C%E4%B8%9A%E5%8A%A1/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/wakaTime%E6%8F%92%E4%BB%B6/"/>
      <url>/2019/09/26/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/8-%E9%A1%B9%E7%9B%AE%E5%92%8C%E4%B8%9A%E5%8A%A1/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/wakaTime%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>能够记录coding时间，并可视化分析，会发送报告邮件到你邮箱</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>采用 IDE 一般安装插件的方式</li><li>需要到 <a href>wakaTime官网</a> 上注册账号，可以绑定私人 github 账号</li><li>注册完账号后，在个人中心 account 栏目下的 API key 点击生成 key，复制粘贴到 IDE 一直弹出要你输入 key 的框</li></ol><p>参考：<a href="https://www.jianshu.com/p/28d628239630" target="_blank" rel="noopener">[Sublime插件]WakaTime – 记录你的Code时间</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目和业务 </tag>
            
            <tag> 实用工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fastClick原理解析</title>
      <link href="/2019/09/26/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue-fastClick%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/"/>
      <url>/2019/09/26/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue-fastClick%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>在公司项目开发工程中，看到在 main.js 文件中出现 fastClick，就不知道这个是什么？有啥作用？<br>因此，在这里记录一下 ~ ~ ~</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1. 安装</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vue-faskclick</span><br></pre></td></tr></table></figure><p><strong>2. 使用</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在main.js</span></span><br><span class="line"><span class="keyword">import</span> fastclick <span class="keyword">from</span> <span class="string">'fastclick'</span>;</span><br><span class="line">fastclick.attach(<span class="built_in">document</span>.body);</span><br></pre></td></tr></table></figure><p><strong>3. 说明</strong></p><blockquote><p>fastclick 已经好近年没更新了,貌似遗留了许多问题</p><p>ios11 据说是修复300ms 的延迟, 但是经过测试,貌似问题还是存在的.至于说 元素加入</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123; <span class="attribute">touch-action</span>: manipulation; &#125;</span><br></pre></td></tr></table></figure><blockquote><p>貌似还会有各种各样的问题, 事实上 fastclick 还是用的着的. vue-fastclick 在某些地方修复了 fastclick 遗留的一些问题.</p></blockquote><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>为什么需要使用 fastClick ？</p><p><strong>根源问题：</strong></p><p>viewport 解决方案的出现后，提供了双击缩放。因此，移动浏览器会在 touchend 和 click 事件之间，<br>等待 300 - 350 ms，判断用户是否会进行双击手势用以缩放文字。</p><blockquote><p>移动端，当用户点击屏幕时，会依次触发 touchstart，touchmove(0 次或多次)，touchend，mousemove，mousedown，mouseup，click。 touchmove 。只有当手指在屏幕发生移动的时候才会触发 touchmove 事件。在 touchstart ，touchmove 或者 touchend 事件中的任意一个调用 event.preventDefault，mouse 事件 以及 click 事件将不会触发。</p></blockquote><h2 id="解决原理"><a href="#解决原理" class="headerlink" title="解决原理"></a>解决原理</h2><blockquote><p>fastClick 在 touchend 阶段 调用 event.preventDefault，然后通过 document.createEvent 创建一个 MouseEvents，然后 通过 event​Target​.dispatch​Event 触发对应目标元素上绑定的 click 事件。</p></blockquote><h2 id="解决方案（不使用-fastClick-）"><a href="#解决方案（不使用-fastClick-）" class="headerlink" title="解决方案（不使用 fastClick ）"></a>解决方案（不使用 fastClick ）</h2><p>hack 技巧支持不添加 fastClick 能修复延迟问题</p><p><strong>1. 禁止缩放</strong></p><p>Chrome on Android (all versions)<br>iOS 9.3<br>IE on Windows Phone</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"user-scalable=no"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  touch-action: manipulation; // IE11+等等</span><br><span class="line">  -ms-touch-action: manipulation; // IE10</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. 不禁止缩放</strong></p><p>Chrome 32+ on Android<br>iOS 9.3</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width"</span> /&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>WebView 移动端原生开发相关知识点，待进一步学习！</p></blockquote><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新时间：2019-9-26</span></span><br><span class="line"><span class="comment">// 区分之前的代码</span></span><br><span class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 这是一个匿名函数</span></span><br><span class="line"><span class="meta">    'use strict'</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @codingstandard ftlabs-jsv2</span></span><br><span class="line"><span class="comment">     * @copyright The Financial Times Limited [All Rights Reserved]</span></span><br><span class="line"><span class="comment">     * @license MIT License (see LICENSE.txt)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">/*jslint browser:true, node:true*/</span></span><br><span class="line">    <span class="comment">/*global define, Event, Node*/</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Instantiate fast-clicking listeners on the specified layer.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @constructor</span></span><br><span class="line"><span class="comment">     * @param &#123;Element&#125; layer The layer to listen on 监听层</span></span><br><span class="line"><span class="comment">     * @param &#123;Object&#125; [options=&#123;&#125;] The options to override the defaults</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">FastClick</span>(<span class="params">layer, options</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> oldOnClick</span><br><span class="line">  </span><br><span class="line">      options = options || &#123;&#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * Whether a click is currently being tracked.</span></span><br><span class="line"><span class="comment">       * 是否跟踪当前点击</span></span><br><span class="line"><span class="comment">       * @type boolean</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">this</span>.trackingClick = <span class="literal">false</span></span><br><span class="line">  </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * Timestamp for when click tracking started.</span></span><br><span class="line"><span class="comment">       * 点击开始的时间戳</span></span><br><span class="line"><span class="comment">       * @type number</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">this</span>.trackingClickStart = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * The element being tracked for a click.</span></span><br><span class="line"><span class="comment">       * 被点击的元素</span></span><br><span class="line"><span class="comment">       * @type EventTarget</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">this</span>.targetElement = <span class="literal">null</span></span><br><span class="line">  </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * X-coordinate of touch start event.</span></span><br><span class="line"><span class="comment">       * 触摸开始事件的 X 坐标</span></span><br><span class="line"><span class="comment">       * @type number</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">this</span>.touchStartX = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * Y-coordinate of touch start event.</span></span><br><span class="line"><span class="comment">       * 触摸开始事件的 Y 坐标</span></span><br><span class="line"><span class="comment">       * @type number</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">this</span>.touchStartY = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * ID of the last touch, retrieved from Touch.identifier.</span></span><br><span class="line"><span class="comment">       * Touch.identifier（标识触摸的唯一ID） 检索的最后一次触摸的 id。</span></span><br><span class="line"><span class="comment">       * @type number</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">this</span>.lastTouchIdentifier = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * Touchmove boundary, beyond which a click will be cancelled.</span></span><br><span class="line"><span class="comment">       * 触摸移动边界，超过此边界将取消单击。</span></span><br><span class="line"><span class="comment">       * @type number</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">this</span>.touchBoundary = options.touchBoundary || <span class="number">10</span></span><br><span class="line">  </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * The FastClick layer.</span></span><br><span class="line"><span class="comment">       * 点击层</span></span><br><span class="line"><span class="comment">       * @type Element</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">this</span>.layer = layer</span><br><span class="line">  </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * The minimum time between tap(touchstart and touchend) events</span></span><br><span class="line"><span class="comment">       * 点按（触摸开始和触摸结束）事件之间的最短时间</span></span><br><span class="line"><span class="comment">       * @type number</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">this</span>.tapDelay = options.tapDelay || <span class="number">200</span></span><br><span class="line">  </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * The maximum time for a tap</span></span><br><span class="line"><span class="comment">       * 最长点击时间</span></span><br><span class="line"><span class="comment">       * @type number</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">this</span>.tapTimeout = options.tapTimeout || <span class="number">700</span></span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 如果是 iOS 9.3 以上 使用 WKWebView 的用户，无需引入 faskClick</span></span><br><span class="line">      <span class="keyword">if</span> (FastClick.notNeeded(layer)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Some old versions of Android don't have Function.prototype.bind</span></span><br><span class="line">      <span class="comment">// 有些旧版安卓不支持 Function.prototype.bind</span></span><br><span class="line">      <span class="comment">// 语法糖，兼容一些用不了 Function.prototype.bind 的旧安卓</span></span><br><span class="line">      <span class="comment">// 所以后面不走 layer.addEventListener('click', this.onClick.bind(this), true);</span></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">bind</span>(<span class="params">method, context</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> method.apply(context, <span class="built_in">arguments</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 触发的事件顺序</span></span><br><span class="line">      <span class="keyword">var</span> methods = [</span><br><span class="line">        <span class="string">'onMouse'</span>,</span><br><span class="line">        <span class="string">'onClick'</span>,</span><br><span class="line">        <span class="string">'onTouchStart'</span>,</span><br><span class="line">        <span class="string">'onTouchMove'</span>,</span><br><span class="line">        <span class="string">'onTouchEnd'</span>,</span><br><span class="line">        <span class="string">'onTouchCancel'</span></span><br><span class="line">      ]</span><br><span class="line">      <span class="keyword">var</span> context = <span class="keyword">this</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, l = methods.length; i &lt; l; i++) &#123;</span><br><span class="line">        context[methods[i]] = bind(context[methods[i]], context) <span class="comment">// 绑定事件方法到当前this对象</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Set up event handlers as required</span></span><br><span class="line">      <span class="comment">// 对安卓，对事件做额外处理</span></span><br><span class="line">      <span class="keyword">if</span> (deviceIsAndroid) &#123;</span><br><span class="line">        <span class="comment">// 可实现拖拽效果</span></span><br><span class="line">        layer.addEventListener(<span class="string">'mouseover'</span>, <span class="keyword">this</span>.onMouse, <span class="literal">true</span>) <span class="comment">// 鼠标按住事件</span></span><br><span class="line">        layer.addEventListener(<span class="string">'mousedown'</span>, <span class="keyword">this</span>.onMouse, <span class="literal">true</span>) <span class="comment">// 鼠标按下事件</span></span><br><span class="line">        layer.addEventListener(<span class="string">'mouseup'</span>, <span class="keyword">this</span>.onMouse, <span class="literal">true</span>) <span class="comment">// 鼠标松开事件</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      layer.addEventListener(<span class="string">'click'</span>, <span class="keyword">this</span>.onClick, <span class="literal">true</span>)</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 当手指触摸屏幕时候触发，即使已经有一个手指放在屏幕上也会触发</span></span><br><span class="line">      layer.addEventListener(<span class="string">'touchstart'</span>, <span class="keyword">this</span>.onTouchStart, <span class="literal">false</span>)</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 当手指在屏幕上滑动的时候连续地触发。在这个事件发生期间，调用 preventDefault() 事件可以阻止滚动</span></span><br><span class="line">      layer.addEventListener(<span class="string">'touchmove'</span>, <span class="keyword">this</span>.onTouchMove, <span class="literal">false</span>)</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 当手指从屏幕上离开的时候触发</span></span><br><span class="line">      layer.addEventListener(<span class="string">'touchend'</span>, <span class="keyword">this</span>.onTouchEnd, <span class="literal">false</span>)</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 当系统停止跟踪触摸的时候触发</span></span><br><span class="line">      layer.addEventListener(<span class="string">'touchcancel'</span>, <span class="keyword">this</span>.onTouchCancel, <span class="literal">false</span>)</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// ios才有的事件，阻止双指放大</span></span><br><span class="line">      layer.addEventListener(<span class="string">'gesturestart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        event.preventDefault()</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">// Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)</span></span><br><span class="line">      <span class="comment">// which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick</span></span><br><span class="line">      <span class="comment">// layer when they are cancelled.</span></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 对于不支持 Event＃stopImmediatePropagation（例如Android 2）的浏览器，需要使用Hack，</span></span><br><span class="line"><span class="comment">       * 这是 FastClick 在取消时通常会停止冒泡到在 FastClick 层上注册的回调单击事件的方式。</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">if</span> (!Event.prototype.stopImmediatePropagation) &#123;</span><br><span class="line">        <span class="comment">// 当前点击时，先移除监听事件</span></span><br><span class="line">        layer.removeEventListener = <span class="function"><span class="keyword">function</span>(<span class="params">type, callback, capture</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> rmv = Node.prototype.removeEventListener</span><br><span class="line">          <span class="keyword">if</span> (type === <span class="string">'click'</span>) &#123;</span><br><span class="line">            rmv.call(layer, type, callback.hijacked || callback, capture)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            rmv.call(layer, type, callback, capture)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        layer.addEventListener = <span class="function"><span class="keyword">function</span>(<span class="params">type, callback, capture</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> adv = Node.prototype.addEventListener</span><br><span class="line">          <span class="keyword">if</span> (type === <span class="string">'click'</span>) &#123;</span><br><span class="line">            <span class="comment">// 留意这里 callback.hijacked 中会判断 event.propagationStopped 是否为真来确保（安卓的onMouse事件）只执行一次</span></span><br><span class="line">            <span class="comment">// 在 onMouse 事件里会给 event.propagationStopped 赋值 true</span></span><br><span class="line">            adv.call(</span><br><span class="line">              layer,</span><br><span class="line">              type,</span><br><span class="line">              callback.hijacked ||</span><br><span class="line">                (callback.hijacked = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">                  <span class="keyword">if</span> (!event.propagationStopped) &#123;</span><br><span class="line">                    callback(event)</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;),</span><br><span class="line">              capture</span><br><span class="line">            )</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            adv.call(layer, type, callback, capture)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// If a handler is already declared in the element's onclick attribute, it will be fired before</span></span><br><span class="line">      <span class="comment">// FastClick's onClick handler. Fix this by pulling out the user-defined handler function and</span></span><br><span class="line">      <span class="comment">// adding it as listener.</span></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 如果被点击元素的 onclick 属性中声明了处理方法，则它将在 FastClick 的 onClick 处理程序之前触发。</span></span><br><span class="line"><span class="comment">       * 通过将用户自定义的处理函数添加到被点击元素的 click 事件上。</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="comment">// 如果layer直接在DOM上写了 onclick 方法，那我们需要把它替换为 addEventListener 绑定形式</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span> layer.onclick === <span class="string">'function'</span>) &#123;</span><br><span class="line">        <span class="comment">// Android browser on at least 3.2 requires a new reference to the function in layer.onclick</span></span><br><span class="line">        <span class="comment">// - the old one won't work if passed to addEventListener directly.</span></span><br><span class="line">        <span class="comment">// 至少在 3.2 以上的Android浏览器需要对 layer.onclick 中的函数进行新引用</span></span><br><span class="line">        <span class="comment">// 如果将旧的函数直接传递给addEventListener，则旧的将不起作用。</span></span><br><span class="line">        oldOnClick = layer.onclick</span><br><span class="line">        layer.addEventListener(</span><br><span class="line">          <span class="string">'click'</span>,</span><br><span class="line">          <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">            oldOnClick(event)</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="literal">false</span></span><br><span class="line">        )</span><br><span class="line">        layer.onclick = <span class="literal">null</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Windows Phone 8.1 fakes user agent string to look like Android and iPhone.</span></span><br><span class="line"><span class="comment">     * Windows Phone 8.1 伪造用户代理字符串，看起来像 Android 和 iPhone</span></span><br><span class="line"><span class="comment">     * @type boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 是否 window 下的 phone 调试设备</span></span><br><span class="line">    <span class="keyword">var</span> deviceIsWindowsPhone = navigator.userAgent.indexOf(<span class="string">'Windows Phone'</span>) &gt;= <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Android requires exceptions.</span></span><br><span class="line"><span class="comment">     * 安卓需要例外</span></span><br><span class="line"><span class="comment">     * @type boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 是否是安卓真机设备</span></span><br><span class="line">    <span class="keyword">var</span> deviceIsAndroid =</span><br><span class="line">      navigator.userAgent.indexOf(<span class="string">'Android'</span>) &gt; <span class="number">0</span> &amp;&amp; !deviceIsWindowsPhone</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * iOS requires exceptions.</span></span><br><span class="line"><span class="comment">     * ios 需要例外</span></span><br><span class="line"><span class="comment">     * @type boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 是否时 phone 真机设备</span></span><br><span class="line">    <span class="keyword">var</span> deviceIsIOS =</span><br><span class="line">      /iP(ad|hone|od)/.test(navigator.userAgent) &amp;&amp; !deviceIsWindowsPhone</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * iOS 4 requires an exception for select elements.</span></span><br><span class="line"><span class="comment">     * iOS 4 选择元素的方式很特别</span></span><br><span class="line"><span class="comment">     * @type boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 是否是 IOS4 设备</span></span><br><span class="line">    <span class="keyword">var</span> deviceIsIOS4 = deviceIsIOS &amp;&amp; <span class="regexp">/OS 4_\d(_\d)?/</span>.test(navigator.userAgent)</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * iOS 6.0-7.* requires the target element to be manually derived</span></span><br><span class="line"><span class="comment">     * iOS 6.0-7* 需要手动导出目标元素</span></span><br><span class="line"><span class="comment">     * @type boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">var</span> deviceIsIOSWithBadTarget =</span><br><span class="line">      deviceIsIOS &amp;&amp; <span class="regexp">/OS [6-7]_\d/</span>.test(navigator.userAgent)</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * BlackBerry requires exceptions.</span></span><br><span class="line"><span class="comment">     * BlackBerry 需要例外</span></span><br><span class="line"><span class="comment">     * @type boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">var</span> deviceIsBlackBerry10 = navigator.userAgent.indexOf(<span class="string">'BB10'</span>) &gt; <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Determine whether a given element requires a native click.</span></span><br><span class="line"><span class="comment">     * 确定给定元素是否需要原生点击</span></span><br><span class="line"><span class="comment">     * @param &#123;EventTarget|Element&#125; target Target DOM element</span></span><br><span class="line"><span class="comment">     * @returns &#123;boolean&#125; Returns true if the element needs a native click</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.needsClick = <span class="function"><span class="keyword">function</span>(<span class="params">target</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">switch</span> (target.nodeName.toLowerCase()) &#123;</span><br><span class="line">        <span class="comment">// Don't send a synthetic click to disabled inputs (issue #62)</span></span><br><span class="line">        <span class="comment">// 被禁止输入的 inputs 不发送合成点击事件</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">'button'</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'select'</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'textarea'</span>:</span><br><span class="line">          <span class="keyword">if</span> (target.disabled) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">'input'</span>:</span><br><span class="line">          <span class="comment">// File inputs need real clicks on iOS 6 due to a browser bug (issue #68)</span></span><br><span class="line">          <span class="comment">// 由于浏览器错误，文件输入需要在iOS 6上进行实际单击（问题＃68）</span></span><br><span class="line">          <span class="keyword">if</span> ((deviceIsIOS &amp;&amp; target.type === <span class="string">'file'</span>) || target.disabled) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">'label'</span>:</span><br><span class="line">  </span><br><span class="line">        <span class="comment">// iOS8 homescreen apps can prevent events bubbling into frames</span></span><br><span class="line">        <span class="comment">// iOS 8 主屏app可以防止事件冒泡成帧</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">'iframe'</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'video'</span>:</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/\bneedsclick\b/</span>.test(target.className)</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Determine whether a given element requires a call to focus to simulate click into element.</span></span><br><span class="line"><span class="comment">     * 确定给定元素是否需要通过点击来实现聚焦。</span></span><br><span class="line"><span class="comment">     * @param &#123;EventTarget|Element&#125; target Target DOM element</span></span><br><span class="line"><span class="comment">     * @returns &#123;boolean&#125; Returns true if the element requires a call to focus to simulate native click.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.needsFocus = <span class="function"><span class="keyword">function</span>(<span class="params">target</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">switch</span> (target.nodeName.toLowerCase()) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'textarea'</span>:</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">'select'</span>:</span><br><span class="line">          <span class="keyword">return</span> !deviceIsAndroid <span class="comment">// iOS下的select得走穿透点击才行</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">'input'</span>:</span><br><span class="line">          <span class="keyword">switch</span> (target.type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'button'</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'checkbox'</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'file'</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'image'</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'radio'</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'submit'</span>:</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          <span class="comment">// No point in attempting to focus disabled inputs</span></span><br><span class="line">          <span class="comment">// 没有聚焦，则无法输入</span></span><br><span class="line">          <span class="keyword">return</span> !target.disabled &amp;&amp; !target.readOnly</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">          <span class="comment">//带有名为“needsfocus”的class则返回true</span></span><br><span class="line">          <span class="keyword">return</span> <span class="regexp">/\bneedsfocus\b/</span>.test(target.className) </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Send a click event to the specified element.</span></span><br><span class="line"><span class="comment">     * 给一个特定元素发送一个点击事件</span></span><br><span class="line"><span class="comment">     * @param &#123;EventTarget|Element&#125; targetElement</span></span><br><span class="line"><span class="comment">     * @param &#123;Event&#125; event</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.sendClick = <span class="function"><span class="keyword">function</span>(<span class="params">targetElement, event</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> clickEvent, touch</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)</span></span><br><span class="line">      <span class="comment">// 在某些 Android 设备上，需要对 activeElement 进行失焦处理，否则合成点击将无效（＃24）</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 在一些安卓机器中，得让页面所存在的 activeElement（聚焦的元素，比如input）失焦，否则合成的click事件将无效</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">document</span>.activeElement &amp;&amp; <span class="built_in">document</span>.activeElement !== targetElement) &#123;</span><br><span class="line">        <span class="built_in">document</span>.activeElement.blur()</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      touch = event.changedTouches[<span class="number">0</span>]</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Synthesise a click event, with an extra attribute so it can be tracked</span></span><br><span class="line">      <span class="comment">// 合成(Synthesise) 一个 click 事件，需要通过一个额外属性确保它能被追踪（tracked）</span></span><br><span class="line">      clickEvent = <span class="built_in">document</span>.createEvent(<span class="string">'MouseEvents'</span>)</span><br><span class="line">      clickEvent.initMouseEvent(</span><br><span class="line">        <span class="keyword">this</span>.determineEventType(targetElement), <span class="comment">// type</span></span><br><span class="line">        <span class="literal">true</span>, <span class="comment">//canBubble</span></span><br><span class="line">        <span class="literal">true</span>, <span class="comment">// canCanceled</span></span><br><span class="line">        <span class="built_in">window</span>, <span class="comment">// view</span></span><br><span class="line">        <span class="number">1</span>, <span class="comment">// detail: 点击了几次</span></span><br><span class="line">        touch.screenX, <span class="comment">// screenX</span></span><br><span class="line">        touch.screenY, <span class="comment">// screenY</span></span><br><span class="line">        touch.clientX,</span><br><span class="line">        touch.clientY,</span><br><span class="line">        <span class="literal">false</span>, <span class="comment">// ctrlKey</span></span><br><span class="line">        <span class="literal">false</span>, <span class="comment">// altKey</span></span><br><span class="line">        <span class="literal">false</span>, <span class="comment">// shiftKey</span></span><br><span class="line">        <span class="literal">false</span>, <span class="comment">// metaKey</span></span><br><span class="line">        <span class="number">0</span>, <span class="comment">// mouseEvent.button 0:鼠标左键 1:鼠标中键 2:鼠标右键 </span></span><br><span class="line">        <span class="literal">null</span> <span class="comment">// 相关节点，在鼠标点击事件中设为null就好了，在mousein等事件中有用</span></span><br><span class="line">      )</span><br><span class="line">      clickEvent.forwardedTouchEvent = <span class="literal">true</span> <span class="comment">// fastclick的内部变量，用来识别click事件是原生还是合成的</span></span><br><span class="line">      targetElement.dispatchEvent(clickEvent) <span class="comment">// 立即触发其click事件</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    FastClick.prototype.determineEventType = <span class="function"><span class="keyword">function</span>(<span class="params">targetElement</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// Issue #159: Android Chrome Select Box does not open with a synthetic click event</span></span><br><span class="line">      <span class="comment">// 安卓设备下 Select 无法通过合成的 click 事件被展开，得改为 mousedown</span></span><br><span class="line">      <span class="keyword">if</span> (deviceIsAndroid &amp;&amp; targetElement.tagName.toLowerCase() === <span class="string">'select'</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'mousedown'</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">'click'</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 聚焦事件</span></span><br><span class="line"><span class="comment">     * @param &#123;EventTarget|Element&#125; targetElement</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.focus = <span class="function"><span class="keyword">function</span>(<span class="params">targetElement</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> length</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Issue #160: on iOS 7, some input elements (e.g. date datetime month) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.</span></span><br><span class="line">      <span class="comment">// 一些输入元素（例如date datetime month）会在 setSelectionRange 上引发模糊的 TypeError。 这些元素的</span></span><br><span class="line">      <span class="comment">// selectionStart 和 selectionEnd 属性没有整数值，但是很遗憾，这些元素不能用于检测，因为访问这些属性还会引发 TypeError。 </span></span><br><span class="line">      <span class="comment">// 只需检查类型即可。归档为Apple错误</span></span><br><span class="line">      <span class="comment">// 具体查看链接：[FastClick遇到的坑及解决办法](https://www.php.cn/js-tutorial-387360.html)</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 组件建议通过setSelectionRange(selectionStart, selectionEnd)来设定光标范围（注意这样还没有聚焦</span></span><br><span class="line">      <span class="comment">// 要等到后面触发 sendClick 事件才会聚焦）</span></span><br><span class="line">      <span class="comment">// 另外 iOS7 下有些input元素(比如 date datetime month) 的 selectionStart 和 selectionEnd 特性是没有整型值的，</span></span><br><span class="line">      <span class="comment">// 导致会抛出一个关于 setSelectionRange 的模糊错误，它们需要改用 focus 事件触发</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (</span><br><span class="line">        deviceIsIOS &amp;&amp;</span><br><span class="line">        targetElement.setSelectionRange &amp;&amp;</span><br><span class="line">        (targetElement.type === <span class="string">'text'</span> ||</span><br><span class="line">          targetElement.type === <span class="string">'search'</span> ||</span><br><span class="line">          targetElement.type === <span class="string">'password'</span> ||</span><br><span class="line">          targetElement.type === <span class="string">'url'</span> ||</span><br><span class="line">          targetElement.type === <span class="string">'tel'</span>)</span><br><span class="line">      ) &#123;</span><br><span class="line">        length = targetElement.value.length</span><br><span class="line">        targetElement.setSelectionRange(length, length)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 直接触发其focus事件</span></span><br><span class="line">        targetElement.focus()</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 我们点击 textarea 时调用了该方法，它通过 targetElement.setSelectionRange(length, length) </span></span><br><span class="line"><span class="comment">       * 决定了光标的位置在内容的尾部（但注意，这时候还没聚焦！！！）。</span></span><br><span class="line"><span class="comment">       * 真正让 textarea 聚焦的是this.sendClick，它合成了一个 click 方法立刻在textarea元素上触发导致聚焦：</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.</span></span><br><span class="line"><span class="comment">     * 检查target是否一个滚动容器里的子元素，如果是则给它加个标记</span></span><br><span class="line"><span class="comment">     * @param &#123;EventTarget|Element&#125; targetElement</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.updateScrollParent = <span class="function"><span class="keyword">function</span>(<span class="params">targetElement</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> scrollParent, parentElement</span><br><span class="line">  </span><br><span class="line">      scrollParent = targetElement.fastClickScrollParent</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the</span></span><br><span class="line">      <span class="comment">// target element was moved to another parent.</span></span><br><span class="line">      <span class="comment">// 尝试发现目标元素是否包含在可滚动层中。 重新检查目标元素是否已移动到另一个父元素。</span></span><br><span class="line">      <span class="keyword">if</span> (!scrollParent || !scrollParent.contains(targetElement)) &#123;</span><br><span class="line">        parentElement = targetElement</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (parentElement.scrollHeight &gt; parentElement.offsetHeight) &#123;</span><br><span class="line">            scrollParent = parentElement</span><br><span class="line">            targetElement.fastClickScrollParent = parentElement</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          parentElement = parentElement.parentElement</span><br><span class="line">        &#125; <span class="keyword">while</span> (parentElement)</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Always update the scroll top tracker if possible.</span></span><br><span class="line">      <span class="comment">// 给滚动容器加个标志fastClickLastScrollTop，值为其当前垂直滚动偏移</span></span><br><span class="line">      <span class="keyword">if</span> (scrollParent) &#123;</span><br><span class="line">        scrollParent.fastClickLastScrollTop = scrollParent.scrollTop</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @param &#123;EventTarget&#125; targetElement</span></span><br><span class="line"><span class="comment">     * @returns &#123;Element|EventTarget&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.getTargetElementFromEventTarget = <span class="function"><span class="keyword">function</span>(<span class="params">eventTarget</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.</span></span><br><span class="line">      <span class="comment">// 在某些较旧的浏览器（尤其是iOS 4.1上的Safari-请参阅问题＃56）上，事件目标可能是文本节点。</span></span><br><span class="line">      <span class="keyword">if</span> (eventTarget.nodeType === Node.TEXT_NODE) &#123;</span><br><span class="line">        <span class="keyword">return</span> eventTarget.parentNode</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> eventTarget</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * On touch start, record the position and scroll offset.</span></span><br><span class="line"><span class="comment">     * 触摸开始时，记录位置和滚动偏移量。</span></span><br><span class="line"><span class="comment">     * @param &#123;Event&#125; event</span></span><br><span class="line"><span class="comment">     * @returns &#123;boolean&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.onTouchStart = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> targetElement, touch, selection</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).</span></span><br><span class="line">      <span class="comment">// 忽略多次触摸，否则，如果两只手指都在FastClick元素上（问题＃111），则可以防止捏住缩放。</span></span><br><span class="line">      <span class="comment">// 多指触控的手势忽略</span></span><br><span class="line">      <span class="keyword">if</span> (event.targetTouches.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 一些较老的浏览器，target 可能会是一个文本节点，得返回其DOM节点</span></span><br><span class="line">      targetElement = <span class="keyword">this</span>.getTargetElementFromEventTarget(event.target)</span><br><span class="line">      touch = event.targetTouches[<span class="number">0</span>]</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (deviceIsIOS) &#123;</span><br><span class="line">        <span class="comment">// 若用户已经选中了一些内容（比如选中了一段文本打算复制），则忽略</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Only trusted events will deselect text on iOS (issue #49)</span></span><br><span class="line">        <span class="comment">// 只有受信任的事件才会取消选择iOS上的文本（问题49）</span></span><br><span class="line">        selection = <span class="built_in">window</span>.getSelection()</span><br><span class="line">        <span class="keyword">if</span> (selection.rangeCount &amp;&amp; !selection.isCollapsed) &#123;</span><br><span class="line">          <span class="comment">// rangeCount 返回有几个选区，打开网页前为0，打开加载完后为1，一般总为1</span></span><br><span class="line">          <span class="comment">// isCollapsed 返回一个布尔值用于描述选区的起始点和终止点是否位于一个位置</span></span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        <span class="keyword">if</span> (!deviceIsIOS4) &#123;</span><br><span class="line">          <span class="comment">// Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):</span></span><br><span class="line">          <span class="comment">// when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched</span></span><br><span class="line">          <span class="comment">// with the same identifier as the touch event that previously triggered the click that triggered the alert.</span></span><br><span class="line">          <span class="comment">// Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an</span></span><br><span class="line">          <span class="comment">// immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.</span></span><br><span class="line">          <span class="comment">// Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,</span></span><br><span class="line">          <span class="comment">// which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,</span></span><br><span class="line">          <span class="comment">// random integers, it's safe to to continue if the identifier is 0 here.</span></span><br><span class="line">          <span class="comment">/**</span></span><br><span class="line"><span class="comment">           * 当从单击事件回调（问题23）中打开alert/confirm时，iOS上会发生奇怪的事情：当用户下一次在页面上的其</span></span><br><span class="line"><span class="comment">           * 他任何位置单击时，将分派新的touchstart和touchend事件，并且事件会拥有同一个touch.identifier</span></span><br><span class="line"><span class="comment">           * （新的 touch event 会跟上一次触发alert点击的 touch event 一样），</span></span><br><span class="line"><span class="comment">           * 遗憾的是，iOS 4上存在一个问题，该问题导致某些正常的触摸事件与紧随其后的触摸事件具有相同的</span></span><br><span class="line"><span class="comment">           * 标识符touch.identifier（issue＃52），为避免将新的event当作之前的event导致问题，这里需要禁用事件。</span></span><br><span class="line"><span class="comment">           * </span></span><br><span class="line"><span class="comment">           * 问题120：使用iOS设备UA字符串设置Chrome开发工具“模拟触摸事件”（'Emulate touch events'）时，</span></span><br><span class="line"><span class="comment">           * touch.identifier为0，这会导致所有触摸事件被忽略。 由于此代码块仅适用于iOS，并且iOS标识符始终</span></span><br><span class="line"><span class="comment">           * 是长且随机的整数，因此如果此处的标识符为0，则可以继续安全地使用。</span></span><br><span class="line"><span class="comment">           */</span></span><br><span class="line">          <span class="keyword">if</span> (touch.identifier &amp;&amp; touch.identifier === <span class="keyword">this</span>.lastTouchIdentifier) &#123;</span><br><span class="line">            event.preventDefault()</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          <span class="keyword">this</span>.lastTouchIdentifier = touch.identifier</span><br><span class="line">  </span><br><span class="line">          <span class="comment">// If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:</span></span><br><span class="line">          <span class="comment">// 1) the user does a fling scroll on the scrollable layer</span></span><br><span class="line">          <span class="comment">// 2) the user stops the fling scroll with another tap</span></span><br><span class="line">          <span class="comment">// then the event.target of the last 'touchend' event will be the element that was under the user's finger</span></span><br><span class="line">          <span class="comment">// when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check</span></span><br><span class="line">          <span class="comment">// is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).</span></span><br><span class="line">         <span class="comment">/**</span></span><br><span class="line"><span class="comment">          * 如果target是一个滚动容器里的一个子元素(使用了 -webkit-overflow-scrolling: touch) ，而且满足:</span></span><br><span class="line"><span class="comment">          * 1) 用户非常快速地滚动外层滚动容器</span></span><br><span class="line"><span class="comment">          * 2) 用户通过tap停止住了这个快速滚动</span></span><br><span class="line"><span class="comment">          * 这时候最后的'touchend'的event.target会变成用户最终手指下的那个元素</span></span><br><span class="line"><span class="comment">          * 所以当快速滚动开始的时候，需要做检查target是否滚动容器的子元素，如果是，做个标记</span></span><br><span class="line"><span class="comment">          * 在touchend时检查这个标记的值（滚动容器的scrolltop）是否改变了，如果是则说明页面在滚动中，需要取消fastclick处理</span></span><br><span class="line"><span class="comment">          */</span></span><br><span class="line">          <span class="keyword">this</span>.updateScrollParent(targetElement)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">this</span>.trackingClick = <span class="literal">true</span> <span class="comment">// 做个标志表示开始追踪click事件了 </span></span><br><span class="line">      <span class="keyword">this</span>.trackingClickStart = event.timeStamp  <span class="comment">// 标记下touch事件开始的时间戳</span></span><br><span class="line">      <span class="keyword">this</span>.targetElement = targetElement</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 标记touch起始点的页面偏移值</span></span><br><span class="line">      <span class="keyword">this</span>.touchStartX = touch.pageX</span><br><span class="line">      <span class="keyword">this</span>.touchStartY = touch.pageY</span><br><span class="line">  </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * this.lastClickTime 是在 touchend 里标记的事件时间戳</span></span><br><span class="line"><span class="comment">       * this.tapDelay 为常量 200 （ms）</span></span><br><span class="line"><span class="comment">       * 此举用来避免 phantom 的双击（200ms内快速点了两次）触发 click</span></span><br><span class="line"><span class="comment">       * 反正200ms内的第二次点击会禁止触发其默认事件</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="comment">// Prevent phantom clicks on fast double-tap (issue #36)</span></span><br><span class="line">      <span class="comment">// 防止太快的双击被认为多次点击，第二次点击禁止其触发默认事件</span></span><br><span class="line">      <span class="keyword">if</span> (event.timeStamp - <span class="keyword">this</span>.lastClickTime &lt; <span class="keyword">this</span>.tapDelay) &#123;</span><br><span class="line">        event.preventDefault()</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.</span></span><br><span class="line"><span class="comment">     * 判断是否移动了</span></span><br><span class="line"><span class="comment">     * this.touchBoundary是常量，值为10</span></span><br><span class="line"><span class="comment">     * 如果touch已经移动了10个偏移量单位，则应当作为移动事件处理而非click事件</span></span><br><span class="line"><span class="comment">     * @param &#123;Event&#125; event</span></span><br><span class="line"><span class="comment">     * @returns &#123;boolean&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.touchHasMoved = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> touch = event.changedTouches[<span class="number">0</span>],</span><br><span class="line">        boundary = <span class="keyword">this</span>.touchBoundary</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (</span><br><span class="line">        <span class="built_in">Math</span>.abs(touch.pageX - <span class="keyword">this</span>.touchStartX) &gt; boundary ||</span><br><span class="line">        <span class="built_in">Math</span>.abs(touch.pageY - <span class="keyword">this</span>.touchStartY) &gt; boundary</span><br><span class="line">      ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Update the last position.</span></span><br><span class="line"><span class="comment">     * 更新移动的最后位置</span></span><br><span class="line"><span class="comment">     * @param &#123;Event&#125; event</span></span><br><span class="line"><span class="comment">     * @returns &#123;boolean&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.onTouchMove = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 不是需要被追踪click的事件则忽略</span></span><br><span class="line">      <span class="keyword">if</span> (!<span class="keyword">this</span>.trackingClick) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// If the touch has moved, cancel the click tracking</span></span><br><span class="line">      <span class="comment">// 如果target突然改变了，或者用户其实是在移动手势而非想要click</span></span><br><span class="line">      <span class="comment">// 则应该清掉this.trackingClick和this. targetElement，告诉后面的事件你们也不用处理了</span></span><br><span class="line">      <span class="keyword">if</span> (</span><br><span class="line">        <span class="keyword">this</span>.targetElement !==</span><br><span class="line">          <span class="keyword">this</span>.getTargetElementFromEventTarget(event.target) ||</span><br><span class="line">        <span class="keyword">this</span>.touchHasMoved(event)</span><br><span class="line">      ) &#123;</span><br><span class="line">        <span class="keyword">this</span>.trackingClick = <span class="literal">false</span></span><br><span class="line">        <span class="keyword">this</span>.targetElement = <span class="literal">null</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Attempt to find the labelled control for the given label element.</span></span><br><span class="line"><span class="comment">     * 获取label元素的control属性</span></span><br><span class="line"><span class="comment">     * @param &#123;EventTarget|HTMLLabelElement&#125; labelElement</span></span><br><span class="line"><span class="comment">     * @returns &#123;Element|null&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.findControl = <span class="function"><span class="keyword">function</span>(<span class="params">labelElement</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// Fast path for newer browsers supporting the HTML5 control attribute</span></span><br><span class="line">      <span class="comment">// 支持 HTML5 控件属性的最新浏览器，标签能通过 control 属性来访问标签的全部属性</span></span><br><span class="line">      <span class="keyword">if</span> (labelElement.control !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> labelElement.control</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// All browsers under test that support touch events also support the HTML5 htmlFor attribute</span></span><br><span class="line">      <span class="comment">// 经过测试支持触摸事件的浏览器也都支持HTML5 htmlFor属性</span></span><br><span class="line">      <span class="keyword">if</span> (labelElement.htmlFor) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(labelElement.htmlFor)</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// If no for attribute exists, attempt to retrieve the first labellable descendant element</span></span><br><span class="line">      <span class="comment">// the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label</span></span><br><span class="line">      <span class="comment">// 如果不存在for属性，则尝试检索第一个可标记的后代元素</span></span><br><span class="line">      <span class="keyword">return</span> labelElement.querySelector(</span><br><span class="line">        <span class="string">'button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea'</span></span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * On touch end, determine whether to send a click event at once.</span></span><br><span class="line"><span class="comment">     * 触摸结束时，确定立即发送点击事件</span></span><br><span class="line"><span class="comment">     * @param &#123;Event&#125; event</span></span><br><span class="line"><span class="comment">     * @returns &#123;boolean&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.onTouchEnd = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> forElement,</span><br><span class="line">        trackingClickStart,</span><br><span class="line">        targetTagName,</span><br><span class="line">        scrollParent,</span><br><span class="line">        touch,</span><br><span class="line">        targetElement = <span class="keyword">this</span>.targetElement</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (!<span class="keyword">this</span>.trackingClick) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Prevent phantom clicks on fast double-tap (issue #36)</span></span><br><span class="line">      <span class="comment">// 避免 phantom 的双击（200ms内快速点了两次）触发 click</span></span><br><span class="line">      <span class="keyword">if</span> (event.timeStamp - <span class="keyword">this</span>.lastClickTime &lt; <span class="keyword">this</span>.tapDelay) &#123;</span><br><span class="line">        <span class="keyword">this</span>.cancelNextClick = <span class="literal">true</span> <span class="comment">// 该属性会在 onMouse 事件中被判断，为 true 则彻底禁用事件和冒泡</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// this.tapTimeout是常量，值为70</span></span><br><span class="line">      <span class="comment">// 识别是否为长按事件，如果是（大于700ms）则忽略</span></span><br><span class="line">      <span class="keyword">if</span> (event.timeStamp - <span class="keyword">this</span>.trackingClickStart &gt; <span class="keyword">this</span>.tapTimeout) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Reset to prevent wrong click cancel on input (issue #156).</span></span><br><span class="line">      <span class="comment">// 重置为 false ，避免 input 事件被意外取消</span></span><br><span class="line">      <span class="comment">// 例子见 https://github.com/ftlabs/fastclick/issues/156</span></span><br><span class="line">      <span class="keyword">this</span>.cancelNextClick = <span class="literal">false</span></span><br><span class="line">      <span class="comment">//标记 touchend 时间，方便下一次的 touchstart 做双击校验</span></span><br><span class="line">      <span class="keyword">this</span>.lastClickTime = event.timeStamp</span><br><span class="line">  </span><br><span class="line">      trackingClickStart = <span class="keyword">this</span>.trackingClickStart</span><br><span class="line">      <span class="comment">// 重置 this.trackingClick 和 this.trackingClickStart</span></span><br><span class="line">      <span class="keyword">this</span>.trackingClick = <span class="literal">false</span></span><br><span class="line">      <span class="keyword">this</span>.trackingClickStart = <span class="number">0</span></span><br><span class="line">  </span><br><span class="line">      <span class="comment">// On some iOS devices, the targetElement supplied with the event is invalid if the layer</span></span><br><span class="line">      <span class="comment">// is performing a transition or scroll, and has to be re-detected manually. Note that</span></span><br><span class="line">      <span class="comment">// for this to function correctly, it must be called *after* the event target is checked!</span></span><br><span class="line">      <span class="comment">// See issue #57; also filed as rdar://13048589 .</span></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 在某些iOS设备上，如果图层正在执行过渡或滚动，则事件附带的targetElement无效，必须手动重新检测。</span></span><br><span class="line"><span class="comment">       * 请注意，要使其正常运行，必须在检查事件目标之后调用它！</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// iOS 6.0-7.*版本下有个问题 —— 如果layer处于transition或scroll过程，event所提供的target是不正确的</span></span><br><span class="line">       <span class="comment">// 所以得重找 targetElement（这里通过 document.elementFromPoint 接口来寻找）</span></span><br><span class="line">      <span class="keyword">if</span> (deviceIsIOSWithBadTarget) &#123; <span class="comment">// 判断iOS 6.0-7.*版本</span></span><br><span class="line">        touch = event.changedTouches[<span class="number">0</span>] <span class="comment">// 手指离开前的触点</span></span><br><span class="line">  </span><br><span class="line">        <span class="comment">// In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null</span></span><br><span class="line">        <span class="comment">// 有些情况下 elementFromPoint 里的参数是预期外/不可用的, 所以还得避免 targetElement 为 null</span></span><br><span class="line">        targetElement =</span><br><span class="line">          <span class="built_in">document</span>.elementFromPoint(</span><br><span class="line">            touch.pageX - <span class="built_in">window</span>.pageXOffset,</span><br><span class="line">            touch.pageY - <span class="built_in">window</span>.pageYOffset</span><br><span class="line">          ) || targetElement</span><br><span class="line">        <span class="comment">// target可能不正确需要重找，但fastClickScrollParent是不会变的</span></span><br><span class="line">        targetElement.fastClickScrollParent = <span class="keyword">this</span>.targetElement.fastClickScrollParent</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      targetTagName = targetElement.tagName.toLowerCase()</span><br><span class="line">      <span class="keyword">if</span> (targetTagName === <span class="string">'label'</span>) &#123; <span class="comment">// 是label则激活其指向的组件</span></span><br><span class="line">        forElement = <span class="keyword">this</span>.findControl(targetElement)</span><br><span class="line">        <span class="keyword">if</span> (forElement) &#123;</span><br><span class="line">          <span class="keyword">this</span>.focus(targetElement)</span><br><span class="line">          <span class="comment">// 安卓直接返回（无需合成click事件触发，因为点击和激活元素不同，不存在点透）</span></span><br><span class="line">          <span class="keyword">if</span> (deviceIsAndroid) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          targetElement = forElement</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.needsFocus(targetElement)) &#123; <span class="comment">// 非label则识别是否需要 focus 的元素</span></span><br><span class="line">        <span class="comment">// Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 如果触摸是在不久前开始的（根据问题36的测试，最佳猜测是100毫秒），则无论如何都会触发焦点。 尽早返回并</span></span><br><span class="line"><span class="comment">         * 取消设置目标元素引用，以便允许后续单击。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 如果将文档包含在iframe中时，针对输入元素的也不例外，那么即使value属性随着用户类型的更新而更新，</span></span><br><span class="line"><span class="comment">         * 所有输入的文本也将不可见（问题＃37）。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">         <span class="comment">//手势停留在组件元素时长超过100ms，则置空 this.targetElement 并返回</span></span><br><span class="line">         <span class="comment">//（而不是通过调用 this.focus 来触发其聚焦事件，走的原生的 click/focus 事件触发流程）</span></span><br><span class="line">         <span class="comment">//这也是为何文章开头提到的问题中，稍微久按一点（超过100ms）textarea是可以把光标定位在正确的地方的原因</span></span><br><span class="line"></span><br><span class="line">         <span class="comment">// 另外 iOS 下有个意料之外的 bug ——如果被点击的元素所在文档是在 iframe 中的，手动调用其 focus 的话，</span></span><br><span class="line">         <span class="comment">// 会发现你往其中输入的 text 是看不到的（即使value做了更新），so这里也直接返回</span></span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">          event.timeStamp - trackingClickStart &gt; <span class="number">100</span> ||</span><br><span class="line">          (deviceIsIOS &amp;&amp; <span class="built_in">window</span>.top !== <span class="built_in">window</span> &amp;&amp; targetTagName === <span class="string">'input'</span>)</span><br><span class="line">        ) &#123;</span><br><span class="line">          <span class="keyword">this</span>.targetElement = <span class="literal">null</span></span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        <span class="keyword">this</span>.focus(targetElement)</span><br><span class="line">        <span class="keyword">this</span>.sendClick(targetElement, event) <span class="comment">// 立即触发其click事件，而无须等待300ms</span></span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.</span></span><br><span class="line">        <span class="comment">// 选择元素需要事件在 iOS4 上通过，否则选择器菜单将不会打开。</span></span><br><span class="line">        <span class="comment">// Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)</span></span><br><span class="line">        <span class="comment">// 当 VoiceOver 在 iOS6，iOS7（可能还有其他）上处于活动状态时，这也会破坏打开选择</span></span><br><span class="line">        <span class="keyword">var</span> isTextInput = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> targetTagName === <span class="string">'textarea'</span> || targetTagName === <span class="string">'input'</span></span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        <span class="comment">// iOS4下的 select 元素不能禁用默认事件（要确保它能被穿透），否则不会打开select目录</span></span><br><span class="line">        <span class="comment">// 有时候 iOS6/7 下（VoiceOver开启的情况下）也会如此</span></span><br><span class="line">        <span class="keyword">if</span> ((!deviceIsIOS || targetTagName !== <span class="string">'select'</span>) &amp; !isTextInput) &#123;</span><br><span class="line">          <span class="keyword">this</span>.targetElement = <span class="literal">null</span></span><br><span class="line">          event.preventDefault()</span><br><span class="line">          <span class="comment">// 导致 =》 轻点 textarea 后，光标就自然定位到其内容尾部去了。</span></span><br><span class="line">          <span class="comment">// 但是这里有个问题——排在 touchend 后的 focus 事件为啥没被触发呢？</span></span><br><span class="line">          <span class="comment">// 如果 focus 事件能被触发的话，那肯定能重新定位光标到正确的位置呀。</span></span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (deviceIsIOS &amp;&amp; !deviceIsIOS4) &#123;</span><br><span class="line">        <span class="comment">// Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled</span></span><br><span class="line">        <span class="comment">// and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).</span></span><br><span class="line">        <span class="comment">// 如果目标元素包含在已滚动的父层中并且通过 tap 来停止滚动（通常由猛击引发-问题＃42），则不要发送合成点击事件。</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 滚动容器的垂直滚动偏移改变了，说明是容器在做滚动而非点击，则忽略</span></span><br><span class="line">        scrollParent = targetElement.fastClickScrollParent</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">          scrollParent &amp;&amp;</span><br><span class="line">          scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop</span><br><span class="line">        ) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Prevent the actual click from going though - unless the target node is marked as requiring</span></span><br><span class="line">      <span class="comment">// real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.</span></span><br><span class="line">      <span class="comment">// 阻止实际点击，除非目标节点被标记为需要实际点击，或者如果它在白名单中，在这种情况下，仅允许非程序性点击。</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 查看元素是否无需处理的白名单内（比如加了名为“needsclick”的class）</span></span><br><span class="line">      <span class="comment">// 不是白名单的则照旧预防穿透处理，立即触发合成的click事件</span></span><br><span class="line">      <span class="keyword">if</span> (!<span class="keyword">this</span>.needsClick(targetElement)) &#123;</span><br><span class="line">        event.preventDefault()</span><br><span class="line">        <span class="keyword">this</span>.sendClick(targetElement, event)</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * On touch cancel, stop tracking the click.</span></span><br><span class="line"><span class="comment">     * 触摸取消时，停止跟踪点击。</span></span><br><span class="line"><span class="comment">     * @returns &#123;void&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.onTouchCancel = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.trackingClick = <span class="literal">false</span></span><br><span class="line">      <span class="keyword">this</span>.targetElement = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Determine mouse events which should be permitted.</span></span><br><span class="line"><span class="comment">     * 用于决定是否允许穿透事件（触发layer的click默认事件）</span></span><br><span class="line"><span class="comment">     * @param &#123;Event&#125; event</span></span><br><span class="line"><span class="comment">     * @returns &#123;boolean&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.onMouse = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// If a target element was never set (because a touch event was never fired) allow the event</span></span><br><span class="line">      <span class="comment">// touch事件一直没触发</span></span><br><span class="line">      <span class="keyword">if</span> (!<span class="keyword">this</span>.targetElement) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 触发的click事件是合成的</span></span><br><span class="line">      <span class="keyword">if</span> (event.forwardedTouchEvent) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Programmatically generated events targeting a specific element should be permitted</span></span><br><span class="line">      <span class="comment">// 编程派生的事件所对应元素事件可以被允许</span></span><br><span class="line">      <span class="comment">// 确保其没执行过 preventDefault 方法（event.cancelable 不为 true）即可</span></span><br><span class="line">      <span class="keyword">if</span> (!event.cancelable) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Derive and check the target element to see whether the mouse event needs to be permitted;</span></span><br><span class="line">      <span class="comment">// unless explicitly enabled, prevent non-touch click events from triggering actions,</span></span><br><span class="line">      <span class="comment">// to prevent ghost/doubleclicks.</span></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 需要做预防穿透处理的元素，或者做了快速（200ms）双击的情况</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">if</span> (!<span class="keyword">this</span>.needsClick(<span class="keyword">this</span>.targetElement) || <span class="keyword">this</span>.cancelNextClick) &#123;</span><br><span class="line">        <span class="comment">// Prevent any user-added listeners declared on FastClick element from being fired.</span></span><br><span class="line">        <span class="comment">// 停止当前默认事件和冒泡</span></span><br><span class="line">        <span class="keyword">if</span> (event.stopImmediatePropagation) &#123;</span><br><span class="line">          event.stopImmediatePropagation()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)</span></span><br><span class="line">          <span class="comment">// 部分浏览器内核不支持stopImmediatePropagation（比如，Android 2）</span></span><br><span class="line">          event.propagationStopped = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Cancel the event</span></span><br><span class="line">        <span class="comment">// 取消事件和冒泡</span></span><br><span class="line">        event.stopPropagation()</span><br><span class="line">        event.preventDefault()</span><br><span class="line">  </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// If the mouse event is permitted, return true for the action to go through.</span></span><br><span class="line">      <span class="comment">// 允许穿透</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * On actual clicks, determine whether this is a touch-generated click, a click action occurring</span></span><br><span class="line"><span class="comment">     * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or</span></span><br><span class="line"><span class="comment">     * an actual click which should be permitted.</span></span><br><span class="line"><span class="comment">     * click事件常规都是touch事件衍生来的，也排在touch后面触发。</span></span><br><span class="line"><span class="comment">     * 对于那些我们在touch事件过程没有禁用掉默认事件的event来说，我们还需要在click的捕获阶段进一步</span></span><br><span class="line"><span class="comment">     * 做判断决定是否要禁掉点击事件（防穿透）</span></span><br><span class="line"><span class="comment">     * @param &#123;Event&#125; event</span></span><br><span class="line"><span class="comment">     * @returns &#123;boolean&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.onClick = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> permitted</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.</span></span><br><span class="line">      <span class="comment">// 随第三方代码一起提供的另一个类似FastClick的库有可能在FastClick之前触发click事件（问题＃44）。</span></span><br><span class="line">      <span class="comment">// 在这种情况下，将点击跟踪标记设置回false并尽快返回。 这将导致onTouchEnd提前返回。</span></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 如果还有 trackingClick 存在，可能是某些UI事件阻塞了touchEnd 的执行</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.trackingClick) &#123;</span><br><span class="line">        <span class="keyword">this</span>.targetElement = <span class="literal">null</span></span><br><span class="line">        <span class="keyword">this</span>.trackingClick = <span class="literal">false</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.</span></span><br><span class="line">      <span class="comment">// 依旧是对 iOS 怪异行为的处理: 如果用户点击了iOS模拟器里某个表单中的一个submit元素</span></span><br><span class="line">      <span class="comment">// 或者点击了弹出来的键盘里的“Go”按钮，会触发一个“伪”click事件（target是一个submit-type的input元素）</span></span><br><span class="line">      <span class="keyword">if</span> (event.target.type === <span class="string">'submit'</span> &amp;&amp; event.detail === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      permitted = <span class="keyword">this</span>.onMouse(event)</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.</span></span><br><span class="line">      <span class="comment">// 如果点击是被允许的，将 this.targetElement 置空可以确保 onMouse 事件里不会阻止默认事件</span></span><br><span class="line">      <span class="keyword">if</span> (!permitted) &#123;</span><br><span class="line">        <span class="keyword">this</span>.targetElement = <span class="literal">null</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// If clicks are permitted, return true for the action to go through.</span></span><br><span class="line">      <span class="comment">// 如果允许点击，则返回 true 确保程序继续执行</span></span><br><span class="line">      <span class="keyword">return</span> permitted</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Remove all FastClick's event listeners.</span></span><br><span class="line"><span class="comment">     * 移除 FastClick 所有监听器</span></span><br><span class="line"><span class="comment">     * @returns &#123;void&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.prototype.destroy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> layer = <span class="keyword">this</span>.layer</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (deviceIsAndroid) &#123;</span><br><span class="line">        layer.removeEventListener(<span class="string">'mouseover'</span>, <span class="keyword">this</span>.onMouse, <span class="literal">true</span>)</span><br><span class="line">        layer.removeEventListener(<span class="string">'mousedown'</span>, <span class="keyword">this</span>.onMouse, <span class="literal">true</span>)</span><br><span class="line">        layer.removeEventListener(<span class="string">'mouseup'</span>, <span class="keyword">this</span>.onMouse, <span class="literal">true</span>)</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      layer.removeEventListener(<span class="string">'click'</span>, <span class="keyword">this</span>.onClick, <span class="literal">true</span>)</span><br><span class="line">      layer.removeEventListener(<span class="string">'touchstart'</span>, <span class="keyword">this</span>.onTouchStart, <span class="literal">false</span>)</span><br><span class="line">      layer.removeEventListener(<span class="string">'touchmove'</span>, <span class="keyword">this</span>.onTouchMove, <span class="literal">false</span>)</span><br><span class="line">      layer.removeEventListener(<span class="string">'touchend'</span>, <span class="keyword">this</span>.onTouchEnd, <span class="literal">false</span>)</span><br><span class="line">      layer.removeEventListener(<span class="string">'touchcancel'</span>, <span class="keyword">this</span>.onTouchCancel, <span class="literal">false</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Check whether FastClick is needed.</span></span><br><span class="line"><span class="comment">     * 销毁Fastclick所注册的监听事件。是给外部实例去调用的</span></span><br><span class="line"><span class="comment">     * @param &#123;Element&#125; layer The layer to listen on</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.notNeeded = <span class="function"><span class="keyword">function</span>(<span class="params">layer</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> metaViewport</span><br><span class="line">      <span class="keyword">var</span> chromeVersion</span><br><span class="line">      <span class="keyword">var</span> blackberryVersion</span><br><span class="line">      <span class="keyword">var</span> firefoxVersion</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Devices that don't support touch don't need FastClick</span></span><br><span class="line">      <span class="comment">// 不支持触屏的设备</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span>.ontouchstart === <span class="string">'undefined'</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Chrome version - zero for other browsers</span></span><br><span class="line">      <span class="comment">// 获取 Chrome 版本号，若非 Chrome 则返回 0</span></span><br><span class="line">      chromeVersion = +(<span class="regexp">/Chrome\/([0-9]+)/</span>.exec(navigator.userAgent) || [, <span class="number">0</span>])[<span class="number">1</span>] <span class="comment">// 匹配谷歌版本</span></span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (chromeVersion) &#123;</span><br><span class="line">        <span class="keyword">if</span> (deviceIsAndroid) &#123;</span><br><span class="line">          metaViewport = <span class="built_in">document</span>.querySelector(<span class="string">'meta[name=viewport]'</span>)</span><br><span class="line">  </span><br><span class="line">          <span class="keyword">if</span> (metaViewport) &#123;</span><br><span class="line">            <span class="comment">// Chrome on Android with user-scalable="no" doesn't need FastClick (issue #89)</span></span><br><span class="line">            <span class="comment">// 安卓版谷歌设置了 user-scalable="no" ， 则不需要 FastClick</span></span><br><span class="line">            <span class="keyword">if</span> (metaViewport.content.indexOf(<span class="string">'user-scalable=no'</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Chrome 32 and above with width=device-width or less don't need FastClick</span></span><br><span class="line">            <span class="comment">// 带有 idth=device-width 的Chrome 32及更高版本不需要 FastClick</span></span><br><span class="line">            <span class="keyword">if</span> (</span><br><span class="line">              chromeVersion &gt; <span class="number">31</span> &amp;&amp;</span><br><span class="line">              <span class="built_in">document</span>.documentElement.scrollWidth &lt;= <span class="built_in">window</span>.outerWidth</span><br><span class="line">            ) &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">  </span><br><span class="line">          <span class="comment">// Chrome desktop doesn't need FastClick (issue #15)</span></span><br><span class="line">          <span class="comment">// 桌面级的 Chrome 不需要 FastClick</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (deviceIsBlackBerry10) &#123;</span><br><span class="line">        blackberryVersion = navigator.userAgent.match(</span><br><span class="line">          /Version\/([<span class="number">0</span><span class="number">-9</span>]*)\.([<span class="number">0</span><span class="number">-9</span>]*)/</span><br><span class="line">        )</span><br><span class="line">  </span><br><span class="line">        <span class="comment">// BlackBerry 10.3+ does not require Fastclick library.</span></span><br><span class="line">        <span class="comment">// BlackBerry 10.3+不需要Fastclick库。</span></span><br><span class="line">        <span class="comment">// https://github.com/ftlabs/fastclick/issues/251</span></span><br><span class="line">        <span class="keyword">if</span> (blackberryVersion[<span class="number">1</span>] &gt;= <span class="number">10</span> &amp;&amp; blackberryVersion[<span class="number">2</span>] &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">          metaViewport = <span class="built_in">document</span>.querySelector(<span class="string">'meta[name=viewport]'</span>)</span><br><span class="line">  </span><br><span class="line">          <span class="keyword">if</span> (metaViewport) &#123;</span><br><span class="line">            <span class="comment">// user-scalable=no eliminates click delay.</span></span><br><span class="line">            <span class="comment">// user-scalable = no消除点击延迟。</span></span><br><span class="line">            <span class="keyword">if</span> (metaViewport.content.indexOf(<span class="string">'user-scalable=no'</span>) !== <span class="number">-1</span>) &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// width=device-width (or less than device-width) eliminates click delay.</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">document</span>.documentElement.scrollWidth &lt;= <span class="built_in">window</span>.outerWidth) &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// IE10 with -ms-touch-action: none or manipulation, which disables double-tap-to-zoom (issue #97)</span></span><br><span class="line">      <span class="comment">// 带有-ms-touch-action的IE10：none 或 manipulation属性值，可禁用双击放大，因此也没有300ms延迟问题（问题＃97）</span></span><br><span class="line">      <span class="keyword">if</span> (</span><br><span class="line">        layer.style.msTouchAction === <span class="string">'none'</span> ||</span><br><span class="line">        layer.style.touchAction === <span class="string">'manipulation'</span></span><br><span class="line">      ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// Firefox version - zero for other browsers</span></span><br><span class="line">      firefoxVersion = +(<span class="regexp">/Firefox\/([0-9]+)/</span>.exec(navigator.userAgent) || [</span><br><span class="line">        ,</span><br><span class="line">        <span class="number">0</span></span><br><span class="line">      ])[<span class="number">1</span>]</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (firefoxVersion &gt;= <span class="number">27</span>) &#123;</span><br><span class="line">        <span class="comment">// Firefox 27+ does not have tap delay if the content is not zoomable - https://bugzilla.mozilla.org/show_bug.cgi?id=922896</span></span><br><span class="line">        <span class="comment">// 如果内容不可缩放，Firefox 27+没有点击延迟-https://bugzilla.mozilla.org/show_bug.cgi?id=922896</span></span><br><span class="line">        metaViewport = <span class="built_in">document</span>.querySelector(<span class="string">'meta[name=viewport]'</span>)</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">          metaViewport &amp;&amp;</span><br><span class="line">          (metaViewport.content.indexOf(<span class="string">'user-scalable=no'</span>) !== <span class="number">-1</span> ||</span><br><span class="line">            <span class="built_in">document</span>.documentElement.scrollWidth &lt;= <span class="built_in">window</span>.outerWidth)</span><br><span class="line">        ) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="comment">// IE11: prefixed -ms-touch-action is no longer supported and it's recomended to use non-prefixed version</span></span><br><span class="line">      <span class="comment">// IE11：前缀 -ms-touch-action 不再受支持，推荐使用没有“-ms-”前缀的 touch-action 样式特性名</span></span><br><span class="line">      <span class="comment">// http://msdn.microsoft.com/en-us/library/windows/apps/Hh767313.aspx</span></span><br><span class="line">      <span class="keyword">if</span> (</span><br><span class="line">        layer.style.touchAction === <span class="string">'none'</span> ||</span><br><span class="line">        layer.style.touchAction === <span class="string">'manipulation'</span></span><br><span class="line">      ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Factory method for creating a FastClick object</span></span><br><span class="line"><span class="comment">     * 工厂模式，用于创建一个 FastClick 对象</span></span><br><span class="line"><span class="comment">     * @param &#123;Element&#125; layer The layer to listen on</span></span><br><span class="line"><span class="comment">     * @param &#123;Object&#125; [options=&#123;&#125;] The options to override the defaults</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    FastClick.attach = <span class="function"><span class="keyword">function</span>(<span class="params">layer, options</span>) </span>&#123; <span class="comment">// 生成实例</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> FastClick(layer, options)</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp;</span><br><span class="line">      <span class="keyword">typeof</span> define.amd === <span class="string">'object'</span> &amp;&amp;</span><br><span class="line">      define.amd</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="comment">// AMD. Register as an anonymous module.</span></span><br><span class="line">      <span class="comment">// AMD 注册匿名模块</span></span><br><span class="line">      define(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> FastClick</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> &amp;&amp; <span class="built_in">module</span>.exports) &#123;</span><br><span class="line">      <span class="built_in">module</span>.exports = FastClick.attach</span><br><span class="line">      <span class="built_in">module</span>.exports.FastClick = FastClick</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">window</span>.FastClick = FastClick</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)()</span><br></pre></td></tr></table></figure><blockquote><p><strong>总结：</strong></p><ul><li>在 fastclick 源码的 addEventListener 回调事件中有很多的 return false/true。它们其实主要用于绕过后面的脚本逻辑，并没有其它意义（它是不会阻止默认事件的）。</li><li>fastclick 的源码其实很简单，有很大部分不外乎对一些怪异行为做 hack，其核心理念不外乎是——捕获 target 事件，判断 target 是要解决点透问题的元素，就合成一个 click 事件在 target 上触发，同时通过 preventDefault 禁用默认事件。</li><li>fastclick 虽好，但也有一些坑，还是得按需求对其修改，那么了解其源码还是很有必要的。</li></ul></blockquote><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li><p>对于 ios 9.3 以上使用 WKWebView 的用户，无需引入 fastClick ，引入可能存在隐藏问题。</p></li><li><p>纯的通过 UA 是无法区分 UIWebView 和 WKWebView 的。如果页面是在自己 App 中话，可以通过在 UA 中携带 WebView的信息来决定是否加载</p></li></ol><h2 id="延迟检测code"><a href="#延迟检测code" class="headerlink" title="延迟检测code"></a>延迟检测code</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"userAgent"</span>&gt;</span>userAgent:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"userAgent"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"touchstart"</span>&gt;</span>touchstart:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"touchstart"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"touchend"</span>&gt;</span>touchend:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"touchend"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"click"</span>&gt;</span>click:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"click"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"diffClickTouchend"</span>&gt;</span>diff click - touchend:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"diffClickTouchend"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span>test<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"diff"</span>&gt;</span>diff<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> userAgent = <span class="built_in">document</span>.getElementById(<span class="string">'userAgent'</span>);</span></span><br><span class="line"><span class="javascript">      userAgent.innerText = <span class="built_in">window</span>.navigator.userAgent;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> test = <span class="built_in">document</span>.getElementById(<span class="string">'test'</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> diff = <span class="built_in">document</span>.getElementById(<span class="string">'diff'</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> touchstart = <span class="built_in">document</span>.getElementById(<span class="string">'touchstart'</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> touchend = <span class="built_in">document</span>.getElementById(<span class="string">'touchend'</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> click = <span class="built_in">document</span>.getElementById(<span class="string">'click'</span>);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> diffClickTouchend = <span class="built_in">document</span>.getElementById(<span class="string">'diffClickTouchend'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">      test.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        touchstart.innerText = <span class="built_in">Date</span>.now();</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line"><span class="javascript">      test.addEventListener(<span class="string">'touchend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        touchend.innerText = <span class="built_in">Date</span>.now();</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line"><span class="javascript">      test.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        click.innerText = <span class="built_in">Date</span>.now();</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line"><span class="javascript">      diff.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        diffClickTouchend.innerText = click.innerText - touchend.innerText;</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://juejin.im/post/5ce764a2f265da1b8c19645a" target="_blank" rel="noopener">2019 再聊移动端 300ms 延迟及 fastClick 原理解析</a></p><p><a href="https://github.com/chuchur-china/vue-fastclick" target="_blank" rel="noopener">vue-fastClick源码git地址</a></p><p><a href="https://blog.csdn.net/flyingpig2016/article/details/53737348" target="_blank" rel="noopener">js中的touch事件及gesture(手势)事件详解 — 第13.4.9节</a></p><p><a href="https://www.jianshu.com/p/c7a29a7d3e4d" target="_blank" rel="noopener">创建事件、触发事件</a></p><p><a href="https://www.php.cn/js-tutorial-387360.html" target="_blank" rel="noopener">FastClick遇到的坑及解决办法</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运行环境 </tag>
            
            <tag> 移动端适配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-echarts &amp;&amp; echarts</title>
      <link href="/2019/09/24/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue-echarts/"/>
      <url>/2019/09/24/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue-echarts/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install echarts vue-echarts</span><br></pre></td></tr></table></figure><blockquote><p><strong>echarts 和 vue-echarts 两个包的区别</strong><br>echarts就是普通的js库<br>vue-echarts是封装后的vue插件 按照vue插件那样使用</p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="vue3配置"><a href="#vue3配置" class="headerlink" title="vue3配置"></a>vue3配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// vue.config.js</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  transpileDependencies: [</span><br><span class="line">    &apos;vue-echarts&apos;,</span><br><span class="line">    &apos;resize-detector&apos;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="vue2配置"><a href="#vue2配置" class="headerlink" title="vue2配置"></a>vue2配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// build/webpack.base.conf.js</span></span><br><span class="line">     &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">-       include: [resolve(<span class="string">'src'</span>), resolve(<span class="string">'test'</span>)]</span><br><span class="line">+       include: [</span><br><span class="line">+         resolve(<span class="string">'src'</span>),</span><br><span class="line">+         resolve(<span class="string">'test'</span>),</span><br><span class="line">+         resolve(<span class="string">'node_modules/vue-echarts'</span>),</span><br><span class="line">+         resolve(<span class="string">'node_modules/resize-detector'</span>)</span><br><span class="line">+       ]</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">v-chart</span> <span class="attr">:options</span>=<span class="string">"polar"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">/**</span><br><span class="line"> * The default size is 600px×400px, for responsive charts</span><br><span class="line"> * you may need to set percentage values as follows (also</span><br><span class="line"> * don't forget to provide a size for the container).</span><br><span class="line"> */</span><br><span class="line">.echarts &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> ECharts <span class="keyword">from</span> <span class="string">'vue-echarts'</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> <span class="string">'echarts/lib/chart/line'</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> <span class="string">'echarts/lib/component/polar'</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">  components: &#123;</span><br><span class="line"><span class="javascript">    <span class="string">'v-chart'</span>: ECharts</span></span><br><span class="line">  &#125;,</span><br><span class="line">  data () &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> data = []</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= <span class="number">360</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> t = i / <span class="number">180</span> * <span class="built_in">Math</span>.PI</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> r = <span class="built_in">Math</span>.sin(<span class="number">2</span> * t) * <span class="built_in">Math</span>.cos(<span class="number">2</span> * t)</span></span><br><span class="line">        data.push([r, i])</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      polar: &#123;</span><br><span class="line">        title: &#123;</span><br><span class="line"><span class="javascript">          text: <span class="string">'极坐标双数值轴'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        legend: &#123;</span><br><span class="line"><span class="javascript">          data: [<span class="string">'line'</span>]</span></span><br><span class="line">        &#125;,</span><br><span class="line">        polar: &#123;</span><br><span class="line"><span class="javascript">          center: [<span class="string">'50%'</span>, <span class="string">'54%'</span>]</span></span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: &#123;</span><br><span class="line"><span class="javascript">          trigger: <span class="string">'axis'</span>,</span></span><br><span class="line">          axisPointer: &#123;</span><br><span class="line"><span class="javascript">            type: <span class="string">'cross'</span></span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        angleAxis: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="string">'value'</span>,</span></span><br><span class="line">          startAngle: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        radiusAxis: &#123;</span><br><span class="line">          min: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line"><span class="javascript">            coordinateSystem: <span class="string">'polar'</span>,</span></span><br><span class="line"><span class="javascript">            name: <span class="string">'line'</span>,</span></span><br><span class="line"><span class="javascript">            type: <span class="string">'line'</span>,</span></span><br><span class="line"><span class="javascript">            showSymbol: <span class="literal">false</span>,</span></span><br><span class="line">            data: data</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        animationDuration: 2000</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h2><ol><li>按以上代码写之后，页面渲染出来是空白的</li></ol><p><strong>原因：</strong>类名为 echarts 的div下的子元素高度都为0；<br><strong>解决：</strong>添加样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.echarts</span> * &#123;</span><br><span class="line">    <span class="attribute">width </span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>vue-echarts好像绘制地图存在问题（还是我的开启方式不正确？）<br>最好使用 echarts 包，渲染div</li></ol><p><strong>举例：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"echarts"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag"><span class="attr">:style</span>=<span class="string">"&#123;height:'420px',width:'100%'&#125;"</span></span></span><br><span class="line"><span class="tag"><span class="attr">ref</span>=<span class="string">"myEchart"</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> echarts <span class="keyword">from</span> <span class="string">"echarts"</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> <span class="string">'echarts/lib/chart/map'</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// import 'echarts/map/js/world.js' // 引入世界地图</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> <span class="string">'echarts/map/js/china.js'</span> <span class="comment">// 引入中国地图数据</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">'echarts-page'</span>,</span></span><br><span class="line"><span class="javascript">  props: [<span class="string">"renderData"</span>],</span></span><br><span class="line">  data () &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      chart: <span class="literal">null</span>,</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">this</span>.initEchartMap();</span></span><br><span class="line">  &#125;,</span><br><span class="line">  beforeDestroy () &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (!<span class="keyword">this</span>.chart) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="keyword">this</span>.chart.dispose();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">this</span>.chart = <span class="literal">null</span>;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    initEchartMap () &#123;</span><br><span class="line"><span class="javascript">      <span class="comment">//console.log(this.renderData)</span></span></span><br><span class="line"><span class="javascript">      <span class="comment">//这里我们用固定的数据，真正使用时，用父组件传递来的数据替换series即可</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> myChart = echarts.init(<span class="keyword">this</span>.$refs.myEchart);</span></span><br><span class="line"><span class="javascript">      <span class="built_in">window</span>.onresize = myChart.resize; <span class="comment">// 自适应刷新charts大小</span></span></span><br><span class="line">      myChart.setOption(&#123;</span><br><span class="line"><span class="javascript">        backgroundColor: <span class="string">"#0b1225"</span>,</span></span><br><span class="line">        title: &#123;</span><br><span class="line"><span class="javascript">          text: <span class="string">'每日货盘运行图'</span>,</span></span><br><span class="line"><span class="javascript">          left: <span class="string">'center'</span>,</span></span><br><span class="line">          textStyle: &#123;</span><br><span class="line"><span class="javascript">            color: <span class="string">'#fff'</span></span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: &#123;</span><br><span class="line"><span class="javascript">          trigger: <span class="string">'item'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        dataRange: &#123;</span><br><span class="line"><span class="javascript">          show: <span class="literal">false</span>,</span></span><br><span class="line">          min: 0,</span><br><span class="line">          max: 1000,</span><br><span class="line"><span class="javascript">          text: [<span class="string">'High'</span>, <span class="string">'Low'</span>],</span></span><br><span class="line"><span class="javascript">          realtime: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">          calculable: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">          color: [<span class="string">'orangered'</span>, <span class="string">'yellow'</span>, <span class="string">'lightskyblue'</span>]</span></span><br><span class="line">        &#125;,</span><br><span class="line">        visualMap: &#123;</span><br><span class="line"><span class="javascript">          show: <span class="literal">true</span>,</span></span><br><span class="line">          min: 0,</span><br><span class="line">          max: 255,</span><br><span class="line"><span class="javascript">          calculable: <span class="literal">true</span>,</span></span><br><span class="line">          inRange: &#123;</span><br><span class="line"><span class="javascript">            color: [<span class="string">'aqua'</span>, <span class="string">'lime'</span>, <span class="string">'yellow'</span>, <span class="string">'orange'</span>, <span class="string">'#ff3333'</span>]</span></span><br><span class="line">          &#125;,</span><br><span class="line">          textStyle: &#123;</span><br><span class="line"><span class="javascript">            color: <span class="string">'#12223b'</span></span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        geo: &#123; <span class="comment">// 这个是重点配置区</span></span></span><br><span class="line"><span class="javascript">          map: <span class="string">'china'</span>, <span class="comment">// 表示中国地图</span></span></span><br><span class="line"><span class="javascript">          roam: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">          layoutCenter: [<span class="string">'50%'</span>, <span class="string">'50%'</span>],</span></span><br><span class="line"><span class="javascript">          layoutSize: <span class="string">"130%"</span>,</span></span><br><span class="line">          label: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line"><span class="javascript">              show: <span class="literal">true</span>, <span class="comment">// 是否显示对应地名</span></span></span><br><span class="line">              textStyle: &#123;</span><br><span class="line"><span class="javascript">                color: <span class="string">'rgba(0,0,0,0.4)'</span></span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">          itemStyle: &#123;</span><br><span class="line">            normal: &#123;</span><br><span class="line"><span class="javascript">              areaColor: <span class="string">'#37376e'</span>,</span></span><br><span class="line"><span class="javascript">              borderColor: <span class="string">'rgba(0, 0, 0, 0.2)'</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            emphasis: &#123;</span><br><span class="line"><span class="javascript">              areaColor: <span class="literal">null</span>,</span></span><br><span class="line">              shadowOffsetX: 0,</span><br><span class="line">              shadowOffsetY: 0,</span><br><span class="line">              shadowBlur: 20,</span><br><span class="line">              borderWidth: 0,</span><br><span class="line"><span class="javascript">              shadowColor: <span class="string">'rgba(0, 0, 0, 0.5)'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line"><span class="javascript">            <span class="string">"type"</span>: <span class="string">"lines"</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"zlevel"</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"effect"</span>: &#123;</span></span><br><span class="line"><span class="javascript">              <span class="string">"show"</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">"period"</span>: <span class="number">4</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">"trailLength"</span>: <span class="number">0.02</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">"symbol"</span>: <span class="string">"arrow"</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">"symbolSize"</span>: <span class="number">5</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="string">"lineStyle"</span>: &#123;</span></span><br><span class="line"><span class="javascript">              <span class="string">"normal"</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="string">"width"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"opacity"</span>: <span class="number">0.6</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"curveness"</span>: <span class="number">0.2</span></span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="string">"tooltip"</span>: &#123;</span></span><br><span class="line"><span class="javascript">              <span class="string">"trigger"</span>: <span class="string">"item"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="string">"data"</span>: [</span></span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"江苏"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">19</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"119.68"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"33.199"</span></span></span><br><span class="line">                  ]</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"安徽"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">17</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line"></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"117.229"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"31.917"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"上海"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">25</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"121.465"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"31.289"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"湖北"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">31</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"114.39"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"30.663"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"福建"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">12</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"119.454"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"25.922"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"浙江"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">19</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"119.531"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"29.877"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"陕西"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"109.116"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"34.2"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"河南"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">15</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"113.467"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"34.623"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"山东"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">12</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"116.972"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"36.737"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"广东"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">12</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"113.511"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"23.22"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"四川"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">10</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"103.953"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"30.762"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"江西"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">9</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"116.005"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"28.663"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"重庆"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">8</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"106.438"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"29.581"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"贵州"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">4</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"106.71"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"26.564"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"山西"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">4</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"112.593"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"37.867"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"湖南"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">4</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"113.082"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"28.257"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"吉林"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">3</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"125.815"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"44.258"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"fromName"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"toName"</span>: <span class="string">"广西"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"coords"</span>: [</span></span><br><span class="line">                  [</span><br><span class="line">                    118.796252,</span><br><span class="line">                    32.0739</span><br><span class="line">                  ],</span><br><span class="line">                  [</span><br><span class="line"><span class="javascript">                    <span class="string">"107.88"</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="string">"22.863"</span></span></span><br><span class="line">                  ],</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">            ]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line"><span class="javascript">            <span class="string">"name"</span>: <span class="string">"收货地址"</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"type"</span>: <span class="string">"effectScatter"</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"coordinateSystem"</span>: <span class="string">"geo"</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"zlevel"</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"rippleEffect"</span>: &#123;</span></span><br><span class="line"><span class="javascript">              <span class="string">"period"</span>: <span class="number">4</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">"brushType"</span>: <span class="string">"stroke"</span>,</span></span><br><span class="line"><span class="javascript">              <span class="string">"scale"</span>: <span class="number">4</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="string">"tooltip"</span>: &#123;</span></span><br><span class="line"><span class="javascript">              <span class="string">"trigger"</span>: <span class="string">"item"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="string">"label"</span>: &#123;</span></span><br><span class="line"><span class="javascript">              <span class="string">"normal"</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="string">"show"</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"position"</span>: <span class="string">"left"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"offset"</span>: [</span></span><br><span class="line">                  -5,</span><br><span class="line">                  5</span><br><span class="line">                ],</span><br><span class="line"><span class="javascript">                <span class="string">"formatter"</span>: <span class="string">"&#123;b&#125;"</span></span></span><br><span class="line">              &#125;,</span><br><span class="line"><span class="javascript">              <span class="string">"emphasis"</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="string">"show"</span>: <span class="literal">true</span></span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="string">"hoverAnimation"</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"symbol"</span>: <span class="string">"circle"</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"symbolSize"</span>: <span class="number">5</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"itemStyle"</span>: &#123;</span></span><br><span class="line"><span class="javascript">              <span class="string">"normal"</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="string">"show"</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"color"</span>: <span class="string">"#f00"</span></span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="string">"data"</span>: [</span></span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"江苏"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"119.68"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"33.199"</span>,</span></span><br><span class="line">                  19</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"安徽"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"117.229"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"31.917"</span>,</span></span><br><span class="line">                  17</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"上海"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"121.465"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"31.289"</span>,</span></span><br><span class="line">                  25</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"湖北"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"114.39"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"30.663"</span>,</span></span><br><span class="line">                  31</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"福建"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"119.454"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"25.922"</span>,</span></span><br><span class="line">                  22</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"浙江"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"119.531"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"29.877"</span>,</span></span><br><span class="line">                  19</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"陕西"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"109.116"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"34.2"</span>,</span></span><br><span class="line">                  18</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"河南"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"113.467"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"34.623"</span>,</span></span><br><span class="line">                  15</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"山东"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"116.972"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"36.737"</span>,</span></span><br><span class="line">                  12</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"广东"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"113.511"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"23.22"</span>,</span></span><br><span class="line">                  12</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"四川"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"103.953"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"30.762"</span>,</span></span><br><span class="line">                  10</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"江西"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"116.005"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"28.663"</span>,</span></span><br><span class="line">                  9</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"重庆"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"106.438"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"29.581"</span>,</span></span><br><span class="line">                  8</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"贵州"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"106.71"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"26.564"</span>,</span></span><br><span class="line">                  4</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"山西"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"112.593"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"37.867"</span>,</span></span><br><span class="line">                  4</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"湖南"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"113.082"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"28.257"</span>,</span></span><br><span class="line">                  4</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"吉林"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"125.815"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"44.258"</span>,</span></span><br><span class="line">                  3</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"广西"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line"><span class="javascript">                  <span class="string">"107.88"</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="string">"22.863"</span>,</span></span><br><span class="line">                  2</span><br><span class="line">                ]</span><br><span class="line">              &#125;,</span><br><span class="line">            ]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line"><span class="javascript">            <span class="string">"name"</span>: <span class="string">"发送地址"</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"type"</span>: <span class="string">"scatter"</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"coordinateSystem"</span>: <span class="string">"geo"</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"zlevel"</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"tooltip"</span>: &#123;</span></span><br><span class="line"><span class="javascript">              <span class="string">"trigger"</span>: <span class="string">"item"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="string">"label"</span>: &#123;</span></span><br><span class="line"><span class="javascript">              <span class="string">"normal"</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="string">"show"</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"position"</span>: <span class="string">"right"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"color"</span>: <span class="string">"#00ffff"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"formatter"</span>: <span class="string">"&#123;b&#125;"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"textStyle"</span>: &#123;</span></span><br><span class="line"><span class="javascript">                  <span class="string">"color"</span>: <span class="string">"#00ffff"</span></span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line"><span class="javascript">              <span class="string">"emphasis"</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="string">"show"</span>: <span class="literal">true</span></span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="string">"symbol"</span>: <span class="string">"circle"</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"symbolSize"</span>: <span class="number">20</span>,</span></span><br><span class="line"><span class="javascript">            <span class="string">"itemStyle"</span>: &#123;</span></span><br><span class="line"><span class="javascript">              <span class="string">"normal"</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="string">"show"</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"color"</span>: <span class="string">"#EE0000"</span></span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="string">"data"</span>: [</span></span><br><span class="line">              &#123;</span><br><span class="line"><span class="javascript">                <span class="string">"name"</span>: <span class="string">"南京"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">"value"</span>: [</span></span><br><span class="line">                  118.796252,</span><br><span class="line">                  32.0739</span><br><span class="line">                ]</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/ecomfe/vue-echarts" target="_blank" rel="noopener">vue-echarts 的 github 地址</a></p><p><a href="https://echarts.apache.org/zh/api.html#echarts" target="_blank" rel="noopener">echarts 的 API 文档</a></p><p><a href="https://juejin.im/post/5b7e1d7151882542ad05844e" target="_blank" rel="noopener">VUE中使用Echarts绘制地图迁移</a></p><p><a href="https://juejin.im/post/5c1a2524f265da614b11f102" target="_blank" rel="noopener">快速实现地图迁移数据可视化</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架和类库 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3.0踩坑</title>
      <link href="/2019/09/24/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue3.0%E8%B8%A9%E5%9D%91/"/>
      <url>/2019/09/24/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue3.0%E8%B8%A9%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h2 id="引入-normalize-css"><a href="#引入-normalize-css" class="headerlink" title="引入 normalize.css"></a>引入 normalize.css</h2><ul><li><p>安装包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add normalize.css</span><br><span class="line">yarn add css-loader style-loader</span><br></pre></td></tr></table></figure></li><li><p>在 main.js 中引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'normalize.css'</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架和类库 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>svg环形进度条组件</title>
      <link href="/2019/09/24/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/svg%E7%8E%AF%E5%BD%A2%E8%BF%9B%E5%BA%A6%E6%9D%A1%E7%BB%84%E4%BB%B6/"/>
      <url>/2019/09/24/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/svg%E7%8E%AF%E5%BD%A2%E8%BF%9B%E5%BA%A6%E6%9D%A1%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="svg渐变环形进度条组件"><a href="#svg渐变环形进度条组件" class="headerlink" title="svg渐变环形进度条组件"></a><a href="https://www.jianshu.com/p/bfa223894867" target="_blank" rel="noopener">svg渐变环形进度条组件</a></h2><p><strong>实现原理：</strong></p><ol><li>画一个底圆，设置为灰色</li><li>画一段弧，因为弧</li><li>弧位置不正确，逆时针旋转90度（因为默认 stroke-dasharray 的起始位置在右侧），值array需要倒序</li><li>添加渐变颜色，使用算法生成渐变颜色值，参考<a href="https://www.jb51.net/article/109044.htm" target="_blank" rel="noopener">js实现颜色阶梯渐变效果（Gradient算法）</a></li><li>添加动画</li></ol><h2 id="寥寥数行SVG实现圆环loading或倒计时效果"><a href="#寥寥数行SVG实现圆环loading或倒计时效果" class="headerlink" title="寥寥数行SVG实现圆环loading或倒计时效果"></a><a href="https://www.zhangxinxu.com/wordpress/2015/07/svg-circle-loading/" target="_blank" rel="noopener">寥寥数行SVG实现圆环loading或倒计时效果</a></h2><p><strong>实现原理：</strong>【代码更为简洁】</p><ol><li>采用煎饼原理 <a href="https://www.zhangxinxu.com/wordpress/2014/04/css3-pie-loading-waiting-animation/" target="_blank" rel="noopener">CSS3实现鸡蛋饼饼图loading等待转转转</a></li><li>代码demo <a href="https://www.zhangxinxu.com/study/201507/svg-circle-loading.html" target="_blank" rel="noopener">SVG实现圆环loading进度效果demo</a></li><li>ios上的旋转bug<blockquote><p><strong>更新于 2016 年 11 月 24 日</strong></p><p>测试发现，iOS 手机上，貌似 transform 逆时针旋转 90° 只会改变图形外观，但是其坐标起始位置还是右侧。<br>因此，更改起始坐标可能还需要通过外部容器旋转控制。</p><p><strong>更新于 2017 年 11 月 1 日</strong></p><p>感谢辉辉的反馈，iOS手机上起始坐标异常问题，可以通过添加如下CSS修正：</p>   <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">svg</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-0.05deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架和类库 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vuex-router-sync</title>
      <link href="/2019/09/24/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vuex-router-sync/"/>
      <url>/2019/09/24/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vuex-router-sync/</url>
      
        <content type="html"><![CDATA[<p>在公司项目开发工程中，看到在 main.js 文件中出现 vuex-router-sync，就不知道这个是什么？有啥作用？<br>因此，在这里记录一下 ~ ~ ~</p><h1 id="vuex-router-sync"><a href="#vuex-router-sync" class="headerlink" title="vuex-router-sync"></a>vuex-router-sync</h1><h2 id="怎么用？"><a href="#怎么用？" class="headerlink" title="怎么用？"></a>怎么用？</h2><ol><li>安装包</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># the latest version works only with vue-router &gt;= 2.0</span></span><br><span class="line">npm install vuex-router-sync</span><br><span class="line"></span><br><span class="line"><span class="comment"># for usage with vue-router &lt; 2.0:</span></span><br><span class="line">npm install vuex-router-sync@2</span><br></pre></td></tr></table></figure><ol start="2"><li>配置</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue工程 - main.js</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">import</span> &#123; sync &#125; <span class="keyword">from</span> <span class="string">'vuex-router-sync'</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">sync(store, router)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// const unsync = sync(store, router)</span></span><br><span class="line"><span class="comment">// unsync() // 从路由器取消同步存储</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置自定义vuex模块名称</span></span><br><span class="line"><span class="comment">// sync(store, router, &#123; moduleName: 'RouteModule' &#125; )</span></span><br></pre></td></tr></table></figure><h2 id="有什么用？"><a href="#有什么用？" class="headerlink" title="有什么用？"></a>有什么用？</h2><p><strong>作用：</strong>将 store 和 router 连接起来</p><p>但是，<code>this.$router.route</code> 也可以拿到 currentRoute 对象，为何还需要同步 router 和 store ？</p><p>因为有时候我们拿到了路由信息后，需要做进一步复杂逻辑处理，但是你又不想要关心其具体的逻辑处理，就可以使用<br> vuex-router-sync 来进行同步 store 和 router，然后在 store 的 getter 函数中进行逻辑处理。</p><p>简言之，实现组件与 Vuex 和 Vue-router 的逻辑完全分离。适用于您不关心当前路由和 Vuex getter 返回值之间关系的情况。</p><h2 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h2><p>假设您想在一个组件中显示一条消息，希望在几乎每一个页面上都显示 “Have a nice day, Jack”，<br>除了首页，因为首页要显示 “Welcome back, Jack”。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Top = &#123;</span><br><span class="line">  template: <span class="string">'&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    message() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.$store.getters.getMessage;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> Bar = &#123;</span><br><span class="line">  template: <span class="string">'&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;'</span>,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    message() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.$store.getters.getMessage;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [&#123;</span><br><span class="line">    path: <span class="string">'/top'</span>,</span><br><span class="line">    component: Top,</span><br><span class="line">    name: <span class="string">'top'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/bar'</span>,</span><br><span class="line">    component: Bar,</span><br><span class="line">    name: <span class="string">'bar'</span></span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    username: <span class="string">'Jack'</span>,</span><br><span class="line">    phrases: [<span class="string">'Welcome back'</span>, <span class="string">'Have a nice day'</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  getters: &#123;</span><br><span class="line">    getMessage(state) &#123;</span><br><span class="line">      <span class="keyword">return</span> state.route.name === <span class="string">'top'</span> ?</span><br><span class="line">        <span class="string">`<span class="subst">$&#123;state.phrases[<span class="number">0</span>]&#125;</span>, <span class="subst">$&#123;state.username&#125;</span>`</span> :</span><br><span class="line">        <span class="string">`<span class="subst">$&#123;state.phrases[<span class="number">1</span>]&#125;</span>, <span class="subst">$&#123;state.username&#125;</span>`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// sync store and router by using `vuex-router-sync`</span></span><br><span class="line">sync(store, router);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">&#125;).$mount(<span class="string">'#app'</span>);</span><br></pre></td></tr></table></figure><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><p><strong>总结：</strong></p><ol><li>在 store 注册一个 module，用来保存路由信息，可用 <code>this.$store.state.route</code> 来获取值</li><li>监听路由是否跳转，若跳转新 url，就跳转并保存新路由信息到 store，否则返回</li><li>特别地，返回值为一个取消同步的函数 fn</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">exports.sync = <span class="function"><span class="keyword">function</span> (<span class="params">store, router, options</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> moduleName = (options || &#123;&#125;).moduleName || <span class="string">'route'</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 在store注册一个module，默认为route</span></span><br><span class="line">  store.registerModule(moduleName, &#123;</span><br><span class="line">    namespaced: <span class="literal">true</span>, <span class="comment">// 设置命名空间</span></span><br><span class="line">    state: cloneRoute(router.currentRoute), <span class="comment">// 将router对象的currentRoute保存到state</span></span><br><span class="line">    mutations: &#123;</span><br><span class="line">      <span class="string">'ROUTE_CHANGED'</span> (state, transition) &#123; <span class="comment">// 提供一个方法保存当前路由信息</span></span><br><span class="line">        store.state[moduleName] = cloneRoute(transition.to, transition.from)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> isTimeTraveling = <span class="literal">false</span> <span class="comment">// 是否正在跳转</span></span><br><span class="line">  <span class="keyword">let</span> currentPath</span><br><span class="line"></span><br><span class="line">  <span class="comment">// sync router on store change</span></span><br><span class="line">  <span class="keyword">const</span> storeUnwatch = store.watch( <span class="comment">// 监听store中route对象的变化</span></span><br><span class="line">    state =&gt; state[moduleName],</span><br><span class="line">    route =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; fullPath &#125; = route</span><br><span class="line">      <span class="keyword">if</span> (fullPath === currentPath) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (currentPath != <span class="literal">null</span>) &#123; <span class="comment">// 当route发生变化且不等于当前路由，使用push()跳转页面</span></span><br><span class="line">        isTimeTraveling = <span class="literal">true</span></span><br><span class="line">        router.push(route)</span><br><span class="line">      &#125;</span><br><span class="line">      currentPath = fullPath</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123; <span class="attr">sync</span>: <span class="literal">true</span> &#125;</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="comment">// sync store on router navigation</span></span><br><span class="line">  <span class="keyword">const</span> afterEachUnHook = router.afterEach(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123; <span class="comment">// 跳转之后判断</span></span><br><span class="line">    <span class="keyword">if</span> (isTimeTraveling) &#123;</span><br><span class="line">      isTimeTraveling = <span class="literal">false</span></span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    currentPath = to.fullPath</span><br><span class="line">    store.commit(moduleName + <span class="string">'/ROUTE_CHANGED'</span>, &#123; to, <span class="keyword">from</span> &#125;) <span class="comment">// 修改store中的route信息</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">unsync</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// On unsync, remove router hook</span></span><br><span class="line">    <span class="keyword">if</span> (afterEachUnHook != <span class="literal">null</span>) &#123;</span><br><span class="line">      afterEachUnHook()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// On unsync, remove store watch</span></span><br><span class="line">    <span class="keyword">if</span> (storeUnwatch != <span class="literal">null</span>) &#123;</span><br><span class="line">      storeUnwatch()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// On unsync, unregister Module with store</span></span><br><span class="line">    store.unregisterModule(moduleName)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 复制路由对象</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cloneRoute</span> (<span class="params">to, from</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> clone = &#123;</span><br><span class="line">    name: to.name,</span><br><span class="line">    path: to.path,</span><br><span class="line">    hash: to.hash,</span><br><span class="line">    query: to.query,</span><br><span class="line">    params: to.params,</span><br><span class="line">    fullPath: to.fullPath,</span><br><span class="line">    meta: to.meta</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">from</span>) &#123;</span><br><span class="line">    clone.from = cloneRoute(<span class="keyword">from</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// Object.freeze() 方法可以冻结一个对象。一个被冻结的对象再也不能被修改；</span></span><br><span class="line">  <span class="comment">// 冻结了一个对象则不能向这个对象添加新的属性，不能删除已有属性，不能修改</span></span><br><span class="line">  <span class="comment">// 该对象已有属性的可枚举性、可配置性、可写性，以及不能修改已有属性的值。</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Object</span>.freeze(clone) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/vuejs/vuex-router-sync" target="_blank" rel="noopener">vuex-router-sync的github</a></p><p><a href="https://blog.csdn.net/vv_bug/article/details/84064708" target="_blank" rel="noopener">前端入门之(vuex-router-sync解析)</a></p><p><a href="https://segmentfault.com/a/1190000019925019" target="_blank" rel="noopener">关于vuex-router-sync的作用，或者可以解决什么问题</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架和类库 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iview组件库使用</title>
      <link href="/2019/09/24/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/%E5%AE%9E%E7%94%A8%E5%BA%93/iview%E7%BB%84%E4%BB%B6%E5%BA%93%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/09/24/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/%E5%AE%9E%E7%94%A8%E5%BA%93/iview%E7%BB%84%E4%BB%B6%E5%BA%93%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.iviewui.com/docs/guide/install" target="_blank" rel="noopener">iview官网</a><br><a href="https://github.com/iview/iview-project" target="_blank" rel="noopener">iview种子工程</a></p><h2 id="部署踩坑"><a href="#部署踩坑" class="headerlink" title="部署踩坑"></a>部署踩坑</h2><ol><li>运行 <code>npm run init</code> 报错 <code>TypeError [ERR_INVALID_CALLBACK]: Callback must be a function. Received 29</code>？</li></ol><p><strong>方法一</strong>：修改<code>webpack.dev.config.js</code>文件中一句代码，如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fs.write(fd, buf, 0, buf.length, 0, function (err, written, buffer)&#123;&#125;); // node.js低版本写法</span></span><br><span class="line">fs.write(fd, buf, <span class="number">0</span>, <span class="string">'utf-8'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, written, buffer</span>) </span>&#123;&#125;);</span><br></pre></td></tr></table></figure><p><strong>方法二</strong>：重新安装node.js，降低node.js版本</p><ol start="2"><li>支持vue-cli3的部署方式<br><a href="https://segmentfault.com/a/1190000016849651" target="_blank" rel="noopener">iview在vue-cli3如何按需加载</a></li></ol><p>运行 <code>vue ui</code>, 在项目插件一栏，点击 “添加插件”，搜索 <code>vue-cli-plugin-iview</code>，点击安装</p><p>按需加载安装后，<code>vue-cli-plugin-iview</code>会自动帮我们做好以下的配置：</p><p><strong>babel.config.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"plugins"</span>: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"import"</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"libraryName"</span>: <span class="string">"iview"</span>,</span><br><span class="line">        <span class="string">"libraryDirectory"</span>: <span class="string">"src/components"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"import"</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"libraryName"</span>: <span class="string">"iview"</span>,</span><br><span class="line">        <span class="string">"libraryDirectory"</span>: <span class="string">"src/components"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><p><strong>package.json</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"babel-plugin-import": "^1.8.0",</span><br></pre></td></tr></table></figure><p>在目录下新增了plugin文件下有个 <code>iview.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> &#123; Button &#125; <span class="keyword">from</span> <span class="string">'iview'</span></span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">'Button'</span>, Button)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'iview/dist/styles/iview.css'</span></span><br><span class="line">main.ts</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./plugins/iview.js'</span></span><br></pre></td></tr></table></figure><ol start="3"><li>按需加载</li></ol><ul><li>vue-cli3：在 <code>plugins/iview.js</code> 中按需加载<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> &#123; Row, Col, Menu, Submenu, MenuGroup, MenuItem, Icon &#125; <span class="keyword">from</span> <span class="string">'iview'</span></span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">'Row'</span>, Row)</span><br><span class="line">Vue.component(<span class="string">'Col'</span>, Col)</span><br><span class="line">Vue.component(<span class="string">'Menu'</span>, Menu)</span><br><span class="line">Vue.component(<span class="string">'Submenu'</span>, Submenu)</span><br><span class="line">Vue.component(<span class="string">'MenuGroup'</span>, MenuGroup)</span><br><span class="line">Vue.component(<span class="string">'MenuItem'</span>, MenuItem)</span><br><span class="line">Vue.component(<span class="string">'Icon'</span>, Icon)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'iview/dist/styles/iview.css'</span></span><br></pre></td></tr></table></figure></li></ul><ol start="4"><li>使用 iView 时报 <code>&quot;Parsing error: x-invalid-end-tag&quot;</code>错误的解决方案<br><a href="https://blog.csdn.net/jiaqingge/article/details/80498536" target="_blank" rel="noopener">vscode 使用iView时标签报错 Parsing error: x-invalid-end-tag</a><br><a href="https://cn.eslint.org/docs/user-guide/configuring" target="_blank" rel="noopener">eslint配置文档</a></li></ol><p>修改配置文件，忽略该项检查：</p><p>根目录下 - .eslintrc.js - rules</p><ul><li>添加一行：</li></ul><p><code>“vue/no-parsing-error”: [2, { “x-invalid-end-tag”: false }]</code></p><ul><li>重启dev：</li></ul><p><code>npm run dev</code></p><ol start="5"><li>编译less报错</li></ol><p><strong>错误：</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Module build failed: ValidationError: Invalid options object. CSS Loader has been initialised </span><br><span class="line">using an options object that does not match the API schema.</span><br></pre></td></tr></table></figure><p><strong>原因：</strong>webpack 版本的问题，minimize 这个属性已经被取消了<br><strong>解决：</strong>在<code>webpack.base.config.js</code> 去掉 minimize 这个属性</p><ol start="6"><li>使用 stylus 语法<br>需要配置 webpack，安装 stylus-loader<br>注意：extract-text-webpack-plugin 插件好像无法抽取 stylus   ==&gt; 待深究！！！！！！！！！</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架和类库 </tag>
            
            <tag> 实用库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转发】关于移动端适配，你必须要知道的</title>
      <link href="/2019/09/23/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/5-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/%E5%85%B3%E4%BA%8E%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%EF%BC%8C%E4%BD%A0%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84/"/>
      <url>/2019/09/23/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/5-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/%E5%85%B3%E4%BA%8E%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%EF%BC%8C%E4%BD%A0%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<p><strong>强烈推荐！！！</strong><br>转发自 <a href="https://juejin.im/post/5cddf289f265da038f77696c" target="_blank" rel="noopener">关于移动端适配，你必须要知道的</a> </p><h2 id="英寸"><a href="#英寸" class="headerlink" title="英寸"></a>英寸</h2><p>电脑手机的屏幕大小几寸几寸 ==&gt; 尺寸都是屏幕对角线的长度</p><p>1英寸 = 2.54 厘米</p><h2 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h2><h3 id="屏幕分辨率"><a href="#屏幕分辨率" class="headerlink" title="屏幕分辨率"></a>屏幕分辨率</h3><p>垂直和水平上的像素点数</p><h3 id="图像分辨率"><a href="#图像分辨率" class="headerlink" title="图像分辨率"></a>图像分辨率</h3><p>图片含有的像素数</p><h3 id="PPI"><a href="#PPI" class="headerlink" title="PPI"></a>PPI</h3><p><code>Pixel Per Inch</code>，每英寸包括的像素数，PPI越高，图片质量越高，可用于描述屏幕和图片清晰度</p><p>计算PPI方式：<img src="https://juejin.im/equation?tex=%5Cfrac%7B%5Csqrt%7B%E6%B0%B4%E5%B9%B3%E5%83%8F%E7%B4%A0%E7%82%B9%E6%95%B0%5E2%2B%E5%9E%82%E7%9B%B4%E5%83%8F%E7%B4%A0%E7%82%B9%E6%95%B0%5E2%7D%7D%7B%E5%B0%BA%E5%AF%B8%7D" alt></p><h3 id="DPI"><a href="#DPI" class="headerlink" title="DPI"></a>DPI</h3><p><code>Dot Per Inch</code>，每英寸包括的点数，等价于PPI，可用于描述屏幕和图片的清晰度。<br>一般，用于描述打印机，表示打印机每英寸可打印的点数（墨点）</p><h2 id="设备独立像素（DIP-或-DP）"><a href="#设备独立像素（DIP-或-DP）" class="headerlink" title="设备独立像素（DIP 或 DP）"></a>设备独立像素（DIP 或 DP）</h2><p>随着手机更高分辨率的诞生，本来300个物理像素渲染的列表，为了实现在更高分辨率的手机上，不会被缩小，手机就用600个像素去渲染页面，即把一个像素点当作两个像素点用（此为 <code>Retina Display</code> 视网膜屏幕）。</p><p>设备独立像素 <code>Device Independent Pixels</code>，简称 DIP 或 DP。比如，列表的宽度为300个像素，那么列表宽度为300个设备独立像素</p><h3 id="设备像素比（dpr"><a href="#设备像素比（dpr" class="headerlink" title="设备像素比（dpr)"></a>设备像素比（dpr)</h3><p><code>Device Pixel Ratio</code>，简称 dpr，即物理像素和设备独立像素的比值。</p><ul><li>web 中，浏览器提供 <code>window.devicePixelRatio</code> 来获取 dpr；</li><li>css 中，使用媒体查询 <code>min-device-pixel-ratio</code> 来区别 dpr；</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> (-webkit-min-device-pixel-ratio: <span class="number">2</span>),(min-device-pixel-ratio: <span class="number">2</span>)&#123; &#125;</span><br></pre></td></tr></table></figure><ul><li>React Native 中，使用 <code>PixelRatio.get()</code> 获取 dpr。</li></ul><p>iPhone 6、7、8 Plus的实际物理像素是 1080 x 1920，在开发者工具中我们可以看到：它的设备独立像素是 414 x 736，设备像素比为3，设备独立像素和设备像素比的乘积并不等于 1080 x 1920，而是等于 1242 x 2208（设计像素）。<strong>开发过程中以设计像素为准</strong>，实际上，手机会自动把 1242 x 2208 个像素点塞进 1080 * 1920 个物理像素点来渲染。</p><p>Android 同样使用了其他的技术方案来实现DPR大于1的屏幕，不过原理是类似的。所以，为了保证各种设备的显示效果，Android 按照设备的像素密度将设备分成了几个区间：<br><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a6649f8d53a?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h3 id="移动端开发"><a href="#移动端开发" class="headerlink" title="移动端开发"></a>移动端开发</h3><p>iOS 的尺寸单位为 <code>pt</code>，Android 的尺寸单位为 <code>dp</code>，React Native 中没有指定明确的单位，它们其实都是设备独立像素 <code>dp</code>。</p><p>在使用 React Native 开发 App 时，UI 给我们的原型图一般是基于 iphone6 的像素给定的，所有的UI图都按照设备独立像素来出。</p><p>为了适配所有机型，我们在写样式时需要把物理像素转换为设备独立像素，在代码(React Native)中进行px和dp的转换：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;PixelRatio &#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dpr = PixelRatio.get();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * px转换为dp</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">pxConvertTodp</span>(<span class="params">px</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> px / dpr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * dp转换为px</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">dpConvertTopx</span>(<span class="params">dp</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> PixelRatio.getPixelSizeForLayoutSize(dp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="web端开发"><a href="#web端开发" class="headerlink" title="web端开发"></a>web端开发</h3><p>在写 CSS 时，我们用到最多的单位是 px，即 CSS 像素，当页面缩放比例为 100% 时，一个 CSS 像素等于一个设备独立像素。</p><p>但是 CSS 像素是很容易被改变的，当用户对浏览器进行了放大，CSS 像素会被放大，这时一个CSS 像素会跨越更多的物理像素。</p><blockquote><p><strong>页面的缩放系数 = CSS像素 / 设备独立像素。</strong></p></blockquote><h3 id="关于屏幕"><a href="#关于屏幕" class="headerlink" title="关于屏幕"></a>关于屏幕</h3><p>让多个物理像素渲染一个独立像素只是 Retina 屏幕为了达到效果而使用的一种技术。而不是所有 DPR &gt; 1 的屏幕就是 Retina 屏幕</p><blockquote><p>Retina屏幕只是苹果提出的一个营销术语：在普通的使用距离下，人的肉眼无法分辨单个的像素点。</p></blockquote><p><strong>常见用K和P这个单位来形容屏幕：</strong></p><ul><li><p>P 代表的就是屏幕纵向的像素个数，1080P 即纵向有 1080 个像素，分辨率为 1920X1080 的屏幕就属于 1080P 屏幕。</p></li><li><p>K 代表屏幕横向有几个 1024 个像素，一般来讲横向像素超过 2048 就属于 2K 屏，横向像素超过 4096 就属于 4K 屏。</p></li></ul><p>高清屏其实就是屏幕的物理分辨率达到或超过 1920X1080 的屏幕。</p><h2 id="视口-viewport"><a href="#视口-viewport" class="headerlink" title="视口 viewport"></a>视口 viewport</h2><h3 id="布局视口-layout-viewport"><a href="#布局视口-layout-viewport" class="headerlink" title="布局视口 layout viewport"></a>布局视口 layout viewport</h3><p>布局视口,当我们以百分比来指定一个元素的大小时，它的计算值是由这个元素的包含块计算而来的。</p><p>在PC浏览器上，布局视口就等于当前浏览器的窗口大小（不包括 borders 、margins 、滚动条）；<br>在移动端，布局视口被赋予一个默认值，大部分为980px，这保证PC的网页可以在手机浏览器上呈现，但是非常小，用户可以手动对网页进行放大。</p><blockquote><p>调用 <code>document.documentElement.clientWidth / clientHeight</code> 来获取布局视口大小。</p></blockquote><p><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a666e96ff01?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h3 id="视觉视口-visual-viewport"><a href="#视觉视口-visual-viewport" class="headerlink" title="视觉视口 visual viewport"></a>视觉视口 visual viewport</h3><p>视觉视口，用户通过屏幕真实看到的区域，默认等于当前浏览器的窗口大小（包括滚动条宽度）。</p><p>当用户对浏览器进行缩放时，不会改变布局视口的大小，所以页面布局是不变的，但是缩放会改变视觉视口的大小。</p><blockquote><p>调用 <code>window.innerWidth / innerHeight</code> 来获取视觉视口大小。</p></blockquote><p><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a66924ef751?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h3 id="理想视口-ideal-viewport"><a href="#理想视口-ideal-viewport" class="headerlink" title="理想视口 ideal viewport"></a>理想视口 ideal viewport</h3><p>理想视口，网站页面在移动端展示的理想大小，它的单位正是设备独立像素。</p><p>CSS 像素时曾经提到页面的 <code>缩放系数 = CSS像素 / 设备独立像素</code>，实际上说页面的 <code>缩放系数 = 理想视口宽度 / 视觉视口宽度</code> 更为准确。</p><blockquote><p>当页面缩放比例为 100% 时，<code>CSS像素 = 设备独立像素，理想视口 = 视觉视口</code></p></blockquote><p><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a664842c93c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><blockquote><p>调用screen.width / height来获取理想视口大小。</p></blockquote><h3 id="Meta-viewport"><a href="#Meta-viewport" class="headerlink" title="Meta viewport"></a>Meta viewport</h3><p><code>&lt;meta&gt;</code> 元素表示那些不能由其它HTML元相关元素之一表示的任何元数据信息，它可以告诉浏览器如何解析页面。</p><p><code>&lt;meta&gt;</code> 元素表示那些不能由其它HTML元相关元素之一表示的任何元数据信息，它可以告诉浏览器如何解析页面。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width; initial-scale=1; maximum-scale=1; minimum-scale=1; user-scalable=no;"</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">Value</th><th align="center">可能值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">width</td><td align="center">正整数或device-width</td><td align="center">以pixels（像素）为单位， 定义布局视口的宽度。</td></tr><tr><td align="center">height</td><td align="center">正整数或device-height</td><td align="center">以pixels（像素）为单位， 定义布局视口的高度。</td></tr><tr><td align="center">initial-scale</td><td align="center">0.0 - 10.0</td><td align="center">定义页面初始缩放比率。</td></tr><tr><td align="center">minimum-scale</td><td align="center">0.0 - 10.0</td><td align="center">定义缩放的最小值；必须小于或等于maximum-scale的值。</td></tr><tr><td align="center">maximum-scale</td><td align="center">0.0 - 10.0</td><td align="center">定义缩放的最大值；必须大于或等于minimum-scale的值。</td></tr><tr><td align="center">user-scalable</td><td align="center">一个布尔值（yes或者no）</td><td align="center">如果设置为 no，用户将不能放大或缩小网页。默认值为 yes。</td></tr></tbody></table><h3 id="移动端适配"><a href="#移动端适配" class="headerlink" title="移动端适配"></a>移动端适配</h3><p>布局视口、视觉视口都尽可能等于理想视口。</p><p>device-width 就等于理想视口的宽度，所以设置 <code>width=device-width</code>就相当于让布局视口等于理想视口。</p><p>由于<code>initial-scale = 理想视口宽度 / 视觉视口宽度</code>，所以我们设置<code>initial-scale=1</code> ;就相当于让视觉视口等于理想视口。</p><h3 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h3><p>若手机的理想视口宽度为 400px，设置 <code>width=device-width，initial-scale=2</code>，此时 <code>视觉视口宽度 = 理想视口宽度 / initial-scale</code> 即200px，布局视口取两者最大值即 <code>device-width=400px</code>。</p><p>若设置 <code>width=device-width，initial-scale=0.5</code>，此时<code>视觉视口宽度 = 理想视口宽度 / initial-scale</code> 即800px，布局视口取两者最大值即800px。</p><h3 id="获取浏览器大小"><a href="#获取浏览器大小" class="headerlink" title="获取浏览器大小"></a>获取浏览器大小</h3><p><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a66988df601?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p><code>window.innerHeight</code>：获取浏览器视觉视口高度（包括垂直滚动条）。<br><code>window.outerHeight</code>：获取浏览器窗口外部的高度。表示整个浏览器窗口的高度，包括侧边栏、窗口镶边和调正窗口大小的边框。<br><code>window.screen.Height</code>：获取获屏幕取理想视口高度，这个数值是固定的，设备的分辨率/设备像素比<br><code>window.screen.availHeight</code>：浏览器窗口可用的高度。<br><code>document.documentElement.clientHeight</code>：获取浏览器布局视口高度，包括内边距，但不包括垂直滚动条、边框和外边距。<br><code>document.documentElement.offsetHeight</code>：包括内边距、滚动条、边框和外边距。<br><code>document.documentElement.scrollHeight</code>：在不使用滚动条的情况下适合视口中的所有内容所需的最小宽度。测量方式与clientHeight相同：它包含元素的内边距，但不包括边框，外边距或垂直滚动条。</p><h2 id="1px问题"><a href="#1px问题" class="headerlink" title="1px问题"></a>1px问题</h2><p>在设备像素比大于 1 的屏幕上，我们写的 1px 实际上是被多个物理像素渲染，这就会出现 1px 在有些屏幕上看起来很粗的现象。</p><h3 id="border-image"><a href="#border-image" class="headerlink" title="border-image"></a>border-image</h3><p>基于 media 查询判断不同的设备像素比给定不同的 border-image：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border_1px</span>&#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> only screen and (-webkit-min-device-pixel-ratio:<span class="number">2</span>)&#123;</span><br><span class="line">  <span class="selector-class">.border_1px</span>&#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">1px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-image</span>: <span class="built_in">url</span>(../img/1pxline.png) <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> stretch;</span><br><span class="line">    <span class="comment">/* 参考：https://segmentfault.com/a/1190000010969367?utm_source=tag-newest */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="background-image"><a href="#background-image" class="headerlink" title="background-image"></a>background-image</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border_1px</span>&#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> only screen and (-webkit-min-device-pixel-ratio:<span class="number">2</span>)&#123;</span><br><span class="line">  <span class="selector-class">.border_1px</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../img/1pxline.png) repeat-x left bottom;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">1px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>上面两种都需要单独准备图片，而且圆角不是很好处理，但是可以应对大部分场景。</p></blockquote><h3 id="伪类-transform"><a href="#伪类-transform" class="headerlink" title="伪类 + transform"></a>伪类 + transform</h3><p>基于 media 查询判断不同的设备像素比对线条进行缩放：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border_1px</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">50%</span> <span class="number">0%</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> only screen and (-webkit-min-device-pixel-ratio:<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="selector-class">.border_1px</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scaleY</span>(0.5);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> only screen and (-webkit-min-device-pixel-ratio:<span class="number">3</span>)&#123;</span><br><span class="line">    <span class="selector-class">.border_1px</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scaleY</span>(0.33);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>可以满足各种场景，如果需要满足圆角，只需要给伪类也加上border-radius即可。</p></blockquote><h3 id="svg"><a href="#svg" class="headerlink" title="svg"></a>svg</h3><p>借助 PostCSS 的 postcss-write-svg 我们能直接使用 border-image 和 background-image 创建 svg 的 1px 边框：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@svg</span> border_1px &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="variable">@rect</span> &#123;</span><br><span class="line">    <span class="attribute">fill</span>: var(--color, black);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">.example &#123; <span class="attribute">border</span>: <span class="number">1px</span> solid transparent; <span class="attribute">border-image</span>: svg(border_1px param(--color <span class="number">#00b1ff</span>)) <span class="number">2</span> <span class="number">2</span> stretch; &#125;</span><br></pre></td></tr></table></figure><p>编译后：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.example</span> &#123; <span class="attribute">border</span>: <span class="number">1px</span> solid transparent; <span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' height='2px'%3E%3Crect fill='%2300b1ff' width='100%25' height='50%25'/%3E%3C/svg%3E"</span>) <span class="number">2</span> <span class="number">2</span> stretch; &#125;</span><br></pre></td></tr></table></figure><h3 id="设置viewport"><a href="#设置viewport" class="headerlink" title="设置viewport"></a>设置viewport</h3><p>通过设置缩放，让CSS像素等于真正的物理像素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> scale = <span class="number">1</span> / <span class="built_in">window</span>.devicePixelRatio;</span><br><span class="line"><span class="keyword">const</span> viewport = <span class="built_in">document</span>.querySelector(<span class="string">'meta[name="viewport"]'</span>);</span><br><span class="line"><span class="keyword">if</span> (!viewport) &#123;</span><br><span class="line">    viewport = <span class="built_in">document</span>.createElement(<span class="string">'meta'</span>);</span><br><span class="line">    viewport.setAttribute(<span class="string">'name'</span>, <span class="string">'viewport'</span>);</span><br><span class="line">    <span class="built_in">window</span>.document.head.appendChild(viewport);</span><br><span class="line">&#125;</span><br><span class="line">viewport.setAttribute(<span class="string">'content'</span>, <span class="string">'width=device-width,user-scalable=no,initial-scale='</span> + scale + <span class="string">',maximum-scale='</span> + scale + <span class="string">',minimum-scale='</span> + scale);</span><br></pre></td></tr></table></figure><blockquote><p>意味着你页面上所有的布局都要按照物理像素来写。这显然是不现实的，这时，我们可以借助flexible或vw、vh来帮助我们进行适配。</p></blockquote><h2 id="移动端适配方案"><a href="#移动端适配方案" class="headerlink" title="移动端适配方案"></a>移动端适配方案</h2><h3 id="flexible方案（已废弃）"><a href="#flexible方案（已废弃）" class="headerlink" title="flexible方案（已废弃）"></a>flexible方案（已废弃）</h3><p>flexible 方案是阿里早期开源的一个移动端适配解决方案，引用 flexible 后，我们在页面上统一使用rem来布局。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 核心代码</span></span><br><span class="line"><span class="comment">// set 1rem = viewWidth / 10</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setRemUnit</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> rem = docEl.clientWidth / <span class="number">10</span></span><br><span class="line">    docEl.style.fontSize = rem + <span class="string">'px'</span></span><br><span class="line">&#125;</span><br><span class="line">setRemUnit();</span><br></pre></td></tr></table></figure><p>将 html 节点的 font-size 设置为页面 clientWidth(布局视口)的1/10，即 1rem 就等于页面布局视口的 1/10，这就意味着我们后面使用的 rem 都是按照页面比例来计算的。</p><p>以 iPhone6 为例：布局视口为 375px，则 1rem = 37.5px，这时UI给定一个元素的宽为 75px（设备独立像素），我们只需要将它设置为 75 / 37.5 = 2rem。</p><p>每个布局都要计算非常繁琐，我们可以借助 PostCSS 的 px2rem 插件来帮助我们完成这个过程。</p><p>下面的代码可以保证在页面大小变化时，布局可以自适应，当触发了window 的 resize 和 pageShow 事件之后自动调整 html 的 fontSize 大小。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// reset rem unit on page resize</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, setRemUnit)<span class="built_in">window</span>.addEventListener(<span class="string">'pageshow'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (e.persisted) &#123;</span><br><span class="line">        setRemUnit()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="vh、vw方案"><a href="#vh、vw方案" class="headerlink" title="vh、vw方案"></a>vh、vw方案</h3><p>vh、vw方案即将视觉视口宽度 window.innerWidth 和视觉视口高度 window.innerHeight 等分为 100 份。</p><ul><li>vw(Viewport’s width)：1vw 等于视觉视口的1%</li><li>vh(Viewport’s height) :1vh 为视觉视口高度的1%</li><li>vmin : vw 和 vh 中的较小值</li><li>vmax : 选取 vw 和 vh 中的较大值</li></ul><p><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a66a99430fc?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt><br><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a66a99430fc?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>如果视觉视口为 375px，那么 1vw = 3.75px，这时UI给定一个元素的宽为75px（设备独立像素），我们只需要将它设置为 75 / 3.75 = 20vw。</p><p>可以使用 PostCSS 的 postcss-px-to-viewport 插件帮我们完成这个过程。写代码时，我们只需要根据UI给的设计图写px单位即可。</p><p><strong>缺点：</strong></p><ul><li>px 转换成 vw 不一定能完全整除，因此有一定的像素差。</li><li>比如当容器使用vw，margin 采用 px 时，很容易造成整体宽度超过100vw，从而影响布局效果。当然我们也是可以避免的，例如使用 padding 代替margin，结合 calc() 函数使用等等。</li></ul><h2 id="适配iPhoneX"><a href="#适配iPhoneX" class="headerlink" title="适配iPhoneX"></a>适配iPhoneX</h2><h3 id="安全区域"><a href="#安全区域" class="headerlink" title="安全区域"></a>安全区域</h3><p><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a66cca9bb1c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>圆角（corners）、刘海（sensor housing）和小黑条（Home Indicator）<br><strong>===&gt;</strong> 安全区域就是一个不受上面三个效果的可视窗口范围</p><h3 id="viewport-fit"><a href="#viewport-fit" class="headerlink" title="viewport-fit"></a>viewport-fit</h3><p>viewport-fit是专门为了适配iPhoneX而诞生的一个属性，它用于限制网页如何在安全区域内进行展示。</p><p><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a66dca102ac?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><ul><li>contain: 可视窗口完全包含网页内容</li><li>cover：网页内容完全覆盖可视窗口</li></ul><p>默认情况下或者设置为 auto 和 contain 效果相同。</p><h3 id="env、constant"><a href="#env、constant" class="headerlink" title="env、constant"></a>env、constant</h3><p><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a66e9dcf70d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>我们需要将顶部和底部合理的摆放在安全区域内，iOS11新增了两个CSS函数env、constant，用于设定安全区域与边界的距离。</p><p>函数内部可以是四个常量：</p><ul><li><code>safe-area-inset-left</code>：安全区域距离左边边界距离</li><li><code>safe-area-inset-right</code>：安全区域距离右边边界距离</li><li><code>safe-area-inset-top</code>：安全区域距离顶部边界距离</li><li><code>safe-area-inset-bottom</code>：安全区域距离底部边界距离</li></ul><p>注意：我们必须指定 viweport-fit 后才能使用这两个函数：<br><code>&lt;meta name=&quot;viewport&quot; content=&quot;viewport-fit=cover&quot;&gt;</code></p><p>constant 在 iOS &lt; 11.2 的版本中生效，env 在 iOS &gt;= 11.2 的版本中生效，这意味着我们往往要同时设置他们，将页面限制在安全区域内：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="built_in">constant</span>(safe-area-inset-bottom);</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="built_in">env</span>(safe-area-inset-bottom);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>复制代码当使用底部固定导航栏时，我们要为他们设置 padding 值：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="built_in">constant</span>(safe-area-inset-bottom);</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="built_in">env</span>(safe-area-inset-bottom);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="横屏适配"><a href="#横屏适配" class="headerlink" title="横屏适配"></a>横屏适配</h2><p><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a6714b19e8a?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h3 id="JavaScript检测横屏"><a href="#JavaScript检测横屏" class="headerlink" title="JavaScript检测横屏"></a>JavaScript检测横屏</h3><p><code>window.orientation</code> : 获取屏幕旋转方向</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>, ()=&gt;&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.orientation === <span class="number">180</span> || <span class="built_in">window</span>.orientation === <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="comment">// 正常方向或屏幕旋转180度</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'竖屏'</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.orientation === <span class="number">90</span> || <span class="built_in">window</span>.orientation === <span class="number">-90</span> )&#123;</span><br><span class="line">       <span class="comment">// 屏幕顺时钟旋转90度或屏幕逆时针旋转90度</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'横屏'</span>);</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="css检测横屏"><a href="#css检测横屏" class="headerlink" title="css检测横屏"></a>css检测横屏</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> screen and (orientation: portrait) &#123;</span><br><span class="line">  <span class="comment">/*竖屏...*/</span></span><br><span class="line">&#125; </span><br><span class="line">@<span class="keyword">media</span> screen and (orientation: landscape) &#123;</span><br><span class="line">  <span class="comment">/*横屏...*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图片模糊问题"><a href="#图片模糊问题" class="headerlink" title="图片模糊问题"></a>图片模糊问题</h2><h3 id="产生原因"><a href="#产生原因" class="headerlink" title="产生原因"></a>产生原因</h3><p>理论上，位图的每个像素对应在屏幕上使用一个物理像素来渲染，才能达到最佳的显示效果。<br>而在 dpr &gt; 1 的屏幕上，位图的一个像素可能由多个物理像素来渲染，然而这些物理像素点并不能被准确的分配上对应位图像素的颜色，只能取近似值，所以相同的图片在 dpr &gt; 1 的屏幕上就会模糊:<br><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a67167287de?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>为了保证图片质量，我们应该尽可能让一个屏幕像素来渲染一个图片像素，所以，针对不同DPR的屏幕，我们需要展示不同分辨率的图片。</p><p>如：在dpr=2的屏幕上展示两倍图(@2x)，在dpr=3的屏幕上展示三倍图(@3x)。<br><img src="https://user-gold-cdn.xitu.io/2019/5/17/16ac3a675038a23c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h3 id="media查询"><a href="#media查询" class="headerlink" title="media查询"></a>media查询</h3><p>使用media查询判断不同的设备像素比来显示不同精度的图片：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.avatar</span>&#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(conardLi_1x.png);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> only screen and (-webkit-min-device-pixel-ratio:<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="selector-class">.avatar</span>&#123;</span><br><span class="line">        <span class="attribute">background-image</span>: <span class="built_in">url</span>(conardLi_2x.png);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> only screen and (-webkit-min-device-pixel-ratio:<span class="number">3</span>)&#123;</span><br><span class="line">    <span class="selector-class">.avatar</span>&#123;</span><br><span class="line">        <span class="attribute">background-image</span>: <span class="built_in">url</span>(conardLi_3x.png);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>只适用于背景图</p></blockquote><h3 id="image-set"><a href="#image-set" class="headerlink" title="image-set"></a>image-set</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.avatar</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">-webkit-image-set</span>( <span class="string">"conardLi_1x.png"</span> 1x, <span class="string">"conardLi_2x.png"</span> 2x );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>只适用于背景图</p></blockquote><h3 id="srcset"><a href="#srcset" class="headerlink" title="srcset"></a>srcset</h3><p>使用 img 标签的 srcset 属性，浏览器会自动根据像素密度匹配最佳显示图片：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"conardLi_1x.png"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">srcset</span>=<span class="string">" conardLi_2x.png 2x, conardLi_3x.png 3x"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JavaScript拼接图片url"><a href="#JavaScript拼接图片url" class="headerlink" title="JavaScript拼接图片url"></a>JavaScript拼接图片url</h3><p>使用 window.devicePixelRatio 获取设备像素比，遍历所有图片，替换图片地址：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> dpr = <span class="built_in">window</span>.devicePixelRatio;</span><br><span class="line"><span class="keyword">const</span> images =  <span class="built_in">document</span>.querySelectorAll(<span class="string">'img'</span>);</span><br><span class="line">images.forEach(<span class="function">(<span class="params">img</span>)=&gt;</span>&#123;</span><br><span class="line">  img.src.replace(<span class="string">"."</span>, <span class="string">`@<span class="subst">$&#123;dpr&#125;</span>x.`</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="使用svg"><a href="#使用svg" class="headerlink" title="使用svg"></a>使用svg</h3><p>SVG的全称是可缩放矢量图（Scalable Vector Graphics）。不同于位图的基于像素，SVG 则是属于对图像的形状描述，所以它本质上是文本文件，体积较小，且不管放大多少倍都不会失真。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"conardLi.svg"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">"data:image/svg+xml;base64,[data]"</span>&gt;</span><br><span class="line"></span><br><span class="line">.avatar &#123;</span><br><span class="line">  background: url(conardLi.svg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运行环境 </tag>
            
            <tag> 移动端适配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转发】viewport剖析</title>
      <link href="/2019/09/21/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/5-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/viewport%E5%89%96%E6%9E%90/"/>
      <url>/2019/09/21/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/5-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/viewport%E5%89%96%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>转发自 <a href="https://www.w3cplus.com/css/viewports.html" target="_blank" rel="noopener">viewports 剖析</a></p><h2 id="web端"><a href="#web端" class="headerlink" title="web端"></a>web端</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><h4 id="设备的pixels和CSS的pixels"><a href="#设备的pixels和CSS的pixels" class="headerlink" title="设备的pixels和CSS的pixels"></a>设备的pixels和CSS的pixels</h4><p>缩放 200% 将一个单位的 CSS 的 pixels 变成了 4 倍的设备的 pixels 那么大，即宽度 * 2、高度 * 2，面积扩大了2 * 2 。</p><blockquote><p>在缩放级别为100%时，1单位的CSS的pixel是严格相等于1单位的设备pixel</p></blockquote><h4 id="screen-width-height"><a href="#screen-width-height" class="headerlink" title="screen.width/height"></a>screen.width/height</h4><p><strong>含义</strong>：用户的屏幕的完整大小<br><strong>度量</strong>：设备的pixels<br><strong>兼容性问题</strong>：IE8里，不管使用IE7模式还是IE8模式，都以CSS的pixels来度量<br><strong>注意</strong>：screen.width 和 screen.height 的值不会因为缩放而改变：他们是显示器的特征，而不是浏览器</p><h4 id="window-innerWidth-Height"><a href="#window-innerWidth-Height" class="headerlink" title="window.innerWidth/Height"></a>window.innerWidth/Height</h4><p><strong>含义</strong>：包含滚动条尺寸的浏览器完整尺寸<br><strong>度量</strong>：CSS 的 pixels<br><strong>兼容性问题</strong>：IE 不支持，Opera 用设备 pixels 来度量<br><strong>注意</strong>：</p><ul><li>当用户放大显示时，你能获取的浏览器窗口可用空间会减少， window.innerWidth/Height 就是缩小的比例</li><li>Opera 浏览器在这个问题上是一朵奇葩，当用户放大浏览器显示时不少。所以当用户放大显示时，你能获取的浏览器窗口<br>可用空间会减少。window.innerWidth/Height 却并不会减小。在桌面浏览器上，这个特性很烦人，但在移动设备浏览器<br>上简直是致命的。</li></ul><blockquote><p>窗口内部宽度和高度的尺寸，包含了滚动条的尺寸。</p></blockquote><h4 id="window-pageX-YOffset"><a href="#window-pageX-YOffset" class="headerlink" title="window.pageX/YOffset"></a>window.pageX/YOffset</h4><p><strong>含义</strong>：页面的移位<br><strong>度量</strong>：CSS的pixels<br><strong>兼容性问题</strong>：pageXOffset 和 pageYOffset 在 IE 8 及之前版本的IE不支持, 使用 “document.body.scrollLeft” and “document.body.scrollTop” 来取代。</p><blockquote><p>window.pageXOffset 和 window.pageYOffset，定义了页面(document)的相对于窗口原点的水平、垂直位移。<br>因此能够定位用户滚动了多少的滚动条距离。</p></blockquote><h4 id="视窗-viewport"><a href="#视窗-viewport" class="headerlink" title="视窗 viewport"></a>视窗 viewport</h4><p>viewport 是严格的等于浏览器的窗口，<html> 元素为viewport宽度的100%。</html></p><h4 id="document-documentElement-clientWidth-Height"><a href="#document-documentElement-clientWidth-Height" class="headerlink" title="document. documentElement. clientWidth/Height"></a>document. documentElement. clientWidth/Height</h4><p><strong>含义</strong>：viewport的尺寸<br><strong>度量</strong>：CSS的pixels<br><strong>兼容性问题</strong>：无</p><blockquote><p>document. documentElement. clientWidth/Height只会给出viewport的尺寸，而不管<html>元素尺寸如何改变。</html></p></blockquote><ul><li>window.innerWidth/Height包含滚动条</li><li>document. documentElement. clientWidth/Height不包含<br>我们能获取这两个特性对是因为他们是浏览器大战的残留。过去Netscape只支持window.innerWidth/Height，<br>IE 只支持document. documentElement. clientWidth/Height。从那时候开始所有其余浏览器都支持这两个特性。<br>但IE一直未支持window.innerWidth/Height。</li></ul><h4 id="document-documentElement-offsetWidth-Height"><a href="#document-documentElement-offsetWidth-Height" class="headerlink" title="document. documentElement. offsetWidth/Height"></a>document. documentElement. offsetWidth/Height</h4><p><strong>含义</strong>：<html>的尺寸<br><strong>度量</strong>：CSS的pixels<br><strong>兼容性问题</strong>：IE用这个值标示viewport的尺寸而非<html></html></html></p><h4 id="事件坐标-Event-coordinates"><a href="#事件坐标-Event-coordinates" class="headerlink" title="事件坐标 Event coordinates"></a>事件坐标 Event coordinates</h4><p><strong>pageX/Y, clientX/Y, screenX/Y</strong><br><strong>含义</strong>：见下文<br><strong>度量</strong>：见下文<br><strong>兼容性问题</strong>：IE不支持pageX/Y,IE使用CSSpixels来度量screanX/Y<br><strong>详细描述</strong>:<br>pageX/Y：从<html>原点到事件触发点的CSS的 pixels<br>clientX/Y：从viewport原点（浏览器窗口）到事件触发点的CSS的 pixels<br>screenX/Y：从用户显示器窗口原点到事件触发点的设备 的 pixels。</html></p><h4 id="css-Media查询"><a href="#css-Media查询" class="headerlink" title="css Media查询"></a>css Media查询</h4><p>有两个相关的media查询：width/height 和 device-width/device-height。</p><ul><li>device-width/height 使用 screen.width/height 来做为的判定值。该值以设备的pixels来度量</li><li>width/height 使用 documentElement.clientWidth/Height 即 viewport 的值。该值以CSS的pixels来度量</li></ul><h2 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h2><h3 id="两种viewport"><a href="#两种viewport" class="headerlink" title="两种viewport"></a>两种viewport</h3><ul><li>虚拟的viewport(visualviewport)和布局的viewport(layoutviewport)</li><li>layoutviewport的宽度高度和最小缩放模式下能在页面上显示的内容的宽度高度一致。即便用户缩放，它依然保存不变.</li><li>如果你旋转你的手机，visualviewport改变，但浏览器会缩放页面以自适应，以达到layoutviewport再次和<br>visualviewport同样宽。</li></ul><h3 id="document-documentElement-clientWidth-Height-1"><a href="#document-documentElement-clientWidth-Height-1" class="headerlink" title="document. documentElement. clientWidth/Height"></a>document. documentElement. clientWidth/Height</h3><p><strong>含义</strong>：layoutviewport尺寸<br><strong>度量</strong>：CSS的pixels<br><strong>完整支持</strong>：Opera, iPhone, Android, Symbian, Bolt, MicroB, Skyfire, Obigo<br><strong>问题</strong>：</p><ul><li>在Iris上它标示visualvieport</li><li>三星的Webkit核心浏览器，仅当在页面上写入<meta viewport>标签，才正确表示。否则就代表着</li><li>FireFox以设备的pixels来度量</li><li>IE返回1024 x 768 px，而准确的尺寸保存在document.body.clientWidth/Height</li><li>NetFront仅当100%缩放时候才正确</li><li>塞班的Webkit1(在S60v3设备)不支持这些属性</li></ul><p><strong>说明</strong>：旋转只关系到高度，而不是宽度。</p><h3 id="window-innerWidth-Height-1"><a href="#window-innerWidth-Height-1" class="headerlink" title="window.innerWidth/Height"></a>window.innerWidth/Height</h3><p><strong>含义</strong>：visualviewport尺寸<br><strong>度量</strong>：CSS的pixels<br><strong>完整支持</strong>：iPhone, Symbian, BlackBerry<br><strong>问题</strong>：</p><ul><li>FireFox和Opera以设备的pixels返回该数值</li><li>Android, Bolt, MicroB, 和 NetFront 以CSS的pixels返回该数值，且为layoutviewport的值</li></ul><p><strong>不支持</strong>：</p><ul><li>IE，它使用document. documentElement. offsetWidh/Height来表示</li><li>三星的Webkit核心浏览器，仅当在页面上写入<meta viewport>标签，才正确表示。否则就代表着<html>的尺寸</html></li><li>混乱：Iris, Skyfire, Obigo返回的值不知所云</li></ul><p><strong>说明</strong>：window.innerWidth/Height来度量visualviewport。显然，随着用户缩放浏览器，这值会改变，更多、<br>更少的CSS pixels放进了屏幕。</p><h3 id="screen-width-and-screen-height"><a href="#screen-width-and-screen-height" class="headerlink" title="screen.width and screen.height"></a>screen.width and screen.height</h3><p><strong>含义</strong>：屏幕尺寸<br><strong>度量</strong>：设备的pixels<br><strong>完整支持</strong>：Opera Mini, Android, Symbian, Iris, Firefox, MicroB, IE, BlackBerry<br><strong>问题</strong>：</p><ul><li>Opera在Windows Mobile下只给出横向尺寸(landscape size)。在S60上工作正确。</li><li>三星的Webkit核心浏览器，仅当在页面上写入<meta viewport>标签，才正确表示。否则就代表着<html>的尺寸</html></li><li>iPhone和Obigo仅给出竖直尺寸(portrait sizes)</li><li>Android, Bolt, MicroB, 和 NetFront 以CSS的pixels返回该数值，且为layoutviewport的值</li></ul><p><strong>不支持</strong>：</p><ul><li>IE，它使用document. documentElement. offsetWidh/Height来表示 - 三星的Webkit核心浏览器，仅当在页面上写入<meta viewport>标签，才正确表示。否则就代表着<html>的尺寸</html></li><li>混乱：Iris, Skyfire, Obigo返回的值不知所云</li></ul><p><strong>说明</strong>：和pc浏览器一样，screen.width/height标示了设备屏幕的尺寸，以设备的pixels度量。和pc浏览器一样，<br>作为web开发人员你永远不需要这些信息。你不关心屏幕的物理宽度，而关心当前有多少CSS的pixels能供你使用。</p><h3 id="window-pageX-YOffset-1"><a href="#window-pageX-YOffset-1" class="headerlink" title="window.pageX/YOffset"></a>window.pageX/YOffset</h3><p><strong>含义</strong>：见描述<br><strong>度量</strong>：CSS的pixels<br><strong>完整支持</strong>：iPhone, Android, Symbian, Iris, MicroB, Skyfire, Obigo<br><strong>问题</strong>：<br>Opera, Bolt, Firefox, and NetFront 总是返回 0.<br>三星的Webkit核心浏览器，仅当在页面上写入标签，才正确表示。<br><strong>不支持</strong>： IE，它使用document. scrollLeft/Top来表示<br>你同意需要知道当前visualviewport相对于layoutviewport的距离。这就是滚动位移，如同在桌面浏览器一样，<br>使用window.pageX/YOffset存储。</p><h3 id="document-documentElement-offsetWidth-Height-1"><a href="#document-documentElement-offsetWidth-Height-1" class="headerlink" title="document. documentElement. offsetWidth / Height"></a>document. documentElement. offsetWidth / Height</h3><p><strong>含义</strong>：html元素的整体尺寸<br><strong>度量</strong>：CSS 的 pixels<br><strong>完整支持</strong>：Opera, iPhone, Android, Symbian, Samsung, Iris, Bolt, Firefox, MicroB, Skyfire, BlackBerry, Obigo<br><strong>问题</strong>：<br>NetFront 只在100%缩放时返回正确的值.<br>IE，使用这个特性对来表示 visualviewport 的尺寸。它使用 document. body. clientWidth/Height 来表示<br>和在桌面系统一样, document.documentElement.offsetWidth/Height 给出了<br>元素以 CSS 的 pixels 度量的尺寸。</p><h3 id="Media-queries"><a href="#Media-queries" class="headerlink" title="Media queries"></a>Media queries</h3><p><strong>含义</strong>：以CSS的pixels度量<html>元素或以设备 的pixels度量设备<br><strong>完整支持</strong>：Opera, iPhone, Android, Symbian, Samsung, Iris, Bolt, Firefox, MicroB.<br><strong>不支持</strong>：Skyfire, IE, BlackBerry, NetFront, Obigo<br><strong>备注</strong>： 我只测试了浏览器是否从正确的特性对里提取这些值。而特性对里的值是否正确并不在这里进行详细测试。</html></p><h3 id="Event-coordinates-事件坐标"><a href="#Event-coordinates-事件坐标" class="headerlink" title="Event coordinates 事件坐标"></a>Event coordinates 事件坐标</h3><p><strong>含义</strong>：见下文<br><strong>度量</strong>：见下文<br><strong>完整支持</strong>：Symbian, Iris<br><strong>问题</strong>：<br>Opera 只有pageX/Y，但滚动页面过远时这个值会出错。<br>在iPhone, Firefox, 和 BlackBerry 上clientX/Y 和pageX/Y相等<br>在 Android 和 MicroB screenX/Y和clientX/Y相等，也就是它们以CSS的pixels度量屏幕尺寸<br>在FireFox里screenX/Y值不正确<br>IE, BlackBerry, 和 Obigo 不支持 pageX/Y.<br>NetFront 所以三个值都是screenX/Y.<br>Obigo clientX/Y是screenX/Y.<br>Samsung WebKit 总是返回pageX/Y.<br><strong>未测试</strong>：Opera Mini,Bolt,Skyfire<br><strong>备注</strong>：事件坐标在桌面浏览器上多多少少是支持的。不幸的是，移动设备上在所测试的12个主流浏览器中只有Symbian WebKit 和 Iris完全正确的支持这3个坐标特性。其余浏览器多多少少都存在问题。</p><h3 id="Meta-Viewport"><a href="#Meta-Viewport" class="headerlink" title="Meta Viewport"></a>Meta Viewport</h3><p><strong>含义</strong>：设置layoutviewport的宽度<br><strong>度量</strong>：CSS的pixels<br><strong>完整支持</strong>：Opera Mobile, iPhone, Android, Iris, IE, BlackBerry, Obigo<br><strong>不支持</strong>：Opera Mini, Symbian, Bolt, Firefox, MicroB, NetFront<br><strong>问题</strong>：<br>Skyfire 不能处理我的测试页面。<br>在三星的wibkit浏览器下，出现会改变一些特性对的值。<br>Opera Mobile, iPhone, Samsung, and BlackBerry 不允许用户在设置viewport后再进行缩小操作（do not allow the<br>user to zoom out.）</p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运行环境 </tag>
            
            <tag> 移动端适配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转发】vue-router传参方式</title>
      <link href="/2019/09/19/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue-router%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F/"/>
      <url>/2019/09/19/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue-router%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>转发自</strong></p><p><a href="https://www.jianshu.com/p/4c5c99abb864" target="_blank" rel="noopener">从头开始学习vue-router</a></p><p><a href="https://blog.csdn.net/crazywoniu/article/details/80942642" target="_blank" rel="noopener">vue-router传递参数的几种方式</a></p></blockquote><h2 id="什么是vue-router"><a href="#什么是vue-router" class="headerlink" title="什么是vue-router"></a>什么是vue-router</h2><p>Vue做的都是单页应用（当你的项目准备打包时，运行<code>npm run build</code>时，就会生成 dist 文件夹，<br>这里面只有静态资源和一个 index.html 页面），所以你写的<code>&lt;a&gt;&lt;/a&gt;</code>标签是不起作用的，你必须使用<br>vue-router 来进行管理。</p><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><p>SPA(single page application):单一页面应用程序，只有一个完整的页面；它在加载页面时，不会加载整个页面，<br>而是只更新某个指定的容器中内容。</p><p>单页面应用(SPA)的核心之一是: 更新视图而不重新请求页面;</p><p>vue-router在实现单页面前端路由时，提供了两种方式：Hash模式和History模式；<br>根据mode参数来决定采用哪一种方式。</p><h3 id="Hash模式"><a href="#Hash模式" class="headerlink" title="Hash模式"></a>Hash模式</h3><p>vue-router 默认 hash 模式 —— 使用 URL 的 hash 来模拟一个完整的 URL，于是当 URL 改变时，<br>页面不会重新加载。 hash（#）是URL 的锚点，代表的是网页中的一个位置，单单改变#后的部分，<br>浏览器只会滚动到相应位置，不会重新加载网页，也就是说hash 出现在 URL 中，但不会被包含在 http 请求中，<br>对后端完全没有影响，因此改变 hash 不会重新加载页面；同时每一次改变#后的部分，都会在浏览器的访问历<br>史中增加一个记录，使用”后退”按钮，就可以回到上一个位置；所以说Hash模式通过锚点值的改变，根据不同的值，<br>渲染指定DOM位置的不同数据。hash 模式的原理是 onhashchange 事件(监测hash值变化)，可以在 window 对象<br>上监听这个事件。</p><h3 id="History模式"><a href="#History模式" class="headerlink" title="History模式"></a>History模式</h3><p>由于hash模式会在url中自带#，如果不想要很丑的 hash，我们可以用路由的 history 模式，只需要在配置路<br>由规则时，加入”mode: ‘history’”,这种模式充分利用了html5 history interface 中新增的 pushState()<br>和 replaceState() 方法。这两个方法应用于浏览器记录栈，在当前已有的 back、forward、go 基础之上，<br>它们提供了对历史记录修改的功能。只是当它们执行修改时，虽然改变了当前的 URL ，但浏览器不会立即向后端发送请求。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js文件中</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>,</span><br><span class="line">  routes: [...]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>增加一个覆盖所有情况的候选资源：如果 URL 匹配不到任何静态资源，则应该返回同一个 index.html 页面，<br>这个页面就是你 app 依赖的页面。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> routes = [ </span><br><span class="line">  &#123;<span class="attr">path</span>: <span class="string">"/"</span>, <span class="attr">name</span>: <span class="string">"homeLink"</span>, <span class="attr">component</span>:Home&#125;</span><br><span class="line">  &#123;<span class="attr">path</span>: <span class="string">"/register"</span>, <span class="attr">name</span>: <span class="string">"registerLink"</span>, <span class="attr">component</span>: Register&#125;,</span><br><span class="line">  &#123;<span class="attr">path</span>: <span class="string">"/login"</span>, <span class="attr">name</span>: <span class="string">"loginLink"</span>, <span class="attr">component</span>: Login&#125;,</span><br><span class="line">  &#123;<span class="attr">path</span>: <span class="string">"*"</span>, <span class="attr">redirect</span>: <span class="string">"/"</span>&#125;]</span><br></pre></td></tr></table></figure><h3 id="使用路由模块来实现页面跳转的方式"><a href="#使用路由模块来实现页面跳转的方式" class="headerlink" title="使用路由模块来实现页面跳转的方式"></a>使用路由模块来实现页面跳转的方式</h3><p><strong>方式1</strong>：直接修改地址栏</p><p><strong>方式2</strong>：<code>this.$router.push</code>(‘路由地址’)</p><p><strong>方式3</strong>：<code>&lt;router-link to=&quot;路由地址&quot;&gt;&lt;/router-link&gt;</code></p><h2 id="vue-router使用方式"><a href="#vue-router使用方式" class="headerlink" title="vue-router使用方式"></a>vue-router使用方式</h2><ol><li><p>下载 <code>npm i vue-router -S</code></p></li><li><p>在 main.js 中引入 <code>import VueRouter from &#39;vue-router&#39;;</code></p></li><li><p>安装插件 <code>Vue.use(VueRouter);</code></p></li><li><p>创建路由对象并配置路由规则 <code>let router = new VueRouter({routes:[{path:&#39;/home&#39;,component:Home}]});</code></p></li><li><p>将其路由对象传递给Vue的实例，options中加入 <code>router:router</code></p></li><li><p>在app.vue中留坑 <code>&lt;router-view&gt;&lt;/router-view&gt;</code></p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js文件中引入</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span>;</span><br><span class="line"><span class="comment">//主体</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./components/app.vue'</span>;</span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'./components/home.vue'</span></span><br><span class="line"><span class="comment">//安装插件</span></span><br><span class="line">Vue.use(VueRouter); <span class="comment">//挂载属性</span></span><br><span class="line"><span class="comment">//创建路由对象并配置路由规则</span></span><br><span class="line"><span class="keyword">let</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    routes: [</span><br><span class="line">        <span class="comment">//一个个对象</span></span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">'/home'</span>, <span class="attr">component</span>: Home &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//new Vue 启动</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    <span class="comment">//让vue知道我们的路由规则</span></span><br><span class="line">    router: router, <span class="comment">//可以简写router</span></span><br><span class="line">    render: <span class="function"><span class="params">c</span> =&gt;</span> c(App),</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//app.vue中</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 留坑，非常重要 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">        data()&#123;</span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="vue-router参数传递"><a href="#vue-router参数传递" class="headerlink" title="vue-router参数传递"></a>vue-router参数传递</h2><h3 id="用name传递参数"><a href="#用name传递参数" class="headerlink" title="用name传递参数"></a>用name传递参数</h3><p>在路由文件 src/router/index.js 里配置name属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'Hello'</span>,</span><br><span class="line">      component: Hello</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>模板里(src/App.vue)用<code>$route.name</code>来接收 比如：<code>&lt;p&gt;&lt;/p&gt;</code></p><h3 id="通过-标签中的to传参"><a href="#通过-标签中的to传参" class="headerlink" title="通过 标签中的to传参"></a>通过<router-link> 标签中的to传参</router-link></h3><p>在 src/App.vue 文件中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123;name:'hi1',params:&#123;username:'jspang',id:'555'&#125;&#125;"</span>&gt;</span>Hi页面1<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后把 src/router/index.js 文件里给hi1配置的路由起个name,就叫hi1.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">path</span>:<span class="string">'/hi1'</span>,<span class="attr">name</span>:<span class="string">'hi1'</span>,<span class="attr">component</span>:Hi1&#125;</span><br></pre></td></tr></table></figure><p>最后在模板里 (src/components/Hi1.vue) 用<code>$route.params.username</code>进行接收.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;$route.params.username&#125;&#125;-&#123;&#123;$route.params.id&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="利用url传递参数—-在配置文件里以冒号的形式设置参数"><a href="#利用url传递参数—-在配置文件里以冒号的形式设置参数" class="headerlink" title="利用url传递参数—-在配置文件里以冒号的形式设置参数"></a>利用url传递参数—-在配置文件里以冒号的形式设置参数</h3><p>在 /src/router/index.js 文件里配置路由</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path:<span class="string">'/params/:newsId/:newsTitle'</span>,</span><br><span class="line">    component:Params</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要传递参数是新闻ID（newsId）和新闻标题（newsTitle）.所以我们在路由配置文件里制定了这两个值。</p><p>在 src/components 目录下建立我们params.vue组件，也可以说是页面。我们在页面里输出了url传递的的新闻ID和新闻标题。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>新闻ID：&#123;&#123; $route.params.newsId&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>新闻标题：&#123;&#123; $route.params.newsTitle&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">'params'</span>,</span></span><br><span class="line">  data () &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      msg: <span class="string">'params page'</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在App.vue文件里加入我们的 <router-view> 标签。这时候我们可以直接利用url传值了</router-view></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/params/198/jspang website is very good"</span>&gt;</span>params<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用path来匹配路由，然后通过query来传递参数"><a href="#使用path来匹配路由，然后通过query来传递参数" class="headerlink" title="使用path来匹配路由，然后通过query来传递参数"></a>使用path来匹配路由，然后通过query来传递参数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123; name:'Query',query: &#123; queryId:  status &#125;&#125;"</span> &gt;</span></span><br><span class="line">     router-link跳转Query</span><br><span class="line"><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对应路由配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/query'</span>,</span><br><span class="line">  name: <span class="string">'Query'</span>,</span><br><span class="line">  component: Query</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>于是我们可以获取参数：<code>this.$route.query.queryId</code></p><h2 id="vue-router配置子路由-二级路由"><a href="#vue-router配置子路由-二级路由" class="headerlink" title="vue-router配置子路由(二级路由)"></a>vue-router配置子路由(二级路由)</h2><h3 id="首先用-标签增加了两个新的导航链接"><a href="#首先用-标签增加了两个新的导航链接" class="headerlink" title="首先用  标签增加了两个新的导航链接"></a>首先用 <router-link> 标签增加了两个新的导航链接</router-link></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123;name:'HelloWorld'&#125;"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123;name:'H1'&#125;"</span>&gt;</span>H1页面<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123;name:'H2'&#125;"</span>&gt;</span>H2页面<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在-HelloWorld-vue-加入-标签，给子模板提供插入位置"><a href="#在-HelloWorld-vue-加入-标签，给子模板提供插入位置" class="headerlink" title="在 HelloWorld.vue 加入  标签，给子模板提供插入位置"></a>在 HelloWorld.vue 加入 <router-view> 标签，给子模板提供插入位置</router-view></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在-components-目录下新建两个组件模板-H1-vue-和-H2-vue"><a href="#在-components-目录下新建两个组件模板-H1-vue-和-H2-vue" class="headerlink" title="在 components 目录下新建两个组件模板 H1.vue 和 H2.vue"></a>在 components 目录下新建两个组件模板 H1.vue 和 H2.vue</h3><p>两者内容类似，以下是H1.vue页面内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">    data() &#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">        msg: <span class="string">'I am H1 page,Welcome to H1'</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="修改-router-index-js-代码，子路由的写法是在原有的路由配置下加入-children-字段。"><a href="#修改-router-index-js-代码，子路由的写法是在原有的路由配置下加入-children-字段。" class="headerlink" title="修改 router/index.js 代码，子路由的写法是在原有的路由配置下加入 children 字段。"></a>修改 router/index.js 代码，子路由的写法是在原有的路由配置下加入 children 字段。</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> routes: [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    name: <span class="string">'HelloWorld'</span>,</span><br><span class="line">    component: HelloWorld,</span><br><span class="line">    children: [&#123;<span class="attr">path</span>: <span class="string">'/h1'</span>, <span class="attr">name</span>: <span class="string">'H1'</span>, <span class="attr">component</span>: H1&#125;,<span class="comment">//子路由的&lt;router-view&gt;必须在HelloWorld.vue中出现</span></span><br><span class="line">      &#123;<span class="attr">path</span>: <span class="string">'/h2'</span>, <span class="attr">name</span>: <span class="string">'H2'</span>, <span class="attr">component</span>: H2&#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="单页面多路由区域操作"><a href="#单页面多路由区域操作" class="headerlink" title="单页面多路由区域操作"></a>单页面多路由区域操作</h2><p>在一个页面里我们有两个以上<router-view>区域，我们通过配置路由的js文件，来操作这些区域的内容</router-view></p><h3 id="App-vue文件，在下面新写了两行标签-并加入了些CSS样式"><a href="#App-vue文件，在下面新写了两行标签-并加入了些CSS样式" class="headerlink" title="App.vue文件，在下面新写了两行标签,并加入了些CSS样式"></a>App.vue文件，在<router-view>下面新写了两行<router-view>标签,并加入了些CSS样式</router-view></router-view></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./assets/logo.png"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123;name:'HelloWorld'&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>H1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123;name:'H1'&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>H2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">name</span>=<span class="string">"left"</span> <span class="attr">style</span>=<span class="string">"float:left;width:50%;background-color:#ccc;height:300px;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">name</span>=<span class="string">"right"</span> <span class="attr">style</span>=<span class="string">"float:right;width:50%;background-color:yellowgreen;height:300px;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="需要在路由里配置这三个区域，配置主要是在components字段里进行"><a href="#需要在路由里配置这三个区域，配置主要是在components字段里进行" class="headerlink" title="需要在路由里配置这三个区域，配置主要是在components字段里进行"></a>需要在路由里配置这三个区域，配置主要是在components字段里进行</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">    routes: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/'</span>,</span><br><span class="line">        name: <span class="string">'HelloWorld'</span>,</span><br><span class="line">        components: &#123;<span class="attr">default</span>: HelloWorld,</span><br><span class="line">          left:H1,<span class="comment">//显示H1组件内容'I am H1 page,Welcome to H1'</span></span><br><span class="line">          right:H2<span class="comment">//显示H2组件内容'I am H2 page,Welcome to H2'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/h1'</span>,</span><br><span class="line">        name: <span class="string">'H1'</span>,</span><br><span class="line">        components: &#123;<span class="attr">default</span>: HelloWorld,</span><br><span class="line">          left:H2,<span class="comment">//显示H2组件内容</span></span><br><span class="line">          right:H1<span class="comment">//显示H1组件内容</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="route-和-router-的区别"><a href="#route-和-router-的区别" class="headerlink" title="$route 和 $router 的区别"></a>$route 和 $router 的区别</h2><h3 id="route-是“路由信息对象”，"><a href="#route-是“路由信息对象”，" class="headerlink" title="$route 是“路由信息对象”，"></a>$route 是“路由信息对象”，</h3><p>包括 path，params，hash，query，fullPath，matched，name 等路由信息参数。</p><ol><li><p>$route.path<br>字符串，对应当前路由的路径，总是解析为绝对路径，如 “/order”。</p></li><li><p>$route.params<br>一个 key/value 对象，包含了 动态片段 和 全匹配片段，<br>如果没有路由参数，就是一个空对象。</p></li><li><p>$route.query<br>一个 key/value 对象，表示 URL 查询参数。<br>例如，对于路径 /foo?user=1，则有 $route.query.user为1，<br>如果没有查询参数，则是个空对象。</p></li><li><p>$route.hash<br>当前路由的 hash 值 (不带 #) ，如果没有 hash 值，则为空字符串。</p></li><li><p>$route.fullPath<br>完成解析后的 URL，包含查询参数和 hash 的完整路径。</p></li><li><p>$route.matched<br>数组，包含当前匹配的路径中所包含的所有片段所对应的配置参数对象。</p></li><li><p>$route.name 当前路径名字</p></li></ol><h3 id="router-是“路由实例”对象"><a href="#router-是“路由实例”对象" class="headerlink" title="$router 是“路由实例”对象"></a>$router 是“路由实例”对象</h3><p>即使用 new VueRouter创建的实例，包括了路由的跳转方法，钩子函数等。</p><p><strong>$router常见跳转方法:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"goToMenu"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span>&gt;</span>Let's order！<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">.....</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line">    methods:&#123;</span><br><span class="line">      goToMenu()&#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.$router.go(<span class="number">-1</span>)<span class="comment">//跳转到上一次浏览的页面</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.$router.replace(<span class="string">'/menu'</span>)<span class="comment">//指定跳转的地址</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.$router.replace(&#123;<span class="attr">name</span>:<span class="string">'menuLink'</span>&#125;)<span class="comment">//指定跳转路由的名字下</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.$router.push(<span class="string">'/menu'</span>)<span class="comment">//通过push进行跳转</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.$router.push(&#123;<span class="attr">name</span>:<span class="string">'menuLink'</span>&#125;)<span class="comment">//通过push进行跳转路由的名字下</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="router-push和-router-replace的区别："><a href="#router-push和-router-replace的区别：" class="headerlink" title="$router.push和$router.replace的区别："></a>$router.push和$router.replace的区别：</h3><ul><li>使用push方法的跳转会向 history 栈添加一个新的记录，当我们点击浏览器的返回按钮时可以看到之前的页面。</li><li>使用replace方法不会向 history 添加新记录，而是替换掉当前的 history 记录，即当replace跳转到的网页后，‘后退’按钮不能查看之前的页面。</li></ul><h2 id="如何设置404页面"><a href="#如何设置404页面" class="headerlink" title="如何设置404页面"></a>如何设置404页面</h2><p>用户会经常输错页面，当用户输错页面时，我们希望给他一个友好的提示页面，这个页面就是我们常说的404页面。<br>vue-router 也为我们提供了这样的机制。</p><p>设置我们的路由配置文件（/src/router/index.js）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   path:<span class="string">'*'</span>,</span><br><span class="line">   component:<span class="built_in">Error</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的 path:’*’ 就是输入地址不匹配时，自动显示出Error.vue的文件内容</p><p>在 /src/components/ 文件夹下新建一个 Error.vue 的文件。简单输入一些有关错误页面的内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">  data () &#123;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      msg: <span class="string">'Error:404'</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架和类库 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转发】echarts VS highcharts</title>
      <link href="/2019/08/24/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/%E5%AE%9E%E7%94%A8%E5%BA%93/echarts%20VS%20highcharts/"/>
      <url>/2019/08/24/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/%E5%AE%9E%E7%94%A8%E5%BA%93/echarts%20VS%20highcharts/</url>
      
        <content type="html"><![CDATA[<p>转自 <a href="https://www.jianshu.com/p/67f6aef9d69b" target="_blank" rel="noopener">echarts 与 highcharts</a></p><h2 id="一．简介"><a href="#一．简介" class="headerlink" title="一．简介"></a>一．简介</h2><p><strong>echarts</strong><br>echarts是百度公司前端开发的一个图表库，2013年发布第一版，主要采用canvas画图，目前版本3.8.4；完全免费；</p><p><strong>highchart</strong><br>highcharts是国外的一家公司开发的图表库，主要采用svg画图，不支持h5的浏览器采用vml绘制，2009 年发布第一版，目前版本6.0.3；</p><p>Highcharts 是国际知名的成熟的商业软件（也开源），商用要付费；</p><h2 id="二．对比"><a href="#二．对比" class="headerlink" title="二．对比"></a>二．对比</h2><p><strong>兼容性</strong><br>Echarts：ie9+、Firefox、chrome、safari、opera等；</p><p>highcharts ：ie6+、Firefox、chrome、safari、opera等；</p><p><strong>文档友好程度</strong><br>Echarts：百度团队开发，中文API；多种实例，支持在线编辑运行js代码；</p><p>Highcharts：国外公司开发，支持中文API；多种实例，支持在线编辑运行js代码，文档说明相比echarts更细致详细；</p><p><strong>稳定性</strong><br>Echarts：在个别低版本浏览器会出现bug。</p><p>Highcharts：稳定性非常好，适用于各种浏览器，相对于echarts更胜一筹；</p><p><strong>图表的丰富程度</strong><br>Echarts：</p><p>1.图表类：支持的图表类型有直线图、曲线图、区域图、柱状图、饼状图、散状点图、仪表图、气泡图、雷达图、树状图、象形柱图、关系图、瀑布流图等，形式多样，效果炫酷。</p><p>2.3D表现力：柱状图，三维地球，结合百度地图三维展示（效果绚丽）。</p><p>3.地图类：结合百度地图（迁徙图、热力图，散点图，交通图），效果酷炫。</p><p>Highcharts：</p><p>1.图表类：支持的图表类型有直线图、曲线图、区域图、柱状图、饼状图、散状点图、仪表图、气泡图、瀑布流图等。</p><p>2.3D表现力：柱状图，饼状图，气泡图。</p><p>3.地图类：2d线性地图（geojson数据）。</p><p><strong>社区活跃度</strong><br>Echarts：国内开发，百度前端团队维护，版本更新速度快，国内不少爱好者尝试发布新实例。</p><p>Highcharts：国外公司开发，版本性能稳定，国内外使用者众多。社区更大，比较专业。</p><p><strong>渲染能力</strong><br>Echarts：采用canvas渲染（除了对 IE8- 使用 VML），一般来说，Canvas 更适合绘制图形元素数量非常大（这一般是由数据量大导致）的图表（如热力图、地理坐标系或平行坐标系上的大规模线图或散点图等），也利于实现某些视觉 特效（如交通图）。不过echarts3.8版本会考虑svg和canvas两种渲染方式。动态增加删除节点不灵活，需要重绘。</p><p>Highcharts：采用SVG渲染（除了对 IE8- 使用 VML），SVG 渲染器相比 Canvas 渲染器在移动端的总体表现更好。在另一些数据量较大或者有图表交互动画的场景中，目前的 SVG 渲染器的性能还比不过 Canvas 渲染器。在pc端，数据量不大的情况，实例相当。动态增加删除节点灵活，不需要重绘。</p><h2 id="三．总结"><a href="#三．总结" class="headerlink" title="三．总结"></a>三．总结</h2><p>Echarts：图标样式多样、支持2d和3d地图展示，效果炫酷；兼容性弱；完全免费。</p><p>Highcharts：稳定性强；兼容性强；图标样式相对少；比较专业；个人免费，商用收费。</p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架和类库 </tag>
            
            <tag> 实用库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配色方案</title>
      <link href="/2019/08/20/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/2-HTML%E5%92%8CCSS/CSS/%E9%85%8D%E8%89%B2%E7%BD%91%E7%AB%99/"/>
      <url>/2019/08/20/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/2-HTML%E5%92%8CCSS/CSS/%E9%85%8D%E8%89%B2%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p><a href="https://flatuicolors.com/palette/us" target="_blank" rel="noopener">网站1</a><br><a href="https://colorhunt.co/" target="_blank" rel="noopener">网站2</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML和CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>less语法</title>
      <link href="/2019/08/20/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/2-HTML%E5%92%8CCSS/CSS/less/"/>
      <url>/2019/08/20/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/2-HTML%E5%92%8CCSS/CSS/less/</url>
      
        <content type="html"><![CDATA[<p><a href="https://less.bootcss.com/#" target="_blank" rel="noopener">less中文网</a></p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@baseFontSize :</span> <span class="number">16px</span>; <span class="comment">// 主字体大小</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML和CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全局变量 局部变量 块级变量</title>
      <link href="/2019/08/20/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/1-JavaScript%E5%9F%BA%E7%A1%80/%E5%8F%98%E9%87%8F%E5%92%8C%E7%B1%BB%E5%9E%8B/%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%20%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%20%E5%9D%97%E7%BA%A7%E5%8F%98%E9%87%8F/"/>
      <url>/2019/08/20/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/1-JavaScript%E5%9F%BA%E7%A1%80/%E5%8F%98%E9%87%8F%E5%92%8C%E7%B1%BB%E5%9E%8B/%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%20%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%20%E5%9D%97%E7%BA%A7%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="JavaScript-let-和-const"><a href="#JavaScript-let-和-const" class="headerlink" title="JavaScript let 和 const"></a>JavaScript let 和 const</h2><p>ES2015(ES6) 新增加了两个重要的 JavaScript 关键字: let 和 const。在 ES6 之前，JavaScript 只有两种作用域： <strong>全局变量</strong> 与 <strong>函数内的局部变量</strong>。  </p><h3 id="全局变量和局部变量"><a href="#全局变量和局部变量" class="headerlink" title="全局变量和局部变量"></a>全局变量和局部变量</h3><p>在函数外使用var关键字定义的变量，可以理解为就是全局变量。在函数内定义的变量就是局部变量。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(x) <span class="comment">// 输出 10</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">console</span>.log(x); <span class="comment">// 输出10,说明块中可以访问全局变量.</span></span><br><span class="line">x = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">console</span>.log(x); <span class="comment">// 输出 20</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(x); <span class="comment">// 输出20, 说明在块中是可以改变全局变量的值的.</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> y = <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(y); <span class="comment">// 输出5,说明在块中用var定义的变量在外面依然可以使用(相当于全局变量)</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">y = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(y); <span class="comment">// 输出2</span></span><br><span class="line">&#125;)()</span><br><span class="line"><span class="built_in">console</span>.log(y); <span class="comment">// 输出2, 说明在函数中可以访问和改变全局变量的值.</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> z = <span class="number">8</span>;</span><br><span class="line"><span class="built_in">console</span>.log(z); <span class="comment">// 输出8</span></span><br><span class="line">&#125;)()</span><br><span class="line"><span class="built_in">console</span>.log(z); <span class="comment">// 输出undefined, 因为z是局部变量,外面无法访问.</span></span><br></pre></td></tr></table></figure><h3 id="块级作用域"><a href="#块级作用域" class="headerlink" title="块级作用域"></a>块级作用域</h3><p>ES6之后可以使用let关键字创建块级作用域的变量。  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(x) <span class="comment">// 输出 10</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">let</span> x = <span class="number">20</span>; <span class="comment">// 使用let创建块级变量,仅在&#123;&#125;中生效,也不会影响&#123;&#125;外的变量.</span></span><br><span class="line"><span class="built_in">console</span>.log(x); <span class="comment">// 输出 20</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(x); <span class="comment">// 输出10, 因为&#123;&#125;中使用的是let关键字.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> y = <span class="number">5</span>;</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">console</span>.log(y); <span class="comment">// 输出5,注意这里是可以访问到的,因为在&#123;&#125;作用域中找不到y,就会从外部作用域中继续找y.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> z = <span class="number">6</span>;</span><br><span class="line"><span class="comment">// let z = 7; // 这里会报错,因为在同一个作用域中不能使用let关键字覆盖var定义的变量,也不能使用var覆盖let的定义.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p = <span class="number">7</span>;</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// var p = 11; // 这里也会报错,我理解是因为外面的p是块级变量,可是这里尝试将其转为全局变量.</span></span><br><span class="line"><span class="keyword">let</span> p = <span class="number">8</span>;</span><br><span class="line"><span class="built_in">console</span>.log(p); <span class="comment">// 这里输出8</span></span><br><span class="line"><span class="keyword">let</span> v = <span class="number">9</span>;</span><br><span class="line"><span class="comment">// const 可以理解为其实就是不可改变的块级变量,意思就是不可改变的let变量.</span></span><br><span class="line"><span class="keyword">const</span> c1 = <span class="number">666</span>;</span><br><span class="line"><span class="built_in">console</span>.log(c1); <span class="comment">// 这里输出666</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(p); <span class="comment">// 这里输出7</span></span><br><span class="line"><span class="comment">// console.log(v); // 这里报错,因为v是块级变量，在外面的话未定义.</span></span><br><span class="line"><span class="comment">// console.log(c1); // 这里报错,因为c1是块级变量（使用const定义），在外面未定义.</span></span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>JavaScript 中，<strong>var 关键字定义的变量可以在使用后声明</strong>，也就是变量可以先使用再声明（JavaScript 变量提升）。  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">5</span>; <span class="comment">// 在这里可以使用 a 变量</span></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="keyword">var</span> a; <span class="comment">// 这里声明实际上会被提升，看 1_变量声明提升.md</span></span><br></pre></td></tr></table></figure><p><strong>let 关键字定义的变量则不可以在使用后声明</strong>，也就是变量需要先声明再使用。  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">5</span>; <span class="comment">// 这里会报错，Uncaught ReferenceError: a is not defined</span></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="keyword">let</span> a;</span><br></pre></td></tr></table></figure><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><p>const定义常量与使用let 定义的变量相似：  </p><ul><li>二者都是块级作用域</li><li>都不能和它所在作用域内的其他变量或函数拥有相同的名称  </li></ul><p>两者还有以下两点区别：</p><ul><li>const声明的常量必须初始化，而let声明的变量不用</li><li>const 定义常量的值不能通过再赋值修改，也不能再次声明。而 let 定义的变量值可以修改。  </li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 实际上const创建的对象是可以“改变”的。</span></span><br><span class="line"><span class="keyword">const</span> car = &#123;<span class="attr">type</span>:<span class="string">"Fiat"</span>, <span class="attr">model</span>:<span class="string">"500"</span>, <span class="attr">color</span>:<span class="string">"white"</span>&#125;; <span class="comment">// 创建常量对象</span></span><br><span class="line">car.color = <span class="string">"red"</span>; <span class="comment">// 修改属性:</span></span><br><span class="line">car.owner = <span class="string">"Johnson"</span>; <span class="comment">// 添加属性</span></span><br><span class="line"><span class="comment">//但是不能重新赋值</span></span><br><span class="line"><span class="comment">// car = &#123;&#125;; // 这里会报错。Uncaught TypeError: Assignment to constant variable.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用const定义的数组也是同样的道理。</span></span><br><span class="line"><span class="keyword">const</span> cars = [<span class="string">"Saab"</span>, <span class="string">"Volvo"</span>, <span class="string">"BMW"</span>]; <span class="comment">// 创建常量数组</span></span><br><span class="line">cars[<span class="number">0</span>] = <span class="string">"Toyota"</span>; <span class="comment">// 修改元素</span></span><br><span class="line">cars.push(<span class="string">"Audi"</span>); <span class="comment">// 添加元素</span></span><br><span class="line"><span class="comment">// 但是不能重新赋值。</span></span><br><span class="line"><span class="comment">// cars = []; // 报错。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript基础 </tag>
            
            <tag> 变量和类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量和函数提升</title>
      <link href="/2019/08/20/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/1-JavaScript%E5%9F%BA%E7%A1%80/%E5%8F%98%E9%87%8F%E5%92%8C%E7%B1%BB%E5%9E%8B/%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/"/>
      <url>/2019/08/20/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/1-JavaScript%E5%9F%BA%E7%A1%80/%E5%8F%98%E9%87%8F%E5%92%8C%E7%B1%BB%E5%9E%8B/%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/</url>
      
        <content type="html"><![CDATA[<h1 id="变量声明提升"><a href="#变量声明提升" class="headerlink" title="变量声明提升"></a>变量声明提升</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="number">2</span>;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="built_in">console</span>.log(n);  <span class="comment">//这里输出undefined，为什么？</span></span><br><span class="line">         <span class="keyword">var</span> n = <span class="number">10</span>;  <span class="comment">//这里的局部变量声明被提升了</span></span><br><span class="line">         <span class="built_in">console</span>.log(n);  <span class="comment">//这里输出10</span></span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>我们可以尝试把函数中 var n = 10; 注释掉。</p><p>PS：全局没有变为局部，而是其实就是两个不同的变量，一个是全局，一个是局部，刚好变量名相同而已。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="number">2</span>;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="built_in">console</span>.log(n);  <span class="comment">//此时这里输出2。</span></span><br><span class="line">         n = <span class="number">10</span>;</span><br><span class="line">         <span class="built_in">console</span>.log(n);  <span class="comment">//这里输出10</span></span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>为什么会出现这种情况呢？实际上上面第一段代码相当于下面的代码（等价的）。  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="number">2</span>;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="keyword">var</span> n; <span class="comment">// 变量的声明不管写在哪里，都会被提升到该作用域的最前面，注意赋值没有被提升。</span></span><br><span class="line">         <span class="built_in">console</span>.log(n); <span class="comment">// 这里应该是undefined</span></span><br><span class="line">         n = <span class="number">10</span>; <span class="comment">// 这里只是一个赋值动作</span></span><br><span class="line">         <span class="built_in">console</span>.log(n);  <span class="comment">// 毫无疑问等于10</span></span><br><span class="line">&#125;)()</span><br><span class="line"><span class="built_in">console</span>.log(n);  <span class="comment">// 这里输出是什么？ 这里输出是2，因为函数内的n是局部变量。</span></span><br></pre></td></tr></table></figure><p>如此便是对变量声明的提升，是JS执行时自动做的操作。  </p><h2 id="函数声明的提升"><a href="#函数声明的提升" class="headerlink" title="函数声明的提升"></a>函数声明的提升</h2><p>我们知道定义函数的方法也是有两种的。  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一种定义函数的方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"aaa"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 第二种定义函数的方法</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"bbb"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有什么不一样呢？我们看下面的代码。  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a(); <span class="comment">//这里会输出aaa。</span></span><br><span class="line">b(); <span class="comment">//这里会报错,为什么？</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"aaa"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 第二种定义函数的方法</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"bbb"</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>函数的定义应为也是会被提升的，所以上面的代码等价于：  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数的声明被提升</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"aaa"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有变量的声明被提升，赋值没有被提升。</span></span><br><span class="line"><span class="keyword">var</span> b;</span><br><span class="line">a(); <span class="comment">// 这里固然没问题。</span></span><br><span class="line">b(); <span class="comment">// 这里因为b只是声明了没被赋值(其实就是undefined),所以会报错：Uncaught TypeError: b is not a function</span></span><br><span class="line">b = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"bbb"</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="局部变量也会有提升"><a href="#局部变量也会有提升" class="headerlink" title="局部变量也会有提升"></a>局部变量也会有提升</h1><p>PS：提升不是指的局部变全局，记得了</p><p><strong>对象初始化过程不会赋值；<br>函数初始化过程并赋值；<br>this初始化过程并赋值。</strong></p><p>let const不会出现变量提升，同时不会被挂载window上，只会在[scope]中调用。</p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript基础 </tag>
            
            <tag> 变量和类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/2019/08/20/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/7-%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/git/"/>
      <url>/2019/08/20/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/7-%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/git/</url>
      
        <content type="html"><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">廖雪峰Git</a></p><h2 id="配置-ssh"><a href="#配置-ssh" class="headerlink" title="配置 ssh"></a>配置 ssh</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//配置全局账户邮箱，用于公司密钥</span></span><br><span class="line">$ git config --global user.name <span class="string">"name"</span>  </span><br><span class="line">$ git config --global user.email <span class="string">"email"</span> </span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"1email@company.com"</span> -f ~<span class="regexp">/.ssh/i</span>d_rsa </span><br><span class="line"><span class="comment">//将生成的 id_rsa.pub 内容赋值粘贴到gitLab上个人中心settings的ssh key</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置个人账户邮箱，用于私有密钥，在hexo-blog项目下配置</span></span><br><span class="line">$ git config user.name <span class="string">"name"</span>  </span><br><span class="line">$ git config user.email <span class="string">"email"</span> </span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"2email@github.com"</span> -f ~<span class="regexp">/.ssh/gi</span>thub_rsa</span><br><span class="line"><span class="comment">//将生成的 id_rsa.pub 内容赋值粘贴到gitLab上个人中心settings的ssh key</span></span><br></pre></td></tr></table></figure><p>用记事本打开 XXX_rsa.pub 将内容复制添加项目 git 地址下的 ssh 设置</p><h2 id="在-dev-分支开发"><a href="#在-dev-分支开发" class="headerlink" title="在 dev 分支开发"></a>在 dev 分支开发</h2><p>本地自己创建一个 develop 分支，然后关联远程分支，然后将本地 develop 分支将代码提交到远程分支 origin/develop</p><p><code>git pull add commit...</code> 之后 </p><p>如果没有看到你想要的分支,先获取所有分支:<br><code>$ git fetch</code></p><p>本地创建分支<br><code>$ git checkout -b develop</code></p><p>建立分支映射关系<br><code>$ git branch -u origin/develop develop</code></p><p>列出所有本地分支<br><code>$ git branch</code></p><p>列出所有远程分支<br><code>$ git branch -r</code></p><p>列出所有本地分支和远程分支<br><code>$ git branch -a</code></p><p>拉取远程代码<br><code>$ git pull</code></p><p>提交本地代码<br><code>$ git push</code></p><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><h3 id="refusing-to-merge-unrelated-histories-错误"><a href="#refusing-to-merge-unrelated-histories-错误" class="headerlink" title="refusing to merge unrelated histories 错误"></a>refusing to merge unrelated histories 错误</h3><p><a href="https://blog.csdn.net/u012145252/article/details/80628451" target="_blank" rel="noopener">Git报错-refusing to merge unrelated histories</a></p><p><strong>问题</strong>：本地 dev 分支拉取远程代码 <code>git pull</code> 报错 <code>refusing to merge unrelated histories</code></p><p><strong>原因</strong>：出现这个问题的最主要原因还是在于本地仓库和远程仓库实际上是独立的两个仓库。假如之前是直接 clone 的方式在本地建立起远程 github 仓库的克隆本地仓库就不会有这问题了。</p><p><strong>解决方式</strong>：在pull命令后紧接着使用<code>--allow-unrelated-history</code>选项来解决问题（该选项可以合并两个独立启动仓库的历史）。<br><code>git pull origin master(或者dev) --allow-unrelated-histories</code></p><h3 id="配置ssh失败，老是要输入账号密码"><a href="#配置ssh失败，老是要输入账号密码" class="headerlink" title="配置ssh失败，老是要输入账号密码"></a>配置ssh失败，老是要输入账号密码</h3><p>运行此命令 <code>git config --global credential.helper store</code></p><h3 id="git上清空账号密码缓存信息"><a href="#git上清空账号密码缓存信息" class="headerlink" title="git上清空账号密码缓存信息"></a>git上清空账号密码缓存信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git credential-manager uninstall</span><br></pre></td></tr></table></figure><h3 id="git-提交出现这个错误fatal-Unable-to-create-‘project-path-git-index-lock’-File-exists"><a href="#git-提交出现这个错误fatal-Unable-to-create-‘project-path-git-index-lock’-File-exists" class="headerlink" title="git 提交出现这个错误fatal: Unable to create ‘project_path/.git/index.lock’: File exists."></a>git 提交出现这个错误fatal: Unable to create ‘project_path/.git/index.lock’: File exists.</h3><p><strong>解决办法</strong><br><code>rm -f ./.git/index.lock</code></p><p><strong>on Windows</strong><br><code>del .git\index.lock</code></p><h3 id="vscode解决冲突"><a href="#vscode解决冲突" class="headerlink" title="vscode解决冲突"></a>vscode解决冲突</h3><p>需要先<code>add加号</code> <code>commit打勾号</code> 提交后，在点击左下角的<code>pull刷新</code>, 就会出现<code>merge changes</code>的文件目录，选择冲突文件，进行修改。</p><h3 id="拉取某一分支的代码"><a href="#拉取某一分支的代码" class="headerlink" title="拉取某一分支的代码"></a>拉取某一分支的代码</h3><p><code>git clone -b dev &lt;git链接&gt;</code></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端工程 </tag>
            
            <tag> 版本控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack配置插件</title>
      <link href="/2019/08/20/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/7-%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B/%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/webpack/%E9%85%8D%E7%BD%AE%E6%8F%92%E4%BB%B6/"/>
      <url>/2019/08/20/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/7-%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B/%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/webpack/%E9%85%8D%E7%BD%AE%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="extract-text-webpack-plugin"><a href="#extract-text-webpack-plugin" class="headerlink" title="extract-text-webpack-plugin"></a>extract-text-webpack-plugin</h2><p><strong>作用：</strong>抽离css样式, 防止将样式打包在js中引起页面样式加载错乱的现象</p><p><strong>适用：</strong>抽取 Less 或者 Sass</p><p><strong>用法：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">'extract-text-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">        use: ExtractTextPlugin.extract(&#123;</span><br><span class="line">          fallback: <span class="string">'style-loader'</span>,</span><br><span class="line">          use: [<span class="string">'css-loader'</span>, <span class="string">'sass-loader'</span>]</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> ExtractTextPlugin(<span class="string">'style.css'</span>)</span><br><span class="line">    <span class="comment">//if you want to pass in options, you can do so:</span></span><br><span class="line">    <span class="comment">//new ExtractTextPlugin(&#123;</span></span><br><span class="line">    <span class="comment">//  filename: 'style.css'</span></span><br><span class="line">    <span class="comment">//&#125;)</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>参考：</strong><br><a href="https://github.com/webpack-contrib/extract-text-webpack-plugin" target="_blank" rel="noopener">github地址</a><br><a href="https://www.jianshu.com/p/3395112d643e" target="_blank" rel="noopener">extract-text-webpack-plugin插件</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端工程 </tag>
            
            <tag> 项目构建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转发】vue数据变视图不变</title>
      <link href="/2019/08/15/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue%E6%95%B0%E6%8D%AE%E5%8F%98%E8%A7%86%E5%9B%BE%E4%B8%8D%E5%8F%98/"/>
      <url>/2019/08/15/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue%E6%95%B0%E6%8D%AE%E5%8F%98%E8%A7%86%E5%9B%BE%E4%B8%8D%E5%8F%98/</url>
      
        <content type="html"><![CDATA[<p>转发自 <a href="https://blog.csdn.net/my_atlassian_yhl/article/details/87364896" target="_blank" rel="noopener">解析Vue数据/数组对象改变视图不更新</a></p><h2 id="当我们数据发生变化，视图却没有变化时，三种方法"><a href="#当我们数据发生变化，视图却没有变化时，三种方法" class="headerlink" title="当我们数据发生变化，视图却没有变化时，三种方法"></a>当我们数据发生变化，视图却没有变化时，三种方法</h2><ol><li>使用$set<br>此时我们需要知道<code>Vue.set()</code>需要哪些参数，官方API：<code>Vue.set()</code></li></ol><p>调用方法：<code>Vue.set( target, key, value )</code></p><ul><li><code>target</code>：要更改的数据源(可以是对象或者数组)</li><li><code>key</code>：要更改的具体数据</li><li><code>value</code>：重新赋的值</li></ul><p><code>this.$set(this.arr[key], &#39;title&#39;, &#39;1&#39;)</code><br>这种方法就可以进行视图刷新</p><ol start="2"><li>使用<code>$forceUpdate()</code><br>数据层次太多，<code>render</code>函数没有自动更新，需手动强制刷新</li></ol><p><code>this.$forceUpdate()</code> 就是强制刷新视图 很粗暴</p><ol start="3"><li><p>通过改变data来触发新的渲染<br><code>&lt;div style=&quot;display:none;&quot;&gt; &lt;/div&gt;</code></p><p>在你操作数据的方法下加以下这段就可以达到目的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">this</span>.is_show = !<span class="keyword">this</span>.is_show</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h2 id="解析-Vue2-现在是通过Object-defineProerty来进行数据的双向数据绑定"><a href="#解析-Vue2-现在是通过Object-defineProerty来进行数据的双向数据绑定" class="headerlink" title="解析: Vue2.+ 现在是通过Object.defineProerty来进行数据的双向数据绑定"></a>解析: Vue2.+ 现在是通过<code>Object.defineProerty</code>来进行数据的双向数据绑定</h2><p><code>Object.defineProerty</code>目前主要有三个问题</p><ul><li>不能监听数组的变化</li><li>必须遍历对象的每个属性</li><li>必须深层遍历嵌套的对象</li><li>咱们的这种视图不能更新的问题是出在数组上比如<code>this.arr[key].title = &#39;1&#39;</code></li></ul><p>这种赋值就有可能会存在这种问题</p><p>就比如在我们进行<code>watch</code>的时候 , 需要加上<code>deep</code>为<code>true</code>才可以解析对象是否变化</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line"> obj: &#123;</span><br><span class="line">  handle: (n) &#123;</span><br><span class="line">    <span class="comment">// 新值</span></span><br><span class="line">  &#125;,</span><br><span class="line">  deep: <span class="literal">true</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在即将尤大大Vue3.0的时代里，<code>Object.defineProerty</code>即将被<code>Proxy</code>淘汰</p></blockquote><blockquote><p>没错就是<code>ES6</code>新增的<code>Proxy</code></p></blockquote><blockquote><p><code>Proxy</code> 对象用于定义基本操作的自定义行为（如属性查找，赋值，枚举，函数调用等）</p></blockquote><p><strong>优势</strong>:<code>Proxy</code> 的第二个参数可以有 13 种拦截方法，比 <code>Object.defineProperty()</code> 要更加丰富,Proxy 作为新标准受到浏览器厂商的重点关注和性能优化，相比之下 <code>Object.defineProperty()</code> 是一个已有的老方法。</p><p><strong>劣势</strong>:<code>Proxy</code> 的兼容性不如 <code>Object.defineProperty()</code> (<code>caniuse</code> 的数据表明，QQ 浏览器和百度浏览器并不支持 Proxy，这对国内移动开发来说估计无法接受，但两者都支持 <code>Object.defineProperty()</code>),不能使用 <code>polyfill</code> 来处理兼容性 </p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架和类库 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue饿了么实战笔记</title>
      <link href="/2019/08/15/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue%E9%A5%BF%E4%BA%86%E4%B9%88%E5%AE%9E%E6%88%98%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/08/15/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue%E9%A5%BF%E4%BA%86%E4%B9%88%E5%AE%9E%E6%88%98%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/ustbhuangyi/vue-sell" target="_blank" rel="noopener">代码git地址</a></p><h1 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h1><h2 id="IcoMoon"><a href="#IcoMoon" class="headerlink" title="IcoMoon"></a>IcoMoon</h2><p><strong>网址</strong>：<a href="https://icomoon.io/" target="_blank" rel="noopener">https://icomoon.io/</a><br><strong>参考链接</strong>：<a href="https://blog.csdn.net/github_38313789/article/details/81368696" target="_blank" rel="noopener">https://blog.csdn.net/github_38313789/article/details/81368696</a><br><strong>用法</strong>：上传<code>icon</code>，生成字体文件，将<code>fonts</code>文件夹和<code>style.css</code>文件复制到项目中，然后引入<code>icon</code>的<code>class</code>即可调用</p><h2 id="mock"><a href="#mock" class="headerlink" title="mock"></a>mock</h2><p><strong>网址</strong>：<a href="http://mockjs.com/" target="_blank" rel="noopener">http://mockjs.com/</a><br><strong>用途</strong>：模拟后台数据</p><h2 id="草料网"><a href="#草料网" class="headerlink" title="草料网"></a>草料网</h2><p><strong>网址</strong>：<a href="http://cli.im" target="_blank" rel="noopener">http://cli.im</a></p><p><strong>用途</strong>：在手机上查看页面，在线测试</p><p><strong>方法</strong>：开启本地项目服务，然后将 <code>localhost:8080/#/goods</code> 中的 <code>localhost</code> 改为本电脑的IP地址（通过 <code>ipconfig</code> 查看），然后将修改后的网址放到草料网上，生成二维码，即可查看。</p><p><strong>注意</strong>：保证手机和电脑连接在同一个局域网</p><hr><h1 id="样式实现"><a href="#样式实现" class="headerlink" title="样式实现"></a>样式实现</h1><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li><p>两个 <code>inline-block</code> 之间存在间隙，在父级 <code>node</code> 设置 <code>font-size: 0</code> 或者删除两个 <code>&lt;span /&gt;</code> 之间的换行 ，在当前两个 <code>node</code> 的 <code>font-size</code> 设为正常字体;</p></li><li><p>一个图片，一个文字在同一行时，存在垂直方向对不齐，则在设图片样式 <code>vertical-align: top</code>；</p></li><li><p>背景图实现高斯模糊，添加一个 <code>div &gt; img</code> 实现 <code>position: absolute; top: 0; left: 0; width: 100%; height: 100%; z-index: -1; filter: blur(10px)</code>，然后给上一图层的div设置背景颜色为 <code>rgba(7,17,27,0.5)</code>；</p></li><li><p>弹出商家优惠信息页面，使用 <code>sticky-footer</code> 实现<br><a href="https://www.cnblogs.com/shicongbuct/p/6487122.html" target="_blank" rel="noopener">sticky-footer的三种解决方案</a><br><a href="https://www.jianshu.com/p/3853024d5838" target="_blank" rel="noopener">CSS经典布局之Sticky footer布局</a><br><a href="https://www.w3cplus.com/css3/css-secrets/sticky-footers.html" target="_blank" rel="noopener">CSS秘密花园： Sticky footers</a></p></li><li><p>flex布局<br><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">Flex 布局教程：语法篇——阮一峰</a><br><a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="noopener">Flex 布局教程：实例篇——阮一峰</a></p></li></ol><p><strong>flex: flex-grow、flex-shrink 、flex-basis缩写</strong><br>默认值为0 1 auto<br>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。<br>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。<br>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。</p><ol start="6"><li>vue transition渐变样式<br><a href="https://cn.vuejs.org/v2/guide/transitions.html" target="_blank" rel="noopener">进入/离开 &amp; 列表过渡</a><blockquote><p>查看王世豪的vue模块的第二个作业todolist的添加删除的样式渐变</p></blockquote></li></ol><p>添加小球滚动渐变显示【7-17视频】<br>小球抛物线进入购物车【7-18至7-20视频】<br>底部弹窗动画【7-21至7-24视频】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">"buttonmove"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">v-if</span>=<span class="string">"food.count"</span> <span class="attr">class</span>=<span class="string">"icon-remove_circle_outline"</span> <span class="attr">v-on:click.stop</span>=<span class="string">"removefood(food, $event)"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.buttonmove-enter-active</span>, <span class="selector-class">.buttonmove-leave-active</span></span><br><span class="line">     <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> 0<span class="selector-class">.4s</span> <span class="selector-tag">linear</span></span><br><span class="line">   <span class="selector-class">.buttonmove-enter</span>, <span class="selector-class">.buttonmove-leave-to</span></span><br><span class="line">     <span class="selector-tag">transform</span>: <span class="selector-tag">translate3d</span>(24<span class="selector-tag">px</span>, 0, 0) <span class="selector-tag">rotateZ</span>(0<span class="selector-tag">deg</span>)</span><br><span class="line">     <span class="selector-tag">opacity</span>: 0</span><br><span class="line">   <span class="selector-class">.buttonmove-leave</span>, <span class="selector-class">.buttonmove-enter-to</span></span><br><span class="line">     <span class="selector-tag">transform</span>: <span class="selector-tag">translate3d</span>(0, 0, 0) <span class="selector-tag">rotateZ</span>(180<span class="selector-tag">deg</span>)</span><br><span class="line">     <span class="selector-tag">opacity</span>: 1</span><br><span class="line">   <span class="selector-class">.remove</span></span><br><span class="line">     <span class="selector-tag">display</span>: <span class="selector-tag">inline-block</span></span><br><span class="line">     <span class="selector-tag">width</span>: 24<span class="selector-tag">px</span></span><br><span class="line">     <span class="selector-tag">height</span>: 24<span class="selector-tag">px</span></span><br><span class="line">   <span class="selector-class">.icon-remove_circle_outline</span>, <span class="selector-class">.icon-add_circle</span></span><br><span class="line">     <span class="selector-tag">display</span>: <span class="selector-tag">inline-block</span></span><br><span class="line">     <span class="selector-tag">margin-top</span>: <span class="selector-tag">-6px</span></span><br><span class="line">     <span class="selector-tag">padding</span>: 6<span class="selector-tag">px</span></span><br><span class="line">     <span class="selector-tag">vertical-align</span>: <span class="selector-tag">top</span></span><br><span class="line">     <span class="selector-tag">line-height</span>: 24<span class="selector-tag">px</span></span><br><span class="line">     <span class="selector-tag">font-size</span>: 24<span class="selector-tag">px</span></span><br><span class="line">     <span class="selector-tag">cursor</span>: <span class="selector-tag">pointer</span></span><br></pre></td></tr></table></figure><ol start="7"><li><p>backdrop-filter实现背景高斯模糊<br><a href="https://blog.csdn.net/qq_36770641/article/details/79879572" target="_blank" rel="noopener">CSS｜backdrop-filter 和filter 写出高斯模糊效果 以及两者区别</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/backdrop-filter" target="_blank" rel="noopener">backdrop-filter</a><br><a href="https://www.cnblogs.com/lqcdsns/p/6305740.html" target="_blank" rel="noopener">css滤镜模糊效果filter和backdrop-filter</a><br><a href="https://juejin.im/post/58d3662f44d90400685bc500" target="_blank" rel="noopener">前端 – 页面滤镜效果及高斯模糊效果</a></p></li><li><p>Vue.nextTick( [callback, context] )</p></li></ol><p><strong>作用：</strong>在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改数据</span></span><br><span class="line">vm.msg = <span class="string">'Hello'</span></span><br><span class="line"><span class="comment">// DOM 还没有更新</span></span><br><span class="line">Vue.nextTick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// DOM 更新了</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 作为一个 Promise 使用 (2.1.0 起新增，详见接下来的提示)</span></span><br><span class="line">Vue.nextTick()</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// DOM 更新了</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 脚手架中使用</span></span><br><span class="line"><span class="keyword">this</span>.nextTick(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">   <span class="comment">// Dom更新了</span></span><br><span class="line">   <span class="comment">// 可更改滚动样式</span></span><br><span class="line">   <span class="comment">//  </span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="9"><li>在移动端下点击正常，在web下点击会出现被点击两次<br>因为web端存在原生点击事件和自己派发点击事件，造成重复点击事件被执行<br>添加以下代码，阻止原生点击事件的执行</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原生事件没有 _constructed 事件</span></span><br><span class="line"><span class="comment">// 自定义派发事件 _constructed 为 true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!event._constructed)&#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="10"><li><p>dom元素滚动到获取到的N个节点中的某一个</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">scrollto: <span class="function"><span class="keyword">function</span> (<span class="params">index, event</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (!event._constructed) &#123;</span><br><span class="line">     <span class="keyword">return</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="keyword">const</span> foods = <span class="keyword">this</span>.$refs.fooditem</span><br><span class="line">     <span class="keyword">let</span> target = foods[index]</span><br><span class="line">     <span class="keyword">this</span>.scrollFood.scrollToElement(target, <span class="number">400</span>) <span class="comment">// 滚动到第index个元素，滚动时间400</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure></li><li><p>组件接收属性规范写法</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">props:&#123;</span><br><span class="line">    data:&#123;</span><br><span class="line">        type: <span class="built_in">Object</span>,</span><br><span class="line">        <span class="comment">// 对象或数组默认值必须从一个工厂函数获取</span></span><br><span class="line">        <span class="keyword">default</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123; <span class="attr">message</span>: <span class="string">'hello'</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体参考：<a href="https://cn.vuejs.org/v2/guide/components-props.html" target="_blank" rel="noopener">props</a></p><ol start="12"><li>修改vue组件的props属性对象的值</li></ol><p><strong>问题</strong>：如果想要修改vue组件的某个props属性对象的值，同时保证监听该属性值变化，并触发视图更新。</p><p><strong>解决</strong>： <a href="https://cn.vuejs.org/v2/api/#Vue-set" target="_blank" rel="noopener">Vue.set( target, propertyName/index, value )</a></p><ul><li><p>参数：</p><p>{Object | Array} target<br>{string | number} propertyName/index<br>{any} value<br>返回值：设置的值。</p></li><li><p>用法：</p><p>向响应式对象中添加一个属性，并确保这个新属性同样是响应式的，且触发视图更新。它必须用于向响应式对象上添加新属性，因为 Vue 无法探测普通的新增属性 (比如 <code>this.myObject.newProperty = &#39;hi&#39;</code>)</p></li><li><p>正确用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line">...</span><br><span class="line">  Vue.set(<span class="keyword">this</span>.food, <span class="string">'count'</span>, <span class="number">1</span>);</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>注意：对象不能是 Vue 实例，或者 Vue 实例的根数据对象。</p></blockquote><ol start="13"><li>规范代码<br>组件方法method()中的函数，两种命名方法：</li></ol><ul><li>下划线开头 _drop : 被外部调用（比如被父组件或者子组件调用），为私有方法</li><li>字母开头 drop : 可能会被外部调用</li></ul><ol start="14"><li>padding-top:100%<br>当设置 padding-top 是相对盒子的 width 去计算的百分比，所以此盒子看起来就是宽高相等的容器，</li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.image-header</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">100%</span>；</span><br><span class="line">  .image&#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架和类库 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动端适配links</title>
      <link href="/2019/08/15/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/5-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8Dlinks/"/>
      <url>/2019/08/15/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/5-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8Dlinks/</url>
      
        <content type="html"><![CDATA[<p><strong>参考链接</strong></p><p><a href="https://juejin.im/post/5cddf289f265da038f77696c" target="_blank" rel="noopener">关于移动端适配，你必须要知道的</a> =&gt; 重点推荐！！</p><p><a href="https://www.w3cplus.com/css/viewports.html" target="_blank" rel="noopener">viewports剖析</a></p><p><a href="https://www.jianshu.com/p/1f1b23f8348f" target="_blank" rel="noopener">如何在Vue项目中使用vw实现移动端适配(转)</a></p><p><a href="https://www.w3cplus.com/css/vw-for-layout.html" target="_blank" rel="noopener">再聊移动端页面的适配</a>  阅读码：475709</p><p><a href="https://www.w3cplus.com/mobile/lib-flexible-for-html5-layout.html" target="_blank" rel="noopener">使用Flexible实现手淘H5页面的终端适配</a> 阅读码：487741</p><p><a href="https://www.cnblogs.com/changningios/p/6481135.html" target="_blank" rel="noopener">高清屏概念解析与检测设备像素比的方法 #29</a></p><p><a href="https://www.cnblogs.com/changningios/p/6486610.html" target="_blank" rel="noopener">移动端兼容性问题解决方案（一）</a></p><p><a href="https://www.cnblogs.com/changningios/p/6486694.html" target="_blank" rel="noopener">移动端兼容性问题解决方案（二）</a></p><p><a href="https://www.cnblogs.com/changningios/p/6486705.html" target="_blank" rel="noopener">移动端兼容性问题解决方案（三）</a></p><p><a href="https://www.jianshu.com/p/cb2d8ca8cff2" target="_blank" rel="noopener">移动端常见的一些兼容性问题</a></p><p><a href="https://juejin.im/post/5ce764a2f265da1b8c19645a" target="_blank" rel="noopener">2019 再聊移动端 300ms 延迟及 fastClick 原理解析</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运行环境 </tag>
            
            <tag> 移动端适配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转发】使用Flexible实现手淘H5页面的终端适配</title>
      <link href="/2019/08/15/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/5-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/%E4%BD%BF%E7%94%A8Flexible%E5%AE%9E%E7%8E%B0%E6%89%8B%E6%B7%98H5%E9%A1%B5%E9%9D%A2%E7%9A%84%E7%BB%88%E7%AB%AF%E9%80%82%E9%85%8D/"/>
      <url>/2019/08/15/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/5-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/%E4%BD%BF%E7%94%A8Flexible%E5%AE%9E%E7%8E%B0%E6%89%8B%E6%B7%98H5%E9%A1%B5%E9%9D%A2%E7%9A%84%E7%BB%88%E7%AB%AF%E9%80%82%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<p>转发自 <a href="https://www.w3cplus.com/mobile/lib-flexible-for-html5-layout.html" target="_blank" rel="noopener">使用Flexible实现手淘H5页面的终端适配</a></p><h1 id="使用Flexible实现手淘H5页面的终端适配"><a href="#使用Flexible实现手淘H5页面的终端适配" class="headerlink" title="使用Flexible实现手淘H5页面的终端适配"></a>使用Flexible实现手淘H5页面的终端适配</h1><p><a href="https://www.w3cplus.com/blog/tags/525.html" target="_blank" rel="noopener">双11前端技术连载</a></p><p><a href="https://www.w3cplus.com/blog/tags/180.html" target="_blank" rel="noopener">Layout</a></p><p><a href="https://www.w3cplus.com/mobile" target="_blank" rel="noopener">mobile</a></p><p><a href="https://www.w3cplus.com/blog/tags/686.html" target="_blank" rel="noopener">会员专栏</a></p><p>曾几何时为了兼容IE低版本浏览器而头痛，以为到Mobile时代可以跟这些麻烦说拜拜。可没想到到了移动时代，为了处理各终端的适配而乱了手脚。对于混迹各社区的偶，时常发现大家拿手机淘宝的H5页面做讨论——<strong>手淘的H5页面是如何实现多终端的适配</strong>？</p><p>那么趁此<strong>Amfe阿里无线前端团队双11技术连载</strong>之际，用一个实战案例来告诉大家，手淘的H5页面是如何实现多终端适配的，希望这篇文章对大家在Mobile的世界中能过得更轻松。</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>拿一个双11的Mobile页面来做案例，比如你实现一个类似下图的一个H5页面：</p><p><img src="http://www.w3cplus.com/sites/default/files/blogs/2015/1511/rem-1.jpg" alt="Flexible实现手淘H5页面的终端适配"></p><p>目标很清晰，就是做一个这样的H5页面。</p><h3 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a><a href="http://huodong.m.taobao.com/act/yibo.html" target="_blank" rel="noopener">DEMO</a></h3><p>请用手机扫下面的二维码</p><p><a href="http://huodong.m.taobao.com/act/yibo.html" target="_blank" rel="noopener"><img src="http://www.w3cplus.com/sites/default/files/blogs/2015/1511/yiboqr.png" alt="DEMO"></a></p><h2 id="痛点"><a href="#痛点" class="headerlink" title="痛点"></a>痛点</h2><p>虽然H5的页面与PC的Web页面相比简单了不少，但让我们头痛的事情是要想尽办法让页面能适配众多不同的终端设备。看看下图你就会知道，这是多么痛苦的一件事情：</p><p><a href="https://design.google.com/devices/" target="_blank" rel="noopener"><img src="http://www.w3cplus.com/sites/default/files/blogs/2015/1511/rem-4.png" alt="Flexible实现手淘H5页面的终端适配"></a></p><p>点击<a href="https://design.google.com/devices/" target="_blank" rel="noopener">这里</a>查看更多终端设备的参数。</p><p>再来看看手淘H5要适配的终端设备数据：</p><p><img src="http://www.w3cplus.com/sites/default/files/blogs/2015/1511/rem-7.png" alt="Flexible实现手淘H5页面的终端适配"></p><p>看到这些数据，是否死的心都有了，或者说为此捏了一把汗出来。</p><h2 id="手淘团队适配协作模式"><a href="#手淘团队适配协作模式" class="headerlink" title="手淘团队适配协作模式"></a>手淘团队适配协作模式</h2><p>早期移动端开发，对于终端设备适配问题只属于Android系列，只不过很多设计师常常忽略Android适配问题，只出一套iOS平台设计稿。但随着iPhone6，iPhone6+的出现，从此终端适配问题不再是Android系列了，也从这个时候让移动端适配全面进入到“杂屏”时代。</p><p><img src="http://www.w3cplus.com/sites/default/files/blogs/2015/1511/rem-11.png" alt="Flexible实现手淘H5页面的终端适配"></p><p><em>上图来自于paintcodeapp.com</em></p><p>为了应对这多么的终端设备，设计师和前端开发之间又应该采用什么协作模式？或许大家对此也非常感兴趣。</p><p>而整个手淘设计师和前端开发的适配协作基本思路是：</p><ul><li>选择一种尺寸作为设计和开发基准</li><li>定义一套适配规则，自动适配剩下的两种尺寸(其实不仅这两种，你懂的)</li><li>特殊适配效果给出设计效果</li></ul><p>还是上一张图吧，因为一图胜过千言万语：</p><p><img src="http://www.w3cplus.com/sites/default/files/blogs/2015/1511/rem-6.jpg" alt="Flexible实现手淘H5页面的终端适配"></p><p>在此也不做更多的阐述。在手淘的设计师和前端开发协作过程中：<strong>手淘设计师常选择iPhone6作为基准设计尺寸，交付给前端的设计尺寸是按750px * 1334px为准(高度会随着内容多少而改变)。前端开发人员通过一套适配规则自动适配到其他的尺寸。</strong></p><p>根据上面所说的，设计师给我们的设计图是一个<code>750px * 1600px</code>的页面：</p><p><img src="http://www.w3cplus.com/sites/default/files/blogs/2015/1511/rem-3.jpg" alt="Flexible实现手淘H5页面的终端适配"></p><h2 id="前端开发完成终端适配方案"><a href="#前端开发完成终端适配方案" class="headerlink" title="前端开发完成终端适配方案"></a>前端开发完成终端适配方案</h2><p>拿到设计师给的设计图之后，剩下的事情是前端开发人员的事了。而手淘经过多年的摸索和实战，总结了一套移动端适配的方案——<strong>flexible方案</strong>。</p><p>这种方案具体在实际开发中如何使用，暂时先卖个关子，在继续详细的开发实施之前，我们要先了解一些基本概念。</p><h3 id="一些基本概念"><a href="#一些基本概念" class="headerlink" title="一些基本概念"></a>一些基本概念</h3><p>在进行具体实战之前，首先得了解下面这些基本概念(术语)：</p><h4 id="视窗-viewport"><a href="#视窗-viewport" class="headerlink" title="视窗 viewport"></a>视窗 viewport</h4><p>简单的理解，viewport是严格等于浏览器的窗口。在桌面浏览器中，viewport就是浏览器窗口的宽度高度。但在移动端设备上就有点复杂。</p><p>移动端的viewport太窄，为了能更好为CSS布局服务，所以提供了两个viewport:虚拟的viewportvisualviewport和布局的viewportlayoutviewport。</p><p>George Cummins在Stack Overflow上<a href="http://stackoverflow.com/questions/6333927/difference-between-visual-viewport-and-layout-viewport" target="_blank" rel="noopener">对这两个基本概念做了详细的解释</a>。</p><p>而事实上viewport是一个很复杂的知识点，上面的简单描述可能无法帮助你更好的理解viewport，而你又想对此做更深的了解，可以阅读<a href="http://www.w3cplus.com/css/viewports.html" target="_blank" rel="noopener">PPK写的相关教程</a>。</p><h4 id="物理像素-physical-pixel"><a href="#物理像素-physical-pixel" class="headerlink" title="物理像素(physical pixel)"></a>物理像素(physical pixel)</h4><p>物理像素又被称为设备像素，他是显示设备中一个最微小的物理部件。每个像素可以根据操作系统设置自己的颜色和亮度。正是这些设备像素的微小距离欺骗了我们肉眼看到的图像效果。</p><p><img src="http://www.w3cplus.com/sites/default/files/blogs/201212/retina-web-1.jpg" alt="Flexible实现手淘H5页面的终端适配"></p><h4 id="设备独立像素-density-independent-pixel"><a href="#设备独立像素-density-independent-pixel" class="headerlink" title="设备独立像素(density-independent pixel)"></a>设备独立像素(density-independent pixel)</h4><p>设备独立像素也称为密度无关像素，可以认为是计算机坐标系统中的一个点，这个点代表一个可以由程序使用的虚拟像素(比如说CSS像素)，然后由相关系统转换为物理像素。</p><h4 id="CSS像素"><a href="#CSS像素" class="headerlink" title="CSS像素"></a>CSS像素</h4><p>CSS像素是一个抽像的单位，主要使用在浏览器上，用来精确度量Web页面上的内容。一般情况之下，CSS像素称为与设备无关的像素(device-independent pixel)，简称DIPs。</p><h4 id="屏幕密度"><a href="#屏幕密度" class="headerlink" title="屏幕密度"></a>屏幕密度</h4><p>屏幕密度是指一个设备表面上存在的像素数量，它通常以每英寸有多少像素来计算(PPI)。</p><h4 id="设备像素比-device-pixel-ratio"><a href="#设备像素比-device-pixel-ratio" class="headerlink" title="设备像素比(device pixel ratio)"></a>设备像素比(device pixel ratio)</h4><p>设备像素比简称为dpr，其定义了物理像素和设备独立像素的对应关系。它的值可以按下面的公式计算得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">设备像素比 ＝ 物理像素 / 设备独立像素</span><br></pre></td></tr></table></figure><p>在JavaScript中，可以通过<code>window.devicePixelRatio</code>获取到当前设备的dpr。而在CSS中，可以通过<code>-webkit-device-pixel-ratio</code>，<code>-webkit-min-device-pixel-ratio</code>和 <code>-webkit-max-device-pixel-ratio</code>进行媒体查询，对不同dpr的设备，做一些样式适配(这里只针对webkit内核的浏览器和webview)。</p><p>dip或dp,（device independent pixels，设备独立像素）与屏幕密度有关。dip可以用来辅助区分视网膜设备还是非视网膜设备。</p><p>缩合上述的几个概念，用一张图来解释：</p><p><img src="http://www.w3cplus.com/sites/default/files/blogs/201212/retina-web-3.jpg" alt="Flexible实现手淘H5页面的终端适配"></p><p>众所周知，iPhone6的设备宽度和高度为<code>375pt * 667pt</code>,可以理解为设备的独立像素；而其dpr为<code>2</code>，根据上面公式，我们可以很轻松得知其物理像素为<code>750pt * 1334pt</code>。</p><p>如下图所示，某元素的CSS样式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">width: 2px;</span><br><span class="line">height: 2px；</span><br></pre></td></tr></table></figure><p>在不同的屏幕上，CSS像素所呈现的物理尺寸是一致的，而不同的是CSS像素所对应的物理像素具数是不一致的。在普通屏幕下<code>1</code>个CSS像素对应<code>1</code>个物理像素，而在Retina屏幕下，<code>1</code>个CSS像素对应的却是<code>4</code>个物理像素。</p><p>有关于更多的介绍可以<a href="http://www.w3cplus.com/css/towards-retina-web.html" target="_blank" rel="noopener">点击这里</a>详细了解。</p><p>看到这里，你能感觉到，在移动端时代屏幕适配除了Layout之外，还要考虑到图片的适配，因为其直接影响到页面显示质量，对于如何实现图片适配，再此不做过多详细阐述。这里盗用了<a href="http://www.nangongruiyang.com/" target="_blank" rel="noopener">@南宮瑞揚</a>根据<a href="http://mir.aculo.us/2012/06/26/flowchart-how-to-retinafy-your-website/" target="_blank" rel="noopener">mir.aculo.us</a>翻译的一张信息图：</p><p><img src="http://www.w3cplus.com/sites/default/files/blogs/201212/retina-web-10.jpg" alt="Flexible实现手淘H5页面的终端适配"></p><h4 id="meta标签"><a href="#meta标签" class="headerlink" title="meta标签"></a>meta标签</h4><meta>标签有很多种，而这里要着重说的是viewport的meta标签，其主要用来告诉浏览器如何规范的渲染Web页面，而你则需要告诉它视窗有多大。在开发移动端页面，我们需要设置meta标签如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;&gt;</span><br></pre></td></tr></table></figure><p>代码以显示网页的屏幕宽度定义了视窗宽度。网页的比例和最大比例被设置为100%。</p><p>留个悬念，因为后面的解决方案中需要重度依赖<code>meta</code>标签。</p><h4 id="CSS单位rem"><a href="#CSS单位rem" class="headerlink" title="CSS单位rem"></a>CSS单位rem</h4><p>在<a href="http://www.w3.org/TR/css3-values/#rem-unit" target="_blank" rel="noopener">W3C</a>规范中是这样描述<code>rem</code>的:</p><blockquote><p>font size of the root element.</p></blockquote><p>简单的理解，<code>rem</code>就是相对于根元素<code>&lt;html&gt;</code>的<code>font-size</code>来做计算。而我们的方案中使用<code>rem</code>单位，是能轻易的根据<code>&lt;html&gt;</code>的<code>font-size</code>计算出元素的盒模型大小。而这个特色对我们来说是特别的有益处。</p><h3 id="前端实现方案"><a href="#前端实现方案" class="headerlink" title="前端实现方案"></a>前端实现方案</h3><p>了解了前面一些相关概念之后，接下来我们来看实际解决方案。在整个手淘团队，我们有一个名叫<a href="https://github.com/amfe/lib-flexible" target="_blank" rel="noopener"><code>lib-flexible</code></a>的库，而这个库就是用来解决H5页面终端适配的。</p><h4 id="lib-flexible是什么？"><a href="#lib-flexible是什么？" class="headerlink" title="lib-flexible是什么？"></a>lib-flexible是什么？</h4><p><a href="https://github.com/amfe/lib-flexible" target="_blank" rel="noopener"><code>lib-flexible</code></a>是一个制作H5适配的开源库，可以<a href="https://github.com/amfe/lib-flexible/archive/master.zip" target="_blank" rel="noopener">点击这里</a>下载相关文件，获取需要的JavaScript和CSS文件。</p><p>当然你可以直接使用阿里CDN：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;http://g.tbcdn.cn/mtb/lib-flexible/&#123;&#123;version&#125;&#125;/??flexible_css.js,flexible.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>将代码中的<code></code>换成对应的版本号<code>0.3.4</code>。</p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p><a href="https://github.com/amfe/lib-flexible" target="_blank" rel="noopener"><code>lib-flexible</code></a>库的使用方法非常的简单，只需要在Web页面的<code>&lt;head&gt;&lt;/head&gt;</code>中添加对应的<code>flexible_css.js,flexible.js</code>文件：</p><p>第一种方法是将文件下载到你的项目中，然后通过相对路径添加:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;build/flexible_css.debug.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;build/flexible.debug.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>或者直接加载阿里CDN的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;http://g.tbcdn.cn/mtb/lib-flexible/0.3.4/??flexible_css.js,flexible.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>另外强烈建议对JS做<strong>内联处理</strong>，在所有资源加载之前执行这个JS。执行这个JS后，会在<code>&lt;html&gt;</code>元素上增加一个<code>data-dpr</code>属性，以及一个<code>font-size</code>样式。JS会根据不同的设备添加不同的<code>data-dpr</code>值，比如说<code>2</code>或者<code>3</code>，同时会给<code>html</code>加上对应的<code>font-size</code>的值，比如说<code>75px</code>。</p><p>如此一来，页面中的元素，都可以通过<code>rem</code>单位来设置。他们会根据<code>html</code>元素的<code>font-size</code>值做相应的计算，从而实现屏幕的适配效果。</p><p>除此之外，在引入<a href="https://github.com/amfe/lib-flexible" target="_blank" rel="noopener"><code>lib-flexible</code></a>需要执行的JS之前，可以手动设置<code>meta</code>来控制<code>dpr</code>值，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;flexible&quot; content=&quot;initial-dpr=2&quot; /&gt;</span><br></pre></td></tr></table></figure><p>其中<code>initial-dpr</code>会把<code>dpr</code>强制设置为给定的值。如果手动设置了<code>dpr</code>之后，不管设备是多少的<code>dpr</code>，都会强制认为其<code>dpr</code>是你设置的值。在此不建议手动强制设置<code>dpr</code>，因为在Flexible中，只对iOS设备进行<code>dpr</code>的判断，对于Android系列，始终认为其<code>dpr</code>为<code>1</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">if (!dpr &amp;&amp; !scale) &#123;</span><br><span class="line">    var isAndroid = win.navigator.appVersion.match(/android/gi);</span><br><span class="line">    var isIPhone = win.navigator.appVersion.match(/iphone/gi);</span><br><span class="line">    var devicePixelRatio = win.devicePixelRatio;</span><br><span class="line">    if (isIPhone) &#123;</span><br><span class="line">        // iOS下，对于2和3的屏，用2倍的方案，其余的用1倍方案</span><br><span class="line">        if (devicePixelRatio &gt;= 3 &amp;&amp; (!dpr || dpr &gt;= 3)) &#123;                </span><br><span class="line">            dpr = 3;</span><br><span class="line">        &#125; else if (devicePixelRatio &gt;= 2 &amp;&amp; (!dpr || dpr &gt;= 2))&#123;</span><br><span class="line">            dpr = 2;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            dpr = 1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // 其他设备下，仍旧使用1倍的方案</span><br><span class="line">        dpr = 1;</span><br><span class="line">    &#125;</span><br><span class="line">    scale = 1 / dpr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="flexible的实质"><a href="#flexible的实质" class="headerlink" title="flexible的实质"></a>flexible的实质</h4><p><code>flexible</code>实际上就是能过JS来动态改写<code>meta</code>标签，代码类似这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var metaEl = doc.createElement(&apos;meta&apos;);</span><br><span class="line">var scale = isRetina ? 0.5:1;</span><br><span class="line">metaEl.setAttribute(&apos;name&apos;, &apos;viewport&apos;);</span><br><span class="line">metaEl.setAttribute(&apos;content&apos;, &apos;initial-scale=&apos; + scale + &apos;, maximum-scale=&apos; + scale + &apos;, minimum-scale=&apos; + scale + &apos;, user-scalable=no&apos;);</span><br><span class="line">if (docEl.firstElementChild) &#123;</span><br><span class="line">    document.documentElement.firstElementChild.appendChild(metaEl);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    var wrap = doc.createElement(&apos;div&apos;);</span><br><span class="line">    wrap.appendChild(metaEl);</span><br><span class="line">    documen.write(wrap.innerHTML);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>事实上他做了这几样事情：</p><ul><li>动态改写<code>&lt;meta&gt;</code>标签</li><li>给<code>&lt;html&gt;</code>元素添加<code>data-dpr</code>属性，并且动态改写<code>data-dpr</code>的值</li><li>给<code>&lt;html&gt;</code>元素添加<code>font-size</code>属性，并且动态改写<code>font-size</code>的值</li></ul><h2 id="案例实战"><a href="#案例实战" class="headerlink" title="案例实战"></a>案例实战</h2><p>了解Flexible相关的知识之后，咱们回到文章开头。我们的目标是制作一个适配各终端的H5页面。别的不多说，动手才能丰衣足食。</p><h3 id="创建HTML模板"><a href="#创建HTML模板" class="headerlink" title="创建HTML模板"></a>创建HTML模板</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">        &lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</span><br><span class="line">        &lt;meta content=&quot;yes&quot; name=&quot;apple-touch-fullscreen&quot;&gt;</span><br><span class="line">        &lt;meta content=&quot;telephone=no,email=no&quot; name=&quot;format-detection&quot;&gt;</span><br><span class="line">        &lt;script src=&quot;http://g.tbcdn.cn/mtb/lib-flexible/0.3.4/??flexible_css.js,flexible.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">        &lt;link rel=&quot;apple-touch-icon&quot; href=&quot;favicon.png&quot;&gt;</span><br><span class="line">        &lt;link rel=&quot;Shortcut Icon&quot; href=&quot;favicon.png&quot; type=&quot;image/x-icon&quot;&gt;</span><br><span class="line">        &lt;title&gt;再来一波&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;!-- 页面结构写在这里 --&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>正如前面所介绍的一样，首先加载了Flexible所需的配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;http://g.tbcdn.cn/mtb/lib-flexible/0.3.4/??flexible_css.js,flexible.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这个时候可以根据设计的图需求，在HTML文档的<code>&lt;body&gt;&lt;/body&gt;</code>中添加对应的HTML结构，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;item-section&quot; data-repeat=&quot;sections&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;item-section_header&quot;&gt;</span><br><span class="line">        &lt;h2&gt;&lt;img src=&quot;&#123;brannerImag&#125;&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li data-repeat=&quot;items&quot; class=&quot;flag&quot; role=&quot;link&quot; href=&quot;&#123;itemLink&#125;&quot;&gt;</span><br><span class="line">            &lt;a class=&quot;figure flag-item&quot; href=&quot;&#123;itemLink&#125;&quot;&gt;</span><br><span class="line">                &lt;img src=&quot;&#123;imgSrc&#125;&quot; alt=&quot;&quot;&gt;</span><br><span class="line">            &lt;/a&gt;</span><br><span class="line">            &lt;div class=&quot;figcaption flag-item&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;flag-title&quot;&gt;&lt;a href=&quot;&#123;itemLink&#125;&quot; title=&quot;&quot;&gt;&#123;poductName&#125;&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;flag-price&quot;&gt;&lt;span&gt;双11价&lt;/span&gt;&lt;strong&gt;¥&#123;price&#125;&lt;/strong&gt;&lt;small&gt;(&#123;preferential&#125;)&lt;/small&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;flag-type&quot;&gt;&#123;activityType&#125;&lt;/div&gt;</span><br><span class="line">                &lt;a class=&quot;flag-btn&quot; href=&quot;&#123;shopLink&#125;&quot;&gt;&#123;activeName&#125;&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><em>这仅是一个示例文档，大家可以根据自己风格写模板</em>。</p><p>为了能更好的测试页面，给其配置一点假数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//define data</span><br><span class="line">var pageData = &#123;</span><br><span class="line">    sections:[&#123;</span><br><span class="line">        &quot;brannerImag&quot;:&quot;http://xxx.cdn.com/B1PNLZKXXXXXaTXXXXXXXXXXXX-750-481.jpg&quot;,</span><br><span class="line">        items:[&#123;</span><br><span class="line">            &quot;itemLink&quot;: &quot;##&quot;,</span><br><span class="line">            &quot;imgSrc&quot;: &quot;https://placeimg.com/350/350/people/grayscale&quot;,</span><br><span class="line">            &quot;poductName&quot;:&quot;Carter&apos;s1年式灰色长袖连体衣包脚爬服全棉鲸鱼男婴儿童装115G093&quot;,</span><br><span class="line">            &quot;price&quot;: &quot;299.06&quot;,</span><br><span class="line">            &quot;preferential&quot;: &quot;满400减100&quot;,</span><br><span class="line">            &quot;activityType&quot;: &quot;1小时内热卖5885件&quot;,</span><br><span class="line">            &quot;shopLink&quot;:&quot;##&quot;,</span><br><span class="line">            &quot;activeName&quot;: &quot;马上抢！&quot;</span><br><span class="line">        &#125;</span><br><span class="line">            ....</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来的工作就是美化工作了。在写具体样式之前，有几个点需要先了解一下。</p><h3 id="把视觉稿中的px转换成rem"><a href="#把视觉稿中的px转换成rem" class="headerlink" title="把视觉稿中的px转换成rem"></a>把视觉稿中的<code>px</code>转换成<code>rem</code></h3><p>读到这里，大家应该都知道，我们接下来要做的事情，就是如何把视觉稿中的<code>px</code>转换成<code>rem</code>。在此花点时间解释一下。</p><p>首先，目前日常工作当中，视觉设计师给到前端开发人员手中的视觉稿尺寸一般是基于<code>640px</code>、<code>750px</code>以及<code>1125px</code>宽度为准。甚至为什么？大家应该懂的（考虑Retina屏）。</p><p>正如文章开头显示的示例设计稿，他就是一张以<code>750px</code>为基础设计的。那么问题来了，我们如何将设计稿中的各元素的<code>px</code>转换成<code>rem</code>。</p><p><img src="http://www.w3cplus.com/sites/default/files/blogs/2015/1511/rem-8.png" alt="Flexible实现手淘H5页面的终端适配"></p><p><em>我厂的视觉设计师想得还是很周到的，会帮你把相关的信息在视觉稿上标注出来</em>。</p><p>目前Flexible会将视觉稿分成<strong>100份</strong>（主要为了以后能更好的兼容<code>vh</code>和<code>vw</code>），而每一份被称为一个单位<code>a</code>。同时<code>1rem</code>单位被认定为<code>10a</code>。针对我们这份视觉稿可以计算出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1a   = 7.5px</span><br><span class="line">1rem = 75px</span><br></pre></td></tr></table></figure><p>那么我们这个示例的稿子就分成了<code>10a</code>，也就是整个宽度为<code>10rem</code>，<code>&lt;html&gt;</code>对应的<code>font-size</code>为<code>75px</code>：</p><p><img src="http://www.w3cplus.com/sites/default/files/blogs/2015/1511/rem-2.jpg" alt="Flexible实现手淘H5页面的终端适配"></p><p>这样一来，对于视觉稿上的元素尺寸换算，只需要原始的<code>px值</code>除以<code>rem基准值</code>即可。例如此例视觉稿中的图片，其尺寸是<code>176px * 176px</code>,转换成为<code>2.346667rem * 2.346667rem</code>。</p><h3 id="如何快速计算"><a href="#如何快速计算" class="headerlink" title="如何快速计算"></a>如何快速计算</h3><p>在实际生产当中，如果每一次计算<code>px</code>转换<code>rem</code>，或许会觉得非常麻烦，或许直接影响大家平时的开发效率。为了能让大家更快进行转换，我们团队内的同学各施所长，为<code>px</code>转换<code>rem</code>写了各式各样的小工具。</p><h4 id="CSSREM"><a href="#CSSREM" class="headerlink" title="CSSREM"></a>CSSREM</h4><p><a href="https://github.com/flashlizi/cssrem" target="_blank" rel="noopener">CSSREM</a>是一个CSS的<code>px</code>值转<code>rem</code>值的Sublime Text3自动完成插件。这个插件是由<a href="https://github.com/flashlizi" target="_blank" rel="noopener">@正霖</a>编写。先来看看插件的效果：</p><p><img src="http://www.w3cplus.com/sites/default/files/blogs/2015/1511/cssrem.gif" alt="Flexible实现手淘H5页面的终端适配"></p><p>有关于CSSREM如何安装、配置教程可以<a href="https://github.com/flashlizi/cssrem" target="_blank" rel="noopener">点击这里查阅</a>。</p><h4 id="CSS处理器"><a href="#CSS处理器" class="headerlink" title="CSS处理器"></a>CSS处理器</h4><p>除了使用编辑器的插件之外，还可以使用CSS的处理器来帮助大家处理。比如说Sass、LESS以及PostCSS这样的处理器。我们简单来看两个示例。</p><h5 id="Sass"><a href="#Sass" class="headerlink" title="Sass"></a>Sass</h5><p>使用<a href="http://www.w3cplus.com/blog/tags/302.html" target="_blank" rel="noopener">Sass</a>的同学，可以使用Sass的函数、混合宏这些功能来实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@function px2em($px, $base-font-size: 16px) &#123;</span><br><span class="line">    @if (unitless($px)) &#123;</span><br><span class="line">        @warn &quot;Assuming #&#123;$px&#125; to be in pixels, attempting to convert it into pixels for you&quot;;</span><br><span class="line">        @return px2em($px + 0px); // That may fail.</span><br><span class="line">    &#125; @else if (unit($px) == em) &#123;</span><br><span class="line">        @return $px;</span><br><span class="line">    &#125;</span><br><span class="line">    @return ($px / $base-font-size) * 1em;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除了使用Sass函数外，还可以使用Sass的混合宏：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">@mixin px2rem($property,$px-values,$baseline-px:16px,$support-for-ie:false)&#123;</span><br><span class="line">    //Conver the baseline into rems</span><br><span class="line">    $baseline-rem: $baseline-px / 1rem * 1;</span><br><span class="line">    //Print the first line in pixel values</span><br><span class="line">    @if $support-for-ie &#123;</span><br><span class="line">        #&#123;$property&#125;: $px-values;</span><br><span class="line">    &#125;</span><br><span class="line">    //if there is only one (numeric) value, return the property/value line for it.</span><br><span class="line">    @if type-of($px-values) == &quot;number&quot;&#123;</span><br><span class="line">        #&#123;$property&#125;: $px-values / $baseline-rem;</span><br><span class="line">    &#125;</span><br><span class="line">    @else &#123;</span><br><span class="line">        //Create an empty list that we can dump values into</span><br><span class="line">        $rem-values:();</span><br><span class="line">        @each $value in $px-values&#123;</span><br><span class="line">            // If the value is zero or not a number, return it</span><br><span class="line">            @if $value == 0 or type-of($value) != &quot;number&quot;&#123;</span><br><span class="line">                $rem-values: append($rem-values, $value / $baseline-rem);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        // Return the property and its list of converted values</span><br><span class="line">        #&#123;$property&#125;: $rem-values;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有关于更多的介绍，可以<a href="http://www.w3cplus.com/blog/tags/143.html" target="_blank" rel="noopener">点击这里</a>进行了解。</p><h5 id="PostCSS-px2rem"><a href="#PostCSS-px2rem" class="headerlink" title="PostCSS(px2rem)"></a>PostCSS(px2rem)</h5><p>除了Sass这样的CSS处理器这外，我们团队的<a href="http://weibo.com/u/2168835224" target="_blank" rel="noopener">@颂奇</a>同学还开发了一款<code>npm</code>的工具<a href="https://www.npmjs.com/package/px2rem" target="_blank" rel="noopener">px2rem</a>。安装好<a href="https://www.npmjs.com/package/px2rem" target="_blank" rel="noopener">px2rem</a>之后，可以在项目中直接使用。也可以使用<a href="http://www.w3cplus.com/blog/tags/516.html" target="_blank" rel="noopener">PostCSS</a>。使用PostCSS插件<a href="https://www.npmjs.com/package/postcss-px2rem" target="_blank" rel="noopener">postcss-px2rem</a>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require(&apos;gulp&apos;);</span><br><span class="line">var postcss = require(&apos;gulp-postcss&apos;);</span><br><span class="line">var px2rem = require(&apos;postcss-px2rem&apos;);</span><br><span class="line"></span><br><span class="line">gulp.task(&apos;default&apos;, function() &#123;</span><br><span class="line">    var processors = [px2rem(&#123;remUnit: 75&#125;)];</span><br><span class="line">    return gulp.src(&apos;./src/*.css&apos;)</span><br><span class="line">        .pipe(postcss(processors))</span><br><span class="line">        .pipe(gulp.dest(&apos;./dest&apos;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>除了在Gulp中配置外，还可以使用其他的配置方式，详细的介绍可以<a href="https://www.npmjs.com/package/postcss-px2rem" target="_blank" rel="noopener">点击这里</a>进行了解。</p><p>配置完成之后，在实际使用时，你只要像下面这样使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.selector &#123;</span><br><span class="line">    width: 150px;</span><br><span class="line">    height: 64px; /*px*/</span><br><span class="line">    font-size: 28px; /*px*/</span><br><span class="line">    border: 1px solid #ddd; /*no*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>px2rem</code>处理之后将会变成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.selector &#123;</span><br><span class="line">    width: 2rem;</span><br><span class="line">    border: 1px solid #ddd;</span><br><span class="line">&#125;</span><br><span class="line">[data-dpr=&quot;1&quot;] .selector &#123;</span><br><span class="line">    height: 32px;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line">[data-dpr=&quot;2&quot;] .selector &#123;</span><br><span class="line">    height: 64px;</span><br><span class="line">    font-size: 28px;</span><br><span class="line">&#125;</span><br><span class="line">[data-dpr=&quot;3&quot;] .selector &#123;</span><br><span class="line">    height: 96px;</span><br><span class="line">    font-size: 42px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在整个开发中有了这些工具之后，完全不用担心<code>px</code>值转<code>rem</code>值影响开发效率。</p><h3 id="字号不使用rem"><a href="#字号不使用rem" class="headerlink" title="字号不使用rem"></a>字号不使用<code>rem</code></h3><p>前面大家都见证了如何使用<code>rem</code>来完成H5适配。那么文本又将如何处理适配。是不是也通过<code>rem</code>来做自动适配。</p><p>显然，我们在iPhone3G和iPhone4的Retina屏下面，希望看到的文本字号是相同的。也就是说，我们<strong>不希望文本在Retina屏幕下变小</strong>，另外，我们<strong>希望在大屏手机上看到更多文本</strong>，以及，现在绝大多数的字体文件都自带一些点阵尺寸，通常是<code>16px</code>和<code>24px</code>，所以我们<strong>不希望出现13px和15px这样的奇葩尺寸</strong>。</p><p>如此一来，就决定了在制作H5的页面中，<code>rem</code>并不适合用到段落文本上。所以在Flexible整个适配方案中，考虑文本还是使用<code>px</code>作为单位。只不过使用<code>[data-dpr]</code>属性来区分不同<code>dpr</code>下的文本字号大小。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    width: 1rem; </span><br><span class="line">    height: 0.4rem;</span><br><span class="line">    font-size: 12px; // 默认写上dpr为1的fontSize</span><br><span class="line">&#125;</span><br><span class="line">[data-dpr=&quot;2&quot;] div &#123;</span><br><span class="line">    font-size: 24px;</span><br><span class="line">&#125;</span><br><span class="line">[data-dpr=&quot;3&quot;] div &#123;</span><br><span class="line">    font-size: 36px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了能更好的利于开发，在实际开发中，我们可以定制一个<a href="https://github.com/W3cplus/Sass-Resources/blob/master/mixins/_font-dpr.scss" target="_blank" rel="noopener"><code>font-dpr()</code></a>这样的Sass混合宏：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@mixin font-dpr($font-size)&#123;</span><br><span class="line">    font-size: $font-size;</span><br><span class="line"></span><br><span class="line">    [data-dpr=&quot;2&quot;] &amp; &#123;</span><br><span class="line">        font-size: $font-size * 2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [data-dpr=&quot;3&quot;] &amp; &#123;</span><br><span class="line">        font-size: $font-size * 3;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有了这样的混合宏之后，在开发中可以直接这样使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@include font-dpr(16px);</span><br></pre></td></tr></table></figure><p>当然这只是针对于描述性的文本，比如说段落文本。但有的时候文本的字号也需要分场景的，比如在项目中有一个slogan,业务方希望这个slogan能根据不同的终端适配。针对这样的场景，完全可以使用<code>rem</code>给slogan做计量单位。</p><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p>本来想把这个页面的用到的CSS(或SCSS)贴出来，但考虑篇幅过长，而且这么简单的页面，我想大家也能轻而易举搞定。所以就省略了。权当是给大家留的一个作业吧，感兴趣的可以试试Flexible能否帮你快速完成H5页面终端适配。</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>最后来看看真机上显示的效果吧。我截了两种设备下的效果：</p><h3 id="iPhone4"><a href="#iPhone4" class="headerlink" title="iPhone4"></a>iPhone4</h3><p><img src="http://www.w3cplus.com/sites/default/files/blogs/2015/1511/rem-9.jpg" alt="Flexible实现手淘H5页面的终端适配"></p><h3 id="iPhone6"><a href="#iPhone6" class="headerlink" title="iPhone6+"></a>iPhone6+</h3><p><img src="http://www.w3cplus.com/sites/default/files/blogs/2015/1511/rem-10.png" alt="Flexible实现手淘H5页面的终端适配"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实H5适配的方案有很多种，网上有关于这方面的教程也非常的多。不管哪种方法，都有其自己的优势和劣势。而本文主要介绍的是如何使用Flexible这样的一库来完成H5页面的终端适配。为什么推荐使用Flexible库来做H5页面的终端设备适配呢？主要因为这个库在手淘已经使用了近一年，而且已达到了较为稳定的状态。除此之外，你不需要考虑如何对元素进行折算，可以根据对应的视觉稿，直接切入。</p><p>当然，如果您有更好的H5页面终端适配方案，欢迎在下面的评论中与我们一起分享。如果您在使用这个库时，碰到任何问题，都可以在Github给我们提<a href="https://github.com/amfe/lib-flexible/issues" target="_blank" rel="noopener">Issue</a>。我们团队会努力解决相关需Issues。</p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>同学们反馈需要一个在线演示的DEMO。那么花了点时间写了个demo，希望对有需要的同学有所帮助。<strong>友情提示：DEMO未经过所有设备测试，可能在部分设备上有细节上的差异</strong></p><h5 id="DEMO-1"><a href="#DEMO-1" class="headerlink" title="DEMO"></a><a href="http://huodong.m.taobao.com/act/yibo.html" target="_blank" rel="noopener">DEMO</a></h5><p>请用手机扫下面的二维码</p><p>著作权归作者所有。</p><p><a href="https://www.w3cplus.com/mobile/lib-flexible-for-html5-layout.html[w3cplus.com](https://www.w3cplus.com/)" target="_blank" rel="noopener">https://www.w3cplus.com/mobile/lib-flexible-for-html5-layout.html[w3cplus.com](https://www.w3cplus.com/)</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运行环境 </tag>
            
            <tag> 移动端适配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转发】vue动态组件</title>
      <link href="/2019/08/14/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6/"/>
      <url>/2019/08/14/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/6-%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93/Vue/vue%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>转自：<a href="https://www.cnblogs.com/xiaohuochai/p/7395694.html" target="_blank" rel="noopener">Vue动态组件</a></p><h1 id="Vue动态组件"><a href="#Vue动态组件" class="headerlink" title="Vue动态组件"></a>Vue动态组件</h1><p><strong>前面的话</strong><br>让多个组件使用同一个挂载点，并动态切换，这就是动态组件。</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>通过使用保留的 <code>&lt;component&gt;</code> 元素，动态地绑定到它的 <code>is</code> 特性，可以实现动态组件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"change"</span>&gt;</span>切换页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">"currentView"</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> home = &#123;<span class="attr">template</span>:<span class="string">'&lt;div&gt;我是主页&lt;/div&gt;'</span>&#125;;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> post = &#123;<span class="attr">template</span>:<span class="string">'&lt;div&gt;我是提交页&lt;/div&gt;'</span>&#125;;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> archive = &#123;<span class="attr">template</span>:<span class="string">'&lt;div&gt;我是存档页&lt;/div&gt;'</span>&#125;;</span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  el: <span class="string">'#example'</span>,</span></span><br><span class="line">  components: &#123;</span><br><span class="line">    home,</span><br><span class="line">    post,</span><br><span class="line">    archive,</span><br><span class="line">  &#125;,</span><br><span class="line">  data:&#123;</span><br><span class="line">    index:0,</span><br><span class="line"><span class="javascript">    arr:[<span class="string">'home'</span>,<span class="string">'post'</span>,<span class="string">'archive'</span>],</span></span><br><span class="line">  &#125;,</span><br><span class="line">  computed:&#123;</span><br><span class="line">    currentView()&#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="keyword">this</span>.arr[<span class="keyword">this</span>.index];</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    change()&#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.index = (++<span class="keyword">this</span>.index)%<span class="number">3</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以直接绑定到组件对象上</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"change"</span>&gt;</span>切换页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">"currentView"</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  el: <span class="string">'#example'</span>,</span></span><br><span class="line">  data:&#123;</span><br><span class="line">    index:0,</span><br><span class="line">    arr:[</span><br><span class="line"><span class="xml">      &#123;template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是主页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`&#125;,</span></span><br><span class="line"><span class="xml">      &#123;template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是提交页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`&#125;,</span></span><br><span class="line"><span class="xml">      &#123;template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是存档页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`&#125;</span></span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  computed:&#123;</span><br><span class="line">    currentView()&#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="keyword">this</span>.arr[<span class="keyword">this</span>.index];</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    change()&#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.index = (++<span class="keyword">this</span>.index)%<span class="number">3</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h2><p><code>&lt;keep-alive&gt;</code> 包裹动态组件时，会缓存不活动的组件实例，而不是销毁它们。和 <code>&lt;transition&gt;</code> 相似，<code>&lt;keep-alive&gt;</code> 是一个抽象组件：它自身不会渲染一个 DOM 元素，也不会出现在父组件链中</p><p><strong>【基础用法】</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"change"</span>&gt;</span>切换页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">"currentView"</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  el: <span class="string">'#example'</span>,</span></span><br><span class="line">  data:&#123;</span><br><span class="line">    index:0,</span><br><span class="line">    arr:[</span><br><span class="line"><span class="xml">      &#123;template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是主页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`&#125;,</span></span><br><span class="line"><span class="xml">      &#123;template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是提交页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`&#125;,</span></span><br><span class="line"><span class="xml">      &#123;template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是存档页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`&#125;</span></span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  computed:&#123;</span><br><span class="line">    currentView()&#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="keyword">this</span>.arr[<span class="keyword">this</span>.index];</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    change()&#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> len = <span class="keyword">this</span>.arr.length;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.index = (++<span class="keyword">this</span>.index)% len;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>【条件判断】</strong><br>如果有多个条件性的子元素，<code>&lt;keep-alive&gt;</code> 要求同时只有一个子元素被渲染</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"change"</span>&gt;</span>切换页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">home</span> <span class="attr">v-if</span>=<span class="string">"index===0"</span>&gt;</span><span class="tag">&lt;/<span class="name">home</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">posts</span> <span class="attr">v-else-if</span>=<span class="string">"index===1"</span>&gt;</span><span class="tag">&lt;/<span class="name">posts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">archive</span> <span class="attr">v-else</span>&gt;</span><span class="tag">&lt;/<span class="name">archive</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  el: <span class="string">'#example'</span>,</span></span><br><span class="line">  components:&#123;</span><br><span class="line"><span class="xml">    home:&#123;template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是主页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`&#125;,</span></span><br><span class="line"><span class="xml">    posts:&#123;template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是提交页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`&#125;,</span></span><br><span class="line"><span class="xml">    archive:&#123;template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是存档页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`&#125;,</span></span><br><span class="line">  &#125;,</span><br><span class="line">  data:&#123;</span><br><span class="line">    index:0,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    change()&#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> len = <span class="built_in">Object</span>.keys(<span class="keyword">this</span>.$options.components).length;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.index = (++<span class="keyword">this</span>.index)%len;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>【activated 和 deactivated】</strong></p><p><code>activated</code> 和 <code>deactivated</code> 在 <code>&lt;keep-alive&gt;</code> 树内的所有嵌套组件中触发</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"change"</span>&gt;</span>切换页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">"currentView"</span> @<span class="attr">pass-data</span>=<span class="string">"getData"</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  el: <span class="string">'#example'</span>,</span></span><br><span class="line">  data:&#123;</span><br><span class="line">    index:0,</span><br><span class="line"><span class="javascript">    msg:<span class="string">''</span>,    </span></span><br><span class="line">    arr:[</span><br><span class="line">      &#123; </span><br><span class="line"><span class="xml">        template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是主页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`,</span></span><br><span class="line">        activated()&#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.$emit(<span class="string">'pass-data'</span>,<span class="string">'主页被添加'</span>);</span></span><br><span class="line">        &#125;,</span><br><span class="line">        deactivated()&#123;</span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.$emit(<span class="string">'pass-data'</span>,<span class="string">'主页被移除'</span>);</span></span><br><span class="line">        &#125;,        </span><br><span class="line">      &#125;,</span><br><span class="line"><span class="xml">      &#123;template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是提交页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`&#125;,</span></span><br><span class="line"><span class="xml">      &#123;template:`<span class="tag">&lt;<span class="name">div</span>&gt;</span>我是存档页<span class="tag">&lt;/<span class="name">div</span>&gt;</span>`&#125;</span></span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  computed:&#123;</span><br><span class="line">    currentView()&#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="keyword">this</span>.arr[<span class="keyword">this</span>.index];</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    change()&#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> len = <span class="keyword">this</span>.arr.length;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.index = (++<span class="keyword">this</span>.index)% len;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    getData(value)&#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.msg = value;</span></span><br><span class="line"><span class="javascript">      setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.msg = <span class="string">''</span>;</span></span><br><span class="line">      &#125;,500)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>【include和exclude】</strong></p><p>include 和 exclude 属性允许组件有条件地缓存。二者都可以用逗号分隔字符串、正则表达式或一个数组来表示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 逗号分隔字符串 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">keep-alive</span> <span class="attr">include</span>=<span class="string">"a,b"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">"view"</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 正则表达式 (使用 v-bind) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">keep-alive</span> <span class="attr">:include</span>=<span class="string">"/a|b/"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">"view"</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Array (use v-bind) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">keep-alive</span> <span class="attr">:include</span>=<span class="string">"['a', 'b']"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">"view"</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br></pre></td></tr></table></figure><p>匹配首先检查组件自身的 name 选项，如果 name 选项不可用，则匹配它的局部注册名称（父组件 components 选项的键值）。匿名组件不能被匹配</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">keep-alive</span> <span class="attr">include</span>=<span class="string">"home,archive"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">"currentView"</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面的代码，表示只缓存home和archive，不缓存posts</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"change"</span>&gt;</span>切换页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">keep-alive</span> <span class="attr">include</span>=<span class="string">"home,archive"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">"currentView"</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">keep-alive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">  el: <span class="string">'#example'</span>,</span></span><br><span class="line">  data:&#123;</span><br><span class="line">    index:0,   </span><br><span class="line">    arr:[</span><br><span class="line"><span class="javascript">      &#123;<span class="attr">name</span>:<span class="string">'home'</span>,<span class="attr">template</span>:<span class="string">`&lt;div&gt;我是主页&lt;/div&gt;`</span>&#125;,</span></span><br><span class="line"><span class="javascript">      &#123;<span class="attr">name</span>:<span class="string">'posts'</span>,<span class="attr">template</span>:<span class="string">`&lt;div&gt;我是提交页&lt;/div&gt;`</span>&#125;,</span></span><br><span class="line"><span class="javascript">      &#123;<span class="attr">name</span>:<span class="string">'archive'</span>,<span class="attr">template</span>:<span class="string">`&lt;div&gt;我是存档页&lt;/div&gt;`</span>&#125;</span></span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  computed:&#123;</span><br><span class="line">    currentView()&#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="keyword">this</span>.arr[<span class="keyword">this</span>.index];</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    change()&#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> len = <span class="keyword">this</span>.arr.length;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.index = (++<span class="keyword">this</span>.index)% len;</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架和类库 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
